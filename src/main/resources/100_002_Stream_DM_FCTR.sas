/**************************************************************************** 
 * Job:             100_002_Stream_DM_FCTR                A5X3Z45Z.AF00000O * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: bravo14                                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DMFCTR_REP/Jobs                                    * 
 *                                                                          * 
 * Server:          SASApp                                A5C46MZY.AQ000002 * 
 *                                                                          * 
 * Generated on:    16 Июль 2013 г. 18:09:08 MSD                            * 
 * Generated by:    sasdwh                                                  * 
 * Version:         SAS Data Integration Studio 4.5                         * 
 ****************************************************************************/ 

/* General macro variables  */ 
%let jobID = %quote(A5X3Z45Z.AF00000O);
%let etls_jobName = %nrquote(100_002_Stream_DM_FCTR);
%let etls_userID = %nrquote(sasdwh);

/* Setup to capture return codes  */ 
%global job_rc trans_rc sqlrc ;
%let sysrc = 0;
%let job_rc = 0;
%let trans_rc = 0;
%let sqlrc = 0;
%global etls_stepStartTime; 
/* initialize syserr to 0 */
data _null_; run;

%macro rcSet(error); 
   %if (&error gt &trans_rc) %then 
      %let trans_rc = &error;
   %if (&error gt &job_rc) %then 
      %let job_rc = &error;
%mend rcSet; 

%macro rcSetDS(error); 
   if &error gt input(symget('trans_rc'),12.) then 
      call symput('trans_rc',trim(left(put(&error,12.))));
   if &error gt input(symget('job_rc'),12.) then 
      call symput('job_rc',trim(left(put(&error,12.))));
%mend rcSetDS; 

/* Create metadata macro variables */
%let IOMServer      = %nrquote(SASApp);
%let metaPort       = %nrquote(8561);
%let metaServer     = %nrquote(bravo14);

/* Set metadata options */
options metaport       = &metaPort 
        metaserver     = "&metaServer"; 

/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A5X3Z45Z.AH00004D * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00004D);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_start.sas 1747 2012-08-01 11:26:13Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует начало модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_start;

   /* Продолжаем поток (или создаем новый) */
   %local lmvStreamName;
   %if %sysfunc(sysexist(LSB_JOBNAME)) %then
      %let lmvStreamName = %scan(%sysfunc(sysget(LSB_JOBNAME)), 3, :);
   %else
      %let lmvStreamName = ;

   %job_continue_reg(mpJobType=STREAM, mpJobName=&lmvStreamName, mpPostEvent=N, mpForcedStart=Y);

   /* Для DI, начинаем поток заново, если старый был начат не сегодня */
   %if %length(&lmvStreamName) eq 0 and &STREAM_START_DT ne %sysfunc(today()) %then %do;
      %job_start_reg(mpJobType=STREAM, mpParentJobId=, mpJobName=&lmvStreamName.);
   %end;

   /* Начинаем модуль */
   %job_start_reg(mpJobType=JOB, mpParentJobId=&STREAM_ID, mpJobName=&ETLS_JobName.);

%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Начать модуль **/

/**************************************************************************** 
 * Job:             101_001_Mart_FACTORING_PORTFOLIO_FACT A5X3Z45Z.AF00000H * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: bravo14                                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DMFCTR_REP/Jobs/Includes                           * 
 *                                                                          * 
 * Server:          SASApp                                A5C46MZY.AQ000002 * 
 *                                                                          * 
 * Source Tables:   FINANCIAL_ACCOUNT -                   A569C89V.AE0000FK * 
 *                   dwh_dds.FINANCIAL_ACCOUNT                              * 
 *                  INDUSTRY - dwh_dds.INDUSTRY           A569C89V.AE0000GG * 
 *                  FINANCIAL_ACCOUNT_CHNG -              A569C89V.AE0000FM * 
 *                   dwh_dds.FINANCIAL_ACCOUNT_CHNG                         * 
 *                  STATE_REGION - dwh_dds.STATE_REGION   A569C89V.AE0000JD * 
 *                  FINANCIAL_ACCOUNT_ASSOC -             A569C89V.AE0000FL * 
 *                   dwh_dds.FINANCIAL_ACCOUNT_ASSOC                        * 
 *                  COUNTERPARTY_X_SEGMENT -              A569C89V.AE0000ES * 
 *                   dwh_dds.COUNTERPARTY_X_SEGMENT                         * 
 *                  CUSTOMER_X_FINANCIAL_ACCOUNT -        A569C89V.AE0000F2 * 
 *                   dwh_dds.CUSTOMER_X_FINANCIAL_ACCOUNT                   * 
 *                  SEGMENT - dwh_dds.SEGMENT             A569C89V.AE0000J9 * 
 *                  CREDIT_FACILITY -                     A569C89V.AE0000EV * 
 *                   dwh_dds.CREDIT_FACILITY                                * 
 *                  EXTERNAL_ORG - dwh_dds.EXTERNAL_ORG   A569C89V.AE0000FG * 
 *                  LOAN_ACCOUNT_CHNG -                   A569C89V.AE0000IR * 
 *                   dwh_dds.LOAN_ACCOUNT_CHNG                              * 
 *                  CUSTOMER - dwh_dds.CUSTOMER           A569C89V.AE0000EZ * 
 *                  LOAN_ACCOUNT - dwh_dds.LOAN_ACCOUNT   A569C89V.AE0000IQ * 
 *                  IRB_COUNTERPARTY_ADDRESS -            A569C89V.AE0000H5 * 
 *                   dwh_dds.IRB_COUNTERPARTY_ADDRESS                       * 
 *                  IRB_FINANCIAL_ASSOCIATE_X_CPTY -      A569C89V.AE0000I6 * 
 *                  dwh_dds.IRB_FINANCIAL_ASSOCIATE_X_C                     * 
 *                  PTY                                                     * 
 *                  FINANCIAL_ASSOCIATE -                 A569C89V.AE0000FP * 
 *                   dwh_dds.FINANCIAL_ASSOCIATE                            * 
 *                  FACTORING_PORTFOLIO_FACT -            A5X3Z45Z.AE00001H * 
 *                   work_fct.FACTORING_PORTFOLIO_FACT                      * 
 *                  CUSTOMER - work_fct.CUSTOMER          A5X3Z45Z.AE00001G * 
 *                  EMPLOYEE - dwh_dds.EMPLOYEE           A569C89V.AE0000FA * 
 *                  CAL_DATE - dwh_dds.CAL_DATE           A569C89V.AE0000EJ * 
 * Target Tables:   FACTORING_PORTFOLIO_FACT -            A5X3Z45Z.AE00001H * 
 *                   work_fct.FACTORING_PORTFOLIO_FACT                      * 
 *                  CUSTOMER - work_fct.CUSTOMER          A5X3Z45Z.AE00001G * 
 *                  FACTORING_PORTFOLIO_FACT -            A5X3Z45Z.AE00001C * 
 *                   dm_fctr.FACTORING_PORTFOLIO_FACT                       * 
 *                  CUSTOMER - dm_fctr.CUSTOMER           A5X3Z45Z.AE00001A * 
 *                  ACCOUNT_OFFICER -                     A5X3Z45Z.AE000018 * 
 *                   dm_fctr.ACCOUNT_OFFICER                                * 
 *                  DATE_DIM - dm_fctr.DATE_DIM           A5X3Z45Z.AE00001B * 
 *                                                                          * 
 * Generated on:    16 Июль 2013 г. 18:09:08 MSD                            * 
 * Generated by:    sasdwh                                                  * 
 * Version:         SAS Data Integration Studio 4.5                         * 
 ****************************************************************************/ 

/* General macro variables  */ 
%let jobID = %quote(A5X3Z45Z.AF00000H);
%let etls_jobName = %nrquote(101_001_Mart_FACTORING_PORTFOLIO_FACT);
%let etls_userID = %nrquote(sasdwh);


/* Create metadata macro variables */
%let IOMServer      = %nrquote(SASApp);
%let metaPort       = %nrquote(8561);
%let metaServer     = %nrquote(bravo14);

/* Set metadata options */
options metaport       = &metaPort 
        metaserver     = "&metaServer"; 

/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A5X3Z45Z.AH00003D * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00003D);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_start.sas 1747 2012-08-01 11:26:13Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует начало модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_start;

   /* Продолжаем поток (или создаем новый) */
   %local lmvStreamName;
   %if %sysfunc(sysexist(LSB_JOBNAME)) %then
      %let lmvStreamName = %scan(%sysfunc(sysget(LSB_JOBNAME)), 3, :);
   %else
      %let lmvStreamName = ;

   %job_continue_reg(mpJobType=STREAM, mpJobName=&lmvStreamName, mpPostEvent=N, mpForcedStart=Y);

   /* Для DI, начинаем поток заново, если старый был начат не сегодня */
   %if %length(&lmvStreamName) eq 0 and &STREAM_START_DT ne %sysfunc(today()) %then %do;
      %job_start_reg(mpJobType=STREAM, mpParentJobId=, mpJobName=&lmvStreamName.);
   %end;

   /* Начинаем модуль */
   %job_start_reg(mpJobType=JOB, mpParentJobId=&STREAM_ID, mpJobName=&ETLS_JobName.);

%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Начать модуль **/

/*==========================================================================* 
 * Step:            Mart_FACTORING_PORTFOLIO_FACT         A5X3Z45Z.AH00003E * 
 * Transform:       User Written                                            * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Tables:   FINANCIAL_ACCOUNT -                   A569C89V.AE0000FK * 
 *                   dwh_dds.FINANCIAL_ACCOUNT                              * 
 *                  INDUSTRY - dwh_dds.INDUSTRY           A569C89V.AE0000GG * 
 *                  FINANCIAL_ACCOUNT_CHNG -              A569C89V.AE0000FM * 
 *                   dwh_dds.FINANCIAL_ACCOUNT_CHNG                         * 
 *                  STATE_REGION - dwh_dds.STATE_REGION   A569C89V.AE0000JD * 
 *                  FINANCIAL_ACCOUNT_ASSOC -             A569C89V.AE0000FL * 
 *                   dwh_dds.FINANCIAL_ACCOUNT_ASSOC                        * 
 *                  COUNTERPARTY_X_SEGMENT -              A569C89V.AE0000ES * 
 *                   dwh_dds.COUNTERPARTY_X_SEGMENT                         * 
 *                  CUSTOMER_X_FINANCIAL_ACCOUNT -        A569C89V.AE0000F2 * 
 *                   dwh_dds.CUSTOMER_X_FINANCIAL_ACCOUNT                   * 
 *                  SEGMENT - dwh_dds.SEGMENT             A569C89V.AE0000J9 * 
 *                  CREDIT_FACILITY -                     A569C89V.AE0000EV * 
 *                   dwh_dds.CREDIT_FACILITY                                * 
 *                  EXTERNAL_ORG - dwh_dds.EXTERNAL_ORG   A569C89V.AE0000FG * 
 *                  LOAN_ACCOUNT_CHNG -                   A569C89V.AE0000IR * 
 *                   dwh_dds.LOAN_ACCOUNT_CHNG                              * 
 *                  CUSTOMER - dwh_dds.CUSTOMER           A569C89V.AE0000EZ * 
 *                  LOAN_ACCOUNT - dwh_dds.LOAN_ACCOUNT   A569C89V.AE0000IQ * 
 *                  IRB_COUNTERPARTY_ADDRESS -            A569C89V.AE0000H5 * 
 *                   dwh_dds.IRB_COUNTERPARTY_ADDRESS                       * 
 *                  IRB_FINANCIAL_ASSOCIATE_X_CPTY -      A569C89V.AE0000I6 * 
 *                  dwh_dds.IRB_FINANCIAL_ASSOCIATE_X_C                     * 
 *                  PTY                                                     * 
 *                  FINANCIAL_ASSOCIATE -                 A569C89V.AE0000FP * 
 *                   dwh_dds.FINANCIAL_ASSOCIATE                            * 
 * Target Tables:   FACTORING_PORTFOLIO_FACT -            A5X3Z45Z.AE00001H * 
 *                   work_fct.FACTORING_PORTFOLIO_FACT                      * 
 *                  CUSTOMER - work_fct.CUSTOMER          A5X3Z45Z.AE00001G * 
 *                                                                          * 
 * User Written:    SourceCode                                              * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00003E);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 16;
%let _INPUT = dwh_dds.FINANCIAL_ACCOUNT;
%let _INPUT_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT_engine = ORACLE;
%let _INPUT_memtype = DATA;
%let _INPUT_options = %nrquote();
%let _INPUT_alter = %nrquote();
%let _INPUT_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/FINANCIAL_ACCOUNT%(Table%));
%let _INPUT_type = 1;
%let _INPUT_label = %nrquote();

%let _INPUT1 = dwh_dds.FINANCIAL_ACCOUNT;
%let _INPUT1_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT1_engine = ORACLE;
%let _INPUT1_memtype = DATA;
%let _INPUT1_options = %nrquote();
%let _INPUT1_alter = %nrquote();
%let _INPUT1_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/FINANCIAL_ACCOUNT%(Table%));
%let _INPUT1_type = 1;
%let _INPUT1_label = %nrquote();

%let _INPUT2 = dwh_dds.INDUSTRY;
%let _INPUT2_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT2_engine = ORACLE;
%let _INPUT2_memtype = DATA;
%let _INPUT2_options = %nrquote();
%let _INPUT2_alter = %nrquote();
%let _INPUT2_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/INDUSTRY%(Table%));
%let _INPUT2_type = 1;
%let _INPUT2_label = %nrquote();

%let _INPUT3 = dwh_dds.FINANCIAL_ACCOUNT_CHNG;
%let _INPUT3_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT3_engine = ORACLE;
%let _INPUT3_memtype = DATA;
%let _INPUT3_options = %nrquote();
%let _INPUT3_alter = %nrquote();
%let _INPUT3_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/FINANCIAL_ACCOUNT_CHNG%(Table%));
%let _INPUT3_type = 1;
%let _INPUT3_label = %nrquote();

%let _INPUT4 = dwh_dds.STATE_REGION;
%let _INPUT4_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT4_engine = ORACLE;
%let _INPUT4_memtype = DATA;
%let _INPUT4_options = %nrquote();
%let _INPUT4_alter = %nrquote();
%let _INPUT4_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/STATE_REGION%(Table%));
%let _INPUT4_type = 1;
%let _INPUT4_label = %nrquote();

%let _INPUT5 = dwh_dds.FINANCIAL_ACCOUNT_ASSOC;
%let _INPUT5_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT5_engine = ORACLE;
%let _INPUT5_memtype = DATA;
%let _INPUT5_options = %nrquote();
%let _INPUT5_alter = %nrquote();
%let _INPUT5_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/FINANCIAL_ACCOUNT_ASSOC%(Table%));
%let _INPUT5_type = 1;
%let _INPUT5_label = %nrquote();

%let _INPUT6 = dwh_dds.COUNTERPARTY_X_SEGMENT;
%let _INPUT6_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT6_engine = ORACLE;
%let _INPUT6_memtype = DATA;
%let _INPUT6_options = %nrquote();
%let _INPUT6_alter = %nrquote();
%let _INPUT6_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/COUNTERPARTY_X_SEGMENT%(Table%));
%let _INPUT6_type = 1;
%let _INPUT6_label = %nrquote();

%let _INPUT7 = dwh_dds.CUSTOMER_X_FINANCIAL_ACCOUNT;
%let _INPUT7_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT7_engine = ORACLE;
%let _INPUT7_memtype = DATA;
%let _INPUT7_options = %nrquote();
%let _INPUT7_alter = %nrquote();
%let _INPUT7_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/CUSTOMER_X_FINANCIAL_ACCOUNT%(Table%));
%let _INPUT7_type = 1;
%let _INPUT7_label = %nrquote();

%let _INPUT8 = dwh_dds.SEGMENT;
%let _INPUT8_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT8_engine = ORACLE;
%let _INPUT8_memtype = DATA;
%let _INPUT8_options = %nrquote();
%let _INPUT8_alter = %nrquote();
%let _INPUT8_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/SEGMENT%(Table%));
%let _INPUT8_type = 1;
%let _INPUT8_label = %nrquote();

%let _INPUT9 = dwh_dds.CREDIT_FACILITY;
%let _INPUT9_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT9_engine = ORACLE;
%let _INPUT9_memtype = DATA;
%let _INPUT9_options = %nrquote();
%let _INPUT9_alter = %nrquote();
%let _INPUT9_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/CREDIT_FACILITY%(Table%));
%let _INPUT9_type = 1;
%let _INPUT9_label = %nrquote();

%let _INPUT10 = dwh_dds.EXTERNAL_ORG;
%let _INPUT10_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT10_engine = ORACLE;
%let _INPUT10_memtype = DATA;
%let _INPUT10_options = %nrquote();
%let _INPUT10_alter = %nrquote();
%let _INPUT10_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/EXTERNAL_ORG%(Table%));
%let _INPUT10_type = 1;
%let _INPUT10_label = %nrquote();

%let _INPUT11 = dwh_dds.LOAN_ACCOUNT_CHNG;
%let _INPUT11_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT11_engine = ORACLE;
%let _INPUT11_memtype = DATA;
%let _INPUT11_options = %nrquote();
%let _INPUT11_alter = %nrquote();
%let _INPUT11_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/LOAN_ACCOUNT_CHNG%(Table%));
%let _INPUT11_type = 1;
%let _INPUT11_label = %nrquote();

%let _INPUT12 = dwh_dds.CUSTOMER;
%let _INPUT12_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT12_engine = ORACLE;
%let _INPUT12_memtype = DATA;
%let _INPUT12_options = %nrquote();
%let _INPUT12_alter = %nrquote();
%let _INPUT12_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/CUSTOMER%(Table%));
%let _INPUT12_type = 1;
%let _INPUT12_label = %nrquote();

%let _INPUT13 = dwh_dds.LOAN_ACCOUNT;
%let _INPUT13_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT13_engine = ORACLE;
%let _INPUT13_memtype = DATA;
%let _INPUT13_options = %nrquote();
%let _INPUT13_alter = %nrquote();
%let _INPUT13_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/LOAN_ACCOUNT%(Table%));
%let _INPUT13_type = 1;
%let _INPUT13_label = %nrquote();

%let _INPUT14 = dwh_dds.IRB_COUNTERPARTY_ADDRESS;
%let _INPUT14_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT14_engine = ORACLE;
%let _INPUT14_memtype = DATA;
%let _INPUT14_options = %nrquote();
%let _INPUT14_alter = %nrquote();
%let _INPUT14_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/IRB_COUNTERPARTY_ADDRESS%(Table%));
%let _INPUT14_type = 1;
%let _INPUT14_label = %nrquote();

%let _INPUT15 = dwh_dds.IRB_FINANCIAL_ASSOCIATE_X_CPTY;
%let _INPUT15_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT15_engine = ORACLE;
%let _INPUT15_memtype = DATA;
%let _INPUT15_options = %nrquote();
%let _INPUT15_alter = %nrquote();
%let _INPUT15_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/IRB_FINANCIAL_ASSOCIATE_X_CPTY%(Table%));
%let _INPUT15_type = 1;
%let _INPUT15_label = %nrquote();

%let _INPUT16 = dwh_dds.FINANCIAL_ASSOCIATE;
%let _INPUT16_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT16_engine = ORACLE;
%let _INPUT16_memtype = DATA;
%let _INPUT16_options = %nrquote();
%let _INPUT16_alter = %nrquote();
%let _INPUT16_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/FINANCIAL_ASSOCIATE%(Table%));
%let _INPUT16_type = 1;
%let _INPUT16_label = %nrquote();

%let _OUTPUT_count = 2;
%let _OUTPUT = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT_connect = ;
%let _OUTPUT_engine = BASE;
%let _OUTPUT_memtype = DATA;
%let _OUTPUT_options = %nrquote(COMPRESS = Binary);
%let _OUTPUT_alter = %nrquote();
%let _OUTPUT_path = %nrquote(/DWH_DMFCTR_REP/Tables/WORK_FCT/FACTORING_PORTFOLIO_FACT%(Table%));
%let _OUTPUT_type = 1;
%let _OUTPUT_label = %nrquote();
/* List of target columns to keep  */ 
%let _OUTPUT_keep = ACCOUNT_CONTRACT_RK AGREEMENT_NUMBER START_CONTRACT_DT 
        CLOSE_CONTRACT_DT EXPIRE_DT CONTRACT_OFFICER_RK CUSTOMER_RK 
        CREDIT_FACILITY_RK EMPLOYEE_RK AVAILABILITY_PERIOD_DT LIMIT_AMT 
        CURRENT_DT OPEN_CONTRACT_CNT CLOSE_CONTRACT_CNT PROFIT_CENTER 
        OPEN_INVOICE_CNT CLOSE_INVOICE_CNT CURRENT_EXPOSURE_AMT 
        EXPOSURE_TURNOVER_AMT TOTAL_TURNOVER_AMT CURRENT_TOTAL_AMT;
%let _OUTPUT_col_count = 21;
%let _OUTPUT_col0_name = ACCOUNT_CONTRACT_RK;
%let _OUTPUT_col0_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT_col0_length = 8;
%let _OUTPUT_col0_type = ;
%let _OUTPUT_col0_format = 10.;
%let _OUTPUT_col0_informat = 10.;
%let _OUTPUT_col0_label = %nrquote(ACCOUNT_RK);
%let _OUTPUT_col0_exp = ;
%let _OUTPUT_col0_input_count = 0;
%let _OUTPUT_col1_name = AGREEMENT_NUMBER;
%let _OUTPUT_col1_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT_col1_length = 100;
%let _OUTPUT_col1_type = $;
%let _OUTPUT_col1_format = $100.;
%let _OUTPUT_col1_informat = $100.;
%let _OUTPUT_col1_label = %nrquote(ACCOUNT_REGISTRATION_NM);
%let _OUTPUT_col1_exp = ;
%let _OUTPUT_col1_input_count = 0;
%let _OUTPUT_col2_name = START_CONTRACT_DT;
%let _OUTPUT_col2_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT_col2_length = 8;
%let _OUTPUT_col2_type = ;
%let _OUTPUT_col2_format = DATETIME20.;
%let _OUTPUT_col2_informat = DATETIME20.;
%let _OUTPUT_col2_label = %nrquote(OPEN_DT);
%let _OUTPUT_col2_exp = ;
%let _OUTPUT_col2_input_count = 0;
%let _OUTPUT_col3_name = CLOSE_CONTRACT_DT;
%let _OUTPUT_col3_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT_col3_length = 8;
%let _OUTPUT_col3_type = ;
%let _OUTPUT_col3_format = DATETIME20.;
%let _OUTPUT_col3_informat = DATETIME20.;
%let _OUTPUT_col3_label = %nrquote(CLOSE_DT);
%let _OUTPUT_col3_exp = ;
%let _OUTPUT_col3_input_count = 0;
%let _OUTPUT_col4_name = EXPIRE_DT;
%let _OUTPUT_col4_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT_col4_length = 8;
%let _OUTPUT_col4_type = ;
%let _OUTPUT_col4_format = ;
%let _OUTPUT_col4_informat = ;
%let _OUTPUT_col4_label = %nrquote();
%let _OUTPUT_col4_exp = ;
%let _OUTPUT_col4_input_count = 0;
%let _OUTPUT_col5_name = CONTRACT_OFFICER_RK;
%let _OUTPUT_col5_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT_col5_length = 8;
%let _OUTPUT_col5_type = ;
%let _OUTPUT_col5_format = ;
%let _OUTPUT_col5_informat = ;
%let _OUTPUT_col5_label = %nrquote();
%let _OUTPUT_col5_exp = ;
%let _OUTPUT_col5_input_count = 0;
%let _OUTPUT_col6_name = CUSTOMER_RK;
%let _OUTPUT_col6_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT_col6_length = 8;
%let _OUTPUT_col6_type = ;
%let _OUTPUT_col6_format = 10.;
%let _OUTPUT_col6_informat = 10.;
%let _OUTPUT_col6_label = %nrquote(CUSTOMER_RK);
%let _OUTPUT_col6_input0 = CUSTOMER_RK;
%let _OUTPUT_col6_exp = ;
%let _OUTPUT_col6_input = CUSTOMER_RK;
%let _OUTPUT_col6_input_count = 1;
%let _OUTPUT_col7_name = CREDIT_FACILITY_RK;
%let _OUTPUT_col7_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT_col7_length = 8;
%let _OUTPUT_col7_type = ;
%let _OUTPUT_col7_format = 10.;
%let _OUTPUT_col7_informat = 10.;
%let _OUTPUT_col7_label = %nrquote(CREDIT_FACILITY_RK);
%let _OUTPUT_col7_input0 = CREDIT_FACILITY_RK;
%let _OUTPUT_col7_exp = ;
%let _OUTPUT_col7_input = CREDIT_FACILITY_RK;
%let _OUTPUT_col7_input_count = 1;
%let _OUTPUT_col8_name = EMPLOYEE_RK;
%let _OUTPUT_col8_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT_col8_length = 8;
%let _OUTPUT_col8_type = ;
%let _OUTPUT_col8_format = 10.;
%let _OUTPUT_col8_informat = 10.;
%let _OUTPUT_col8_label = %nrquote(EMPLOYEE_RK);
%let _OUTPUT_col8_input0 = EMPLOYEE_RK;
%let _OUTPUT_col8_exp = ;
%let _OUTPUT_col8_input = EMPLOYEE_RK;
%let _OUTPUT_col8_input_count = 1;
%let _OUTPUT_col9_name = AVAILABILITY_PERIOD_DT;
%let _OUTPUT_col9_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT_col9_length = 8;
%let _OUTPUT_col9_type = ;
%let _OUTPUT_col9_format = DATETIME20.;
%let _OUTPUT_col9_informat = DATETIME20.;
%let _OUTPUT_col9_label = %nrquote(EXPIRATION_DT);
%let _OUTPUT_col9_exp = ;
%let _OUTPUT_col9_input_count = 0;
%let _OUTPUT_col10_name = LIMIT_AMT;
%let _OUTPUT_col10_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT_col10_length = 8;
%let _OUTPUT_col10_type = ;
%let _OUTPUT_col10_format = 21.8;
%let _OUTPUT_col10_informat = 21.8;
%let _OUTPUT_col10_label = %nrquote(LIMIT_AMT);
%let _OUTPUT_col10_input0 = LIMIT_AMT;
%let _OUTPUT_col10_exp = ;
%let _OUTPUT_col10_input = LIMIT_AMT;
%let _OUTPUT_col10_input_count = 1;
%let _OUTPUT_col11_name = CURRENT_DT;
%let _OUTPUT_col11_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT_col11_length = 8;
%let _OUTPUT_col11_type = ;
%let _OUTPUT_col11_format = DATETIME20.;
%let _OUTPUT_col11_informat = DATETIME20.;
%let _OUTPUT_col11_label = %nrquote();
%let _OUTPUT_col11_exp = ;
%let _OUTPUT_col11_input_count = 0;
%let _OUTPUT_col12_name = OPEN_CONTRACT_CNT;
%let _OUTPUT_col12_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT_col12_length = 8;
%let _OUTPUT_col12_type = ;
%let _OUTPUT_col12_format = 21.8;
%let _OUTPUT_col12_informat = 21.8;
%let _OUTPUT_col12_label = %nrquote();
%let _OUTPUT_col12_exp = ;
%let _OUTPUT_col12_input_count = 0;
%let _OUTPUT_col13_name = CLOSE_CONTRACT_CNT;
%let _OUTPUT_col13_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT_col13_length = 8;
%let _OUTPUT_col13_type = ;
%let _OUTPUT_col13_format = 21.8;
%let _OUTPUT_col13_informat = 21.8;
%let _OUTPUT_col13_label = %nrquote();
%let _OUTPUT_col13_exp = ;
%let _OUTPUT_col13_input_count = 0;
%let _OUTPUT_col14_name = PROFIT_CENTER;
%let _OUTPUT_col14_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT_col14_length = 32;
%let _OUTPUT_col14_type = $;
%let _OUTPUT_col14_format = $32.;
%let _OUTPUT_col14_informat = $32.;
%let _OUTPUT_col14_label = %nrquote(IRB_PROFIT_CENTER_ID);
%let _OUTPUT_col14_exp = ;
%let _OUTPUT_col14_input_count = 0;
%let _OUTPUT_col15_name = OPEN_INVOICE_CNT;
%let _OUTPUT_col15_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT_col15_length = 8;
%let _OUTPUT_col15_type = ;
%let _OUTPUT_col15_format = 21.8;
%let _OUTPUT_col15_informat = 21.8;
%let _OUTPUT_col15_label = %nrquote();
%let _OUTPUT_col15_exp = ;
%let _OUTPUT_col15_input_count = 0;
%let _OUTPUT_col16_name = CLOSE_INVOICE_CNT;
%let _OUTPUT_col16_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT_col16_length = 8;
%let _OUTPUT_col16_type = ;
%let _OUTPUT_col16_format = 21.8;
%let _OUTPUT_col16_informat = 21.8;
%let _OUTPUT_col16_label = %nrquote();
%let _OUTPUT_col16_exp = ;
%let _OUTPUT_col16_input_count = 0;
%let _OUTPUT_col17_name = CURRENT_EXPOSURE_AMT;
%let _OUTPUT_col17_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT_col17_length = 8;
%let _OUTPUT_col17_type = ;
%let _OUTPUT_col17_format = 25.2;
%let _OUTPUT_col17_informat = 25.2;
%let _OUTPUT_col17_label = %nrquote(IRB_FINANCING_AMT);
%let _OUTPUT_col17_exp = ;
%let _OUTPUT_col17_input_count = 0;
%let _OUTPUT_col18_name = EXPOSURE_TURNOVER_AMT;
%let _OUTPUT_col18_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT_col18_length = 8;
%let _OUTPUT_col18_type = ;
%let _OUTPUT_col18_format = 25.2;
%let _OUTPUT_col18_informat = 25.2;
%let _OUTPUT_col18_label = %nrquote(ACTUAL_ADVANCE_AMT);
%let _OUTPUT_col18_exp = ;
%let _OUTPUT_col18_input_count = 0;
%let _OUTPUT_col19_name = TOTAL_TURNOVER_AMT;
%let _OUTPUT_col19_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT_col19_length = 8;
%let _OUTPUT_col19_type = ;
%let _OUTPUT_col19_format = 25.2;
%let _OUTPUT_col19_informat = 25.2;
%let _OUTPUT_col19_label = %nrquote();
%let _OUTPUT_col19_exp = ;
%let _OUTPUT_col19_input_count = 0;
%let _OUTPUT_col20_name = CURRENT_TOTAL_AMT;
%let _OUTPUT_col20_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT_col20_length = 8;
%let _OUTPUT_col20_type = ;
%let _OUTPUT_col20_format = 25.2;
%let _OUTPUT_col20_informat = 25.2;
%let _OUTPUT_col20_label = %nrquote(PRINCIPAL_BALANCE_AMT);
%let _OUTPUT_col20_exp = ;
%let _OUTPUT_col20_input_count = 0;

%let _OUTPUT1 = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT1_connect = ;
%let _OUTPUT1_engine = BASE;
%let _OUTPUT1_memtype = DATA;
%let _OUTPUT1_options = %nrquote(COMPRESS = Binary);
%let _OUTPUT1_alter = %nrquote();
%let _OUTPUT1_path = %nrquote(/DWH_DMFCTR_REP/Tables/WORK_FCT/FACTORING_PORTFOLIO_FACT%(Table%));
%let _OUTPUT1_type = 1;
%let _OUTPUT1_label = %nrquote();
/* List of target columns to keep  */ 
%let _OUTPUT1_keep = ACCOUNT_CONTRACT_RK AGREEMENT_NUMBER START_CONTRACT_DT 
        CLOSE_CONTRACT_DT EXPIRE_DT CONTRACT_OFFICER_RK CUSTOMER_RK 
        CREDIT_FACILITY_RK EMPLOYEE_RK AVAILABILITY_PERIOD_DT LIMIT_AMT 
        CURRENT_DT OPEN_CONTRACT_CNT CLOSE_CONTRACT_CNT PROFIT_CENTER 
        OPEN_INVOICE_CNT CLOSE_INVOICE_CNT CURRENT_EXPOSURE_AMT 
        EXPOSURE_TURNOVER_AMT TOTAL_TURNOVER_AMT CURRENT_TOTAL_AMT;
%let _OUTPUT1_col_count = 21;
%let _OUTPUT1_col0_name = ACCOUNT_CONTRACT_RK;
%let _OUTPUT1_col0_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT1_col0_length = 8;
%let _OUTPUT1_col0_type = ;
%let _OUTPUT1_col0_format = 10.;
%let _OUTPUT1_col0_informat = 10.;
%let _OUTPUT1_col0_label = %nrquote(ACCOUNT_RK);
%let _OUTPUT1_col0_exp = ;
%let _OUTPUT1_col0_input_count = 0;
%let _OUTPUT1_col1_name = AGREEMENT_NUMBER;
%let _OUTPUT1_col1_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT1_col1_length = 100;
%let _OUTPUT1_col1_type = $;
%let _OUTPUT1_col1_format = $100.;
%let _OUTPUT1_col1_informat = $100.;
%let _OUTPUT1_col1_label = %nrquote(ACCOUNT_REGISTRATION_NM);
%let _OUTPUT1_col1_exp = ;
%let _OUTPUT1_col1_input_count = 0;
%let _OUTPUT1_col2_name = START_CONTRACT_DT;
%let _OUTPUT1_col2_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT1_col2_length = 8;
%let _OUTPUT1_col2_type = ;
%let _OUTPUT1_col2_format = DATETIME20.;
%let _OUTPUT1_col2_informat = DATETIME20.;
%let _OUTPUT1_col2_label = %nrquote(OPEN_DT);
%let _OUTPUT1_col2_exp = ;
%let _OUTPUT1_col2_input_count = 0;
%let _OUTPUT1_col3_name = CLOSE_CONTRACT_DT;
%let _OUTPUT1_col3_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT1_col3_length = 8;
%let _OUTPUT1_col3_type = ;
%let _OUTPUT1_col3_format = DATETIME20.;
%let _OUTPUT1_col3_informat = DATETIME20.;
%let _OUTPUT1_col3_label = %nrquote(CLOSE_DT);
%let _OUTPUT1_col3_exp = ;
%let _OUTPUT1_col3_input_count = 0;
%let _OUTPUT1_col4_name = EXPIRE_DT;
%let _OUTPUT1_col4_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT1_col4_length = 8;
%let _OUTPUT1_col4_type = ;
%let _OUTPUT1_col4_format = ;
%let _OUTPUT1_col4_informat = ;
%let _OUTPUT1_col4_label = %nrquote();
%let _OUTPUT1_col4_exp = ;
%let _OUTPUT1_col4_input_count = 0;
%let _OUTPUT1_col5_name = CONTRACT_OFFICER_RK;
%let _OUTPUT1_col5_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT1_col5_length = 8;
%let _OUTPUT1_col5_type = ;
%let _OUTPUT1_col5_format = ;
%let _OUTPUT1_col5_informat = ;
%let _OUTPUT1_col5_label = %nrquote();
%let _OUTPUT1_col5_exp = ;
%let _OUTPUT1_col5_input_count = 0;
%let _OUTPUT1_col6_name = CUSTOMER_RK;
%let _OUTPUT1_col6_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT1_col6_length = 8;
%let _OUTPUT1_col6_type = ;
%let _OUTPUT1_col6_format = 10.;
%let _OUTPUT1_col6_informat = 10.;
%let _OUTPUT1_col6_label = %nrquote(CUSTOMER_RK);
%let _OUTPUT1_col6_input0 = CUSTOMER_RK;
%let _OUTPUT1_col6_exp = ;
%let _OUTPUT1_col6_input = CUSTOMER_RK;
%let _OUTPUT1_col6_input_count = 1;
%let _OUTPUT1_col7_name = CREDIT_FACILITY_RK;
%let _OUTPUT1_col7_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT1_col7_length = 8;
%let _OUTPUT1_col7_type = ;
%let _OUTPUT1_col7_format = 10.;
%let _OUTPUT1_col7_informat = 10.;
%let _OUTPUT1_col7_label = %nrquote(CREDIT_FACILITY_RK);
%let _OUTPUT1_col7_input0 = CREDIT_FACILITY_RK;
%let _OUTPUT1_col7_exp = ;
%let _OUTPUT1_col7_input = CREDIT_FACILITY_RK;
%let _OUTPUT1_col7_input_count = 1;
%let _OUTPUT1_col8_name = EMPLOYEE_RK;
%let _OUTPUT1_col8_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT1_col8_length = 8;
%let _OUTPUT1_col8_type = ;
%let _OUTPUT1_col8_format = 10.;
%let _OUTPUT1_col8_informat = 10.;
%let _OUTPUT1_col8_label = %nrquote(EMPLOYEE_RK);
%let _OUTPUT1_col8_input0 = EMPLOYEE_RK;
%let _OUTPUT1_col8_exp = ;
%let _OUTPUT1_col8_input = EMPLOYEE_RK;
%let _OUTPUT1_col8_input_count = 1;
%let _OUTPUT1_col9_name = AVAILABILITY_PERIOD_DT;
%let _OUTPUT1_col9_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT1_col9_length = 8;
%let _OUTPUT1_col9_type = ;
%let _OUTPUT1_col9_format = DATETIME20.;
%let _OUTPUT1_col9_informat = DATETIME20.;
%let _OUTPUT1_col9_label = %nrquote(EXPIRATION_DT);
%let _OUTPUT1_col9_exp = ;
%let _OUTPUT1_col9_input_count = 0;
%let _OUTPUT1_col10_name = LIMIT_AMT;
%let _OUTPUT1_col10_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT1_col10_length = 8;
%let _OUTPUT1_col10_type = ;
%let _OUTPUT1_col10_format = 21.8;
%let _OUTPUT1_col10_informat = 21.8;
%let _OUTPUT1_col10_label = %nrquote(LIMIT_AMT);
%let _OUTPUT1_col10_input0 = LIMIT_AMT;
%let _OUTPUT1_col10_exp = ;
%let _OUTPUT1_col10_input = LIMIT_AMT;
%let _OUTPUT1_col10_input_count = 1;
%let _OUTPUT1_col11_name = CURRENT_DT;
%let _OUTPUT1_col11_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT1_col11_length = 8;
%let _OUTPUT1_col11_type = ;
%let _OUTPUT1_col11_format = DATETIME20.;
%let _OUTPUT1_col11_informat = DATETIME20.;
%let _OUTPUT1_col11_label = %nrquote();
%let _OUTPUT1_col11_exp = ;
%let _OUTPUT1_col11_input_count = 0;
%let _OUTPUT1_col12_name = OPEN_CONTRACT_CNT;
%let _OUTPUT1_col12_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT1_col12_length = 8;
%let _OUTPUT1_col12_type = ;
%let _OUTPUT1_col12_format = 21.8;
%let _OUTPUT1_col12_informat = 21.8;
%let _OUTPUT1_col12_label = %nrquote();
%let _OUTPUT1_col12_exp = ;
%let _OUTPUT1_col12_input_count = 0;
%let _OUTPUT1_col13_name = CLOSE_CONTRACT_CNT;
%let _OUTPUT1_col13_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT1_col13_length = 8;
%let _OUTPUT1_col13_type = ;
%let _OUTPUT1_col13_format = 21.8;
%let _OUTPUT1_col13_informat = 21.8;
%let _OUTPUT1_col13_label = %nrquote();
%let _OUTPUT1_col13_exp = ;
%let _OUTPUT1_col13_input_count = 0;
%let _OUTPUT1_col14_name = PROFIT_CENTER;
%let _OUTPUT1_col14_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT1_col14_length = 32;
%let _OUTPUT1_col14_type = $;
%let _OUTPUT1_col14_format = $32.;
%let _OUTPUT1_col14_informat = $32.;
%let _OUTPUT1_col14_label = %nrquote(IRB_PROFIT_CENTER_ID);
%let _OUTPUT1_col14_exp = ;
%let _OUTPUT1_col14_input_count = 0;
%let _OUTPUT1_col15_name = OPEN_INVOICE_CNT;
%let _OUTPUT1_col15_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT1_col15_length = 8;
%let _OUTPUT1_col15_type = ;
%let _OUTPUT1_col15_format = 21.8;
%let _OUTPUT1_col15_informat = 21.8;
%let _OUTPUT1_col15_label = %nrquote();
%let _OUTPUT1_col15_exp = ;
%let _OUTPUT1_col15_input_count = 0;
%let _OUTPUT1_col16_name = CLOSE_INVOICE_CNT;
%let _OUTPUT1_col16_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT1_col16_length = 8;
%let _OUTPUT1_col16_type = ;
%let _OUTPUT1_col16_format = 21.8;
%let _OUTPUT1_col16_informat = 21.8;
%let _OUTPUT1_col16_label = %nrquote();
%let _OUTPUT1_col16_exp = ;
%let _OUTPUT1_col16_input_count = 0;
%let _OUTPUT1_col17_name = CURRENT_EXPOSURE_AMT;
%let _OUTPUT1_col17_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT1_col17_length = 8;
%let _OUTPUT1_col17_type = ;
%let _OUTPUT1_col17_format = 25.2;
%let _OUTPUT1_col17_informat = 25.2;
%let _OUTPUT1_col17_label = %nrquote(IRB_FINANCING_AMT);
%let _OUTPUT1_col17_exp = ;
%let _OUTPUT1_col17_input_count = 0;
%let _OUTPUT1_col18_name = EXPOSURE_TURNOVER_AMT;
%let _OUTPUT1_col18_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT1_col18_length = 8;
%let _OUTPUT1_col18_type = ;
%let _OUTPUT1_col18_format = 25.2;
%let _OUTPUT1_col18_informat = 25.2;
%let _OUTPUT1_col18_label = %nrquote(ACTUAL_ADVANCE_AMT);
%let _OUTPUT1_col18_exp = ;
%let _OUTPUT1_col18_input_count = 0;
%let _OUTPUT1_col19_name = TOTAL_TURNOVER_AMT;
%let _OUTPUT1_col19_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT1_col19_length = 8;
%let _OUTPUT1_col19_type = ;
%let _OUTPUT1_col19_format = 25.2;
%let _OUTPUT1_col19_informat = 25.2;
%let _OUTPUT1_col19_label = %nrquote();
%let _OUTPUT1_col19_exp = ;
%let _OUTPUT1_col19_input_count = 0;
%let _OUTPUT1_col20_name = CURRENT_TOTAL_AMT;
%let _OUTPUT1_col20_table = work_fct.FACTORING_PORTFOLIO_FACT;
%let _OUTPUT1_col20_length = 8;
%let _OUTPUT1_col20_type = ;
%let _OUTPUT1_col20_format = 25.2;
%let _OUTPUT1_col20_informat = 25.2;
%let _OUTPUT1_col20_label = %nrquote(PRINCIPAL_BALANCE_AMT);
%let _OUTPUT1_col20_exp = ;
%let _OUTPUT1_col20_input_count = 0;

%let _OUTPUT2 = work_fct.CUSTOMER;
%let _OUTPUT2_connect = ;
%let _OUTPUT2_engine = BASE;
%let _OUTPUT2_memtype = DATA;
%let _OUTPUT2_options = %nrquote(COMPRESS = Binary);
%let _OUTPUT2_alter = %nrquote();
%let _OUTPUT2_path = %nrquote(/DWH_DMFCTR_REP/Tables/WORK_FCT/CUSTOMER%(Table%));
%let _OUTPUT2_type = 1;
%let _OUTPUT2_label = %nrquote();
/* List of target columns to keep  */ 
%let _OUTPUT2_keep = CUSTOMER_RK CUSTOMER_ID ORGANIZATION_NM FIELD SEGMENT TYPE 
        STATE_REGION_NM;
%let _OUTPUT2_col_count = 7;
%let _OUTPUT2_col0_name = CUSTOMER_RK;
%let _OUTPUT2_col0_table = work_fct.CUSTOMER;
%let _OUTPUT2_col0_length = 8;
%let _OUTPUT2_col0_type = ;
%let _OUTPUT2_col0_format = 10.;
%let _OUTPUT2_col0_informat = 10.;
%let _OUTPUT2_col0_label = %nrquote(CUSTOMER_RK);
%let _OUTPUT2_col0_input0 = CUSTOMER_RK;
%let _OUTPUT2_col0_exp = ;
%let _OUTPUT2_col0_input = CUSTOMER_RK;
%let _OUTPUT2_col0_input_count = 1;
%let _OUTPUT2_col1_name = CUSTOMER_ID;
%let _OUTPUT2_col1_table = work_fct.CUSTOMER;
%let _OUTPUT2_col1_length = 32;
%let _OUTPUT2_col1_type = $;
%let _OUTPUT2_col1_format = $32.;
%let _OUTPUT2_col1_informat = $32.;
%let _OUTPUT2_col1_label = %nrquote(EXTERNAL_ORG_ID);
%let _OUTPUT2_col1_input0 = CUSTOMER_ID;
%let _OUTPUT2_col1_exp = ;
%let _OUTPUT2_col1_input = CUSTOMER_ID;
%let _OUTPUT2_col1_input_count = 1;
%let _OUTPUT2_col2_name = ORGANIZATION_NM;
%let _OUTPUT2_col2_table = work_fct.CUSTOMER;
%let _OUTPUT2_col2_length = 40;
%let _OUTPUT2_col2_type = $;
%let _OUTPUT2_col2_format = $40.;
%let _OUTPUT2_col2_informat = $40.;
%let _OUTPUT2_col2_label = %nrquote(ORGANIZATION_NM);
%let _OUTPUT2_col2_input0 = ORGANIZATION_NM;
%let _OUTPUT2_col2_exp = ;
%let _OUTPUT2_col2_input = ORGANIZATION_NM;
%let _OUTPUT2_col2_input_count = 1;
%let _OUTPUT2_col3_name = FIELD;
%let _OUTPUT2_col3_table = work_fct.CUSTOMER;
%let _OUTPUT2_col3_length = 105;
%let _OUTPUT2_col3_type = $;
%let _OUTPUT2_col3_format = $105.;
%let _OUTPUT2_col3_informat = $105.;
%let _OUTPUT2_col3_label = %nrquote(INDUSTRY_DESC);
%let _OUTPUT2_col3_exp = ;
%let _OUTPUT2_col3_input_count = 0;
%let _OUTPUT2_col4_name = SEGMENT;
%let _OUTPUT2_col4_table = work_fct.CUSTOMER;
%let _OUTPUT2_col4_length = 250;
%let _OUTPUT2_col4_type = $;
%let _OUTPUT2_col4_format = $250.;
%let _OUTPUT2_col4_informat = $250.;
%let _OUTPUT2_col4_label = %nrquote(SEGMENT_DESC);
%let _OUTPUT2_col4_exp = ;
%let _OUTPUT2_col4_input_count = 0;
%let _OUTPUT2_col5_name = TYPE;
%let _OUTPUT2_col5_table = work_fct.CUSTOMER;
%let _OUTPUT2_col5_length = 400;
%let _OUTPUT2_col5_type = $;
%let _OUTPUT2_col5_format = $400.;
%let _OUTPUT2_col5_informat = $400.;
%let _OUTPUT2_col5_label = %nrquote(BUSINESS_NATURE_DESC);
%let _OUTPUT2_col5_exp = ;
%let _OUTPUT2_col5_input_count = 0;
%let _OUTPUT2_col6_name = STATE_REGION_NM;
%let _OUTPUT2_col6_table = work_fct.CUSTOMER;
%let _OUTPUT2_col6_length = 100;
%let _OUTPUT2_col6_type = $;
%let _OUTPUT2_col6_format = $100.;
%let _OUTPUT2_col6_informat = $100.;
%let _OUTPUT2_col6_label = %nrquote(STATE_REGION_NM);
%let _OUTPUT2_col6_input0 = STATE_REGION_NM;
%let _OUTPUT2_col6_exp = ;
%let _OUTPUT2_col6_input = STATE_REGION_NM;
%let _OUTPUT2_col6_input_count = 1;

/*---- Start of User Written Code  ----*/ 

/*****************************************************************
* ВЕРСИЯ:
*   $Id: 101_001_Mart_FACTORING_PORTFOLIO_FACT.sas 3810 2012-10-25 11:42:21Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Создает витрину отчета factoring_olap.
*
******************************************************************
* Использует:
*     нет
*
* Устанавливает макропеременные:
*     нет
*
******************************************************************
* 05-04-2012   Колташев    Начальное кодирование
* 19-04-2012   Хилькевич   Рефакторинг кода
* 21-04-2012   Кузин       Доработки
* 21-05-2012   Колташев    Изменение алгоритма формирования EXPOSURE_TURNOVER_AMT
* 09-07-2012   Колташев    Пофиксено задвоение CLOSE_INVOICE_CNT
* 09-07-2012   Колташев    Пофиксено вычисление OPEN_INVOICE_CNT (переименовано OPEN_INVOICE_DT -> START_INVOICE_DT) в FIN5
* 12-07-2012   Колташев    exposure_turnover_amt считаем по новому алгоритму
* 15-10-2012   Хилькевич   добавлен отбор истории связи лимита и договора с ограничением только для лимитов попадающих в отчет
*                          организован вывод значений по макроименам таблиц
* 20-10-2012   Кузенков    Исправлено некорректное создание таблицы WORK_REP.CUSTOMER (размножение из-за неправильных JOIN-ов)
* 25-10-2012   Нестерёнок  Создание таблиц ACCOUNT_OFFICER, DATE_DIM вынесено в диаграмму
******************************************************************/

%macro mart_factoring_olap_full
(
mpOut_FPF=,
mpOut_C=
);

/* Отбор договоров, действующих на период */
data FCN1;
set dwh_dds.financial_account
  (keep = ACCOUNT_RK
      account_registration_nm
      open_dt
      close_dt
      ACCOUNT_STATUS_CD
      VALID_FROM_DTTM
      VALID_TO_DTTM
      FINANCIAL_ACCOUNT_TYPE_CD
  rename=(account_rk=ACCOUNT_CONTRACT_RK
      account_registration_nm=AGREEMENT_NUMBER
      open_dt=START_CONTRACT_DT
      close_dt=CLOSE_CONTRACT_DT));
  if FINANCIAL_ACCOUNT_TYPE_CD = 'FCN' /*and ACCOUNT_STATUS_CD eq "A"*/;/*отбираем контракты*/
  if missing(CLOSE_CONTRACT_DT) or CLOSE_CONTRACT_DT>=&DMFCTR_PORTFOLIO_START_DTTM;/*открытые на дату*/
  if START_CONTRACT_DT <=&DMFCTR_PORTFOLIO_END_DTTM; /*более поздние не рассматриваем*/
  if VALID_FROM_DTTM<=&DMFCTR_PORTFOLIO_END_DTTM and VALID_TO_DTTM>&DMFCTR_PORTFOLIO_START_DTTM;/*состояния актуальные для данного интервала*/

VALID_FROM_DTTM=max(&DMFCTR_PORTFOLIO_START_DTTM, VALID_FROM_DTTM);
*VALID_TO_DTTM=min(VALID_TO_DTTM,&DMFCTR_PORTFOLIO_END_DTTM+1);
/*Заглушка. Алгоритм не определен, вставляем пустое поле*/
EXPIRE_DT=.;
CONTRACT_OFFICER_RK=.;

drop FINANCIAL_ACCOUNT_TYPE_CD ACCOUNT_STATUS_CD;
run;

%error_check (mpStepType=DATA);
%rcSet(&STEP_RC);

/*Отбор поставок действующих на период*/
data FIN1;
  set dwh_dds.financial_account
    (keep = ACCOUNT_RK
        open_dt
        close_dt
        ACCOUNT_STATUS_CD
        VALID_FROM_DTTM
        VALID_TO_DTTM
        FINANCIAL_ACCOUNT_TYPE_CD
    rename=(account_rk=ACCOUNT_INVOICE_RK
        open_dt=START_INVOICE_DT
        close_dt=CLOSE_INVOICE_DT));

  if FINANCIAL_ACCOUNT_TYPE_CD = 'FIN' /*and ACCOUNT_STATUS_CD eq "A"*/;/*отбираем поставки*/
  if missing (CLOSE_INVOICE_DT) or CLOSE_INVOICE_DT>=&DMFCTR_PORTFOLIO_START_DTTM;/*открытые на дату*/
  if START_INVOICE_DT <=&DMFCTR_PORTFOLIO_END_DTTM; /*более поздние не рассматриваем*/
  if VALID_FROM_DTTM<=&DMFCTR_PORTFOLIO_END_DTTM and VALID_TO_DTTM>&DMFCTR_PORTFOLIO_START_DTTM;/*состояния актуальные для данного интервала*/

VALID_FROM_DTTM=max(&DMFCTR_PORTFOLIO_START_DTTM, VALID_FROM_DTTM);
*VALID_TO_DTTM=min(VALID_TO_DTTM,&DMFCTR_PORTFOLIO_END_DTTM+1);
drop FINANCIAL_ACCOUNT_TYPE_CD ACCOUNT_STATUS_CD;
run;

%error_check (mpStepType=DATA);
%rcSet(&STEP_RC);

/*Добавление к поставкам ключа договора
проверка на соответствие интервалу связи не проводится, потому
что интервал выбирается как min/max из дат действия invoice и договора
*/
proc sql noprint;
  create table FIN2 as
    select fa.*, faa.account_rk  as ACCOUNT_CONTRACT_RK
    from FIN1 as fa
    left join
    (SELECT DISTINCT account_rk,
             reference_financial_account_rk
    FROM dwh_dds.financial_account_assoc
    where FINANCIAL_ACCT_ASSOC_TYPE_CD='FCT') as faa
    on fa.account_invoice_rk = faa.reference_financial_account_rk
;
quit;

%error_check (mpStepType=SQL);

/*Отбор поставок, связанных с действующими договорами
Проверочная процедура. Количество записей измениться не должно!
*/
proc sql noprint;
  create table FIN3 as
    select * from FIN2 as fa
    where fa.ACCOUNT_CONTRACT_RK in
    (select distinct f.account_contract_rk from FCN1 as f);
quit;

%error_check (mpStepType=SQL);

/*Привязка клиента к договору*/
data CUST_X;
  set dwh_dds.customer_x_financial_account
    (rename=ACCOUNT_RK=ACCOUNT_CONTRACT_RK);
  where RELATIONSHIP_TO_ACCOUNT_CD eq 'PO';

  if VALID_FROM_DTTM<=&DMFCTR_PORTFOLIO_END_DTTM and VALID_TO_DTTM>&DMFCTR_PORTFOLIO_START_DTTM;/*состояния актуальные для данного интервала*/
  VALID_FROM_DTTM=max(&DMFCTR_PORTFOLIO_START_DTTM, VALID_FROM_DTTM);
*  VALID_TO_DTTM=min(VALID_TO_DTTM,&DMFCTR_PORTFOLIO_END_DTTM+1);
  keep ACCOUNT_CONTRACT_RK CUSTOMER_RK VALID_FROM_DTTM VALID_TO_DTTM;
run;

%error_check (mpStepType=DATA);
%rcSet(&STEP_RC);

/*Привязка лимита к договору*/
data CR_X;
  set dwh_dds.IRB_CRFACILITY_X_FACC
  (rename=ACCOUNT_RK=ACCOUNT_CONTRACT_RK);

  if VALID_FROM_DTTM<=&DMFCTR_PORTFOLIO_END_DTTM and VALID_TO_DTTM>&DMFCTR_PORTFOLIO_START_DTTM;/*состояния актуальные для данного интервала*/
  VALID_FROM_DTTM=max(&DMFCTR_PORTFOLIO_START_DTTM, VALID_FROM_DTTM);
*  VALID_TO_DTTM=min(VALID_TO_DTTM,&DMFCTR_PORTFOLIO_END_DTTM+1);
  keep ACCOUNT_CONTRACT_RK CREDIT_FACILITY_RK VALID_FROM_DTTM VALID_TO_DTTM;
run;

%error_check (mpStepType=DATA);
%rcSet(&STEP_RC);

/* Отбор лимитов, действующих на период */
data CR;
set dwh_dds.credit_facility;
  if credit_facility_type_cd = 'PRM';
  if VALID_FROM_DTTM<=&DMFCTR_PORTFOLIO_END_DTTM and VALID_TO_DTTM>&DMFCTR_PORTFOLIO_START_DTTM;/*состояния актуальные для данного интервала*/
  VALID_FROM_DTTM=max(&DMFCTR_PORTFOLIO_START_DTTM, VALID_FROM_DTTM);
*  VALID_TO_DTTM=min(VALID_TO_DTTM,&DMFCTR_PORTFOLIO_END_DTTM+1);

keep CREDIT_FACILITY_RK expiration_dt limit_amt VALID_FROM_DTTM VALID_TO_DTTM;
run;

%error_check (mpStepType=DATA);
%rcSet(&STEP_RC);

/*Отобрать связи лимита и договора только по указанным лимитам*/
proc sql noprint;
create table CR_X1 as
select * from CR_X
where CREDIT_FACILITY_RK in
(select distinct CREDIT_FACILITY_RK from CR)
;
quit;

%error_check (mpStepType=SQL);

/*Склейка истории договра клиента и лимита*/
%merge_history_ex_main(
  TABLE_LIST=FCN1 CUST_X CR_X1,
  TARGET_TABLE=FCN2,
  KEY_COLUMN=ACCOUNT_CONTRACT_RK,
  VALID_FROM_COLUMN=VALID_FROM_DTTM,
  VALID_TO_COLUMN=VALID_TO_DTTM,
  MAIN_TABLE=YES,
  OPTION_OUT=
);


/*Связка сотрудника-куратора с договором, IRB_PROFIT_CENTER_ID с договором*/
proc sql noprint;
create table Em1 as
select
  f1.EMPLOYEE_RK, c1.ACCOUNT_RK
  from
    dwh_dds.customer_x_financial_account as c1
    inner join  dwh_dds.IRB_FINANCIAL_ASSOCIATE_X_CPTY as i1
      on c1.CUSTOMER_RK = i1.COUNTERPARTY_RK
    inner join  dwh_dds.FINANCIAL_ASSOCIATE as f1
      on i1.FINANCIAL_ASSOCIATE_RK=f1.FINANCIAL_ASSOCIATE_RK
  where c1.RELATIONSHIP_TO_ACCOUNT_CD = 'PO'
  and i1.ASSOCIATE_ACCOUNT_ROLE_CD = 'CAO'
  and i1.VALID_TO_DTTM eq &ETL_SCD_FUTURE_DTTM
  and f1.VALID_TO_DTTM eq &ETL_SCD_FUTURE_DTTM;

create table la1 as
  select account_rk, max(IRB_PROFIT_CENTER_ID) as IRB_PROFIT_CENTER_ID
  from dwh_dds.loan_account
  where IRB_PROFIT_CENTER_ID is not null
  group by account_rk;
quit;

%error_check (mpStepType=SQL);

proc sql noprint;
create table FCN3 as
  select t1.*, em1.EMPLOYEE_RK, la1.IRB_PROFIT_CENTER_ID as PROFIT_CENTER
  from FCN2 as t1  left join em1
  on t1.ACCOUNT_CONTRACT_RK =em1.ACCOUNT_RK
  left join la1
  on t1.ACCOUNT_CONTRACT_RK =la1.ACCOUNT_RK;
quit;

%error_check (mpStepType=SQL);



/*Заглушка для случая, если не все договора имеют лимиты
Отфильтровать только те, для которых известен CREDIT_FACILITY_RK*/
data FCN31 (drop=EXPIRATION_DT LIMIT_AMT) FCN32;
set FCN3;
format EXPIRATION_DT datetime20.;
EXPIRATION_DT=.;
LIMIT_AMT=.;
if  not missing (CREDIT_FACILITY_RK) then output FCN31;
else output FCN32;
run;

%error_check (mpStepType=DATA);
%rcSet(&STEP_RC);

/* Объединение истории договоров и лимитов */
%merge_history_ex_main(
  TABLE_LIST=FCN31 CR,
  TARGET_TABLE=FCN4,
  KEY_COLUMN=CREDIT_FACILITY_RK,
  VALID_FROM_COLUMN=VALID_FROM_DTTM,
  VALID_TO_COLUMN=VALID_TO_DTTM,
  MAIN_TABLE=YES,
  OPTION_OUT=
);

/* Подвязать полученную таблицу к неотобранным записям */
proc append base=FCN4 data=fcn32;
run;

%error_check (mpStepType=DATA);
%rcSet(&STEP_RC);

/*
  Привязка атрибутов поставки из LOAN_ACCOUNT
  22/05/2012 Колташев П.:
  Необходимо при загрузке данных в витрину исключить транзитные поставки -
  Процент от номинала поставки, выплаченный клиенту, больше нуля.
  добавил условие where IRB_ACTUAL_ADVANCE_RT>0;
*/
data LA;
  set dwh_dds.loan_account (rename=ACCOUNT_RK=ACCOUNT_INVOICE_RK);
  where IRB_ACTUAL_ADVANCE_RT>0;
  keep ACCOUNT_INVOICE_RK actual_advance_amt applied_amt
    loan_approval_dt VALID_FROM_DTTM VALID_TO_DTTM;
  if VALID_FROM_DTTM<=&DMFCTR_PORTFOLIO_END_DTTM and VALID_TO_DTTM>&DMFCTR_PORTFOLIO_START_DTTM;/*состояния актуальные для данного интервала*/
  VALID_FROM_DTTM=max(&DMFCTR_PORTFOLIO_START_DTTM, VALID_FROM_DTTM);
*  VALID_TO_DTTM=min(VALID_TO_DTTM,&DMFCTR_PORTFOLIO_END_DTTM+1);
run;

%error_check (mpStepType=DATA);
%rcSet(&STEP_RC);

/*Отобрать записи из FAC только для нужных договоров  и периодов*/
proc sql noprint;
create table lac as
select
  lac.irb_financing_amt,
  lac.Account_rk as ACCOUNT_INVOICE_RK,
  max(&DMFCTR_PORTFOLIO_START_DTTM, lac.VALID_FROM_DTTM) as VALID_FROM_DTTM,
  min(lac.VALID_TO_DTTM,&DMFCTR_PORTFOLIO_END_DTTM+1) as VALID_TO_DTTM
  from dwh_dds.LOAN_ACCOUNT_CHNG as lac
  inner join
    (select distinct ACCOUNT_INVOICE_RK from FIN3) as UQ_RK
    on lac.ACCOUNT_RK=UQ_RK.ACCOUNT_INVOICE_RK
  where VALID_FROM_DTTM<=&DMFCTR_PORTFOLIO_END_DTTM and VALID_TO_DTTM>&DMFCTR_PORTFOLIO_START_DTTM;
quit;

%error_check (mpStepType=SQL);

/*Отобрать записи из FAC только для нужных договоров  и периодов*/
proc sql noprint;
create table fac as
select
  fac.principal_balance_amt,
  fac.Account_rk as ACCOUNT_INVOICE_RK,
  max(&DMFCTR_PORTFOLIO_START_DTTM, fac.VALID_FROM_DTTM) as VALID_FROM_DTTM,
  min(fac.VALID_TO_DTTM,&DMFCTR_PORTFOLIO_END_DTTM) as VALID_TO_DTTM
  from dwh_dds.FINANCIAL_ACCOUNT_CHNG as fac
  inner join (select distinct ACCOUNT_INVOICE_RK from FIN3) as UQ_RK
on fac.ACCOUNT_RK=UQ_RK.ACCOUNT_INVOICE_RK
where VALID_FROM_DTTM<=&DMFCTR_PORTFOLIO_END_DTTM and VALID_TO_DTTM>&DMFCTR_PORTFOLIO_START_DTTM;
quit;

%error_check (mpStepType=SQL);

/* Объединение истории поставок и платежей */
%merge_history_ex_main(
  TABLE_LIST=FIN3 LA LAC FAC,
  TARGET_TABLE=FIN4,
  KEY_COLUMN=ACCOUNT_INVOICE_RK,
  VALID_FROM_COLUMN=VALID_FROM_DTTM,
  VALID_TO_COLUMN=VALID_TO_DTTM,
  MAIN_TABLE=YES,
  OPTION_OUT=
);

%rcSet(&STEP_RC);

/* Отбор операций */
proc sql;
create table FIN41 as
select
  tf.account_invoice_rk,
  tf.start_invoice_dt,
  tf.close_invoice_dt,
  tf.account_contract_rk,
  tf.valid_from_dttm ,
  tf.valid_to_dttm,
  tf.applied_amt,
  sum(tl.transaction_amt) as actual_advance_amt,
  tf.loan_approval_dt,
  tf.irb_financing_amt,
  tf.principal_balance_amt
from FIN4 tf left join dwh_dds.LOAN_TRANSACTION tl
  on tl.account_rk = tf.account_invoice_rk and tl.transaction_dttm >= tf.valid_from_dttm
  and tl.transaction_dttm < tf.valid_to_dttm and tl.TRANSACTION_TYPE_CD = '006'
group by
  tf.account_invoice_rk,
  tf.start_invoice_dt,
  tf.close_invoice_dt,
  tf.account_contract_rk,
  tf.valid_from_dttm ,
  tf.valid_to_dttm,
  tf.applied_amt,
  tf.loan_approval_dt,
  tf.irb_financing_amt,
  tf.principal_balance_amt;
quit;
%error_check (mpStepType=SQL);


/*##Развернуть INVOICE по дням и просуммировать в разрезе договора*/
proc sort data= FIN41 out= FIN4;
  by ACCOUNT_CONTRACT_RK ACCOUNT_INVOICE_RK VALID_FROM_DTTM;
run;
%error_check (mpStepType=DATA);

data FIN5;
set FIN4 (rename=(  irb_financing_amt = CURRENT_EXPOSURE_AMT
          principal_balance_amt = CURRENT_TOTAL_AMT
          /*irb_profit_center_id = PROFIT_CENTER*/
));
by ACCOUNT_CONTRACT_RK ACCOUNT_INVOICE_RK VALID_FROM_DTTM;


/*Считаем, что дата закрытия включается в отчет*/
end_dt= datepart(min (CLOSE_INVOICE_DT, &DMFCTR_PORTFOLIO_END_DTTM));
  /*
    09.07.2012, Koltashev - add '=' into datepart(VALID_TO_DTTM)<end_dt,
    чтобы избежать ситуации с дублями по CURRENT_DT
  */
if datepart(VALID_TO_DTTM)<=end_dt then end_dt=datepart(VALID_TO_DTTM)-1;

if missing(CURRENT_EXPOSURE_AMT) then CURRENT_EXPOSURE_AMT =0;
if missing(EXPOSURE_TURNOVER_AMT) then EXPOSURE_TURNOVER_AMT =0;
if missing(CURRENT_TOTAL_AMT) then CURRENT_TOTAL_AMT =0;
if missing(applied_amt) then applied_amt =0;


do C_DT=datepart(VALID_FROM_DTTM) to END_DT;
  CURRENT_DT=dhms(C_DT,0,0,0);
/*  if datepart(START_INVOICE_DT) = datepart(CURRENT_DT) then OPEN_INVOICE_CNT=1; else OPEN_INVOICE_CNT=0;*/
  if datepart(CLOSE_INVOICE_DT) = datepart(CURRENT_DT) then CLOSE_INVOICE_CNT=1; else CLOSE_INVOICE_CNT=0;
  if datepart(LOAN_APPROVAL_DT) = datepart(CURRENT_DT) then do;
    OPEN_INVOICE_CNT=1;
    TOTAL_TURNOVER_AMT=applied_amt;
    EXPOSURE_TURNOVER_AMT=actual_advance_amt;
  end;
  else do;
    OPEN_INVOICE_CNT=0;
    TOTAL_TURNOVER_AMT=0;
    EXPOSURE_TURNOVER_AMT=0;
  end;
/*
  if datepart(VALID_FROM_DTTM) <= datepart(CURRENT_DT) and datepart(CURRENT_DT) < datepart(VALID_TO_DTTM) then do;
    EXPOSURE_TURNOVER_AMT=actual_advance_amt;
  end;
  else do;
    EXPOSURE_TURNOVER_AMT=0;
  end;
*/
  output;
end;
drop VALID_FROM_DTTM VALID_TO_DTTM END_DT C_DT applied_amt;
run;

%error_check (mpStepType=DATA);
%rcSet(&STEP_RC);

/*Схлопнуть поставки по договорам, расчитать параметры*/
proc summary data=FIN5 nway;
  CLASS account_contract_rk current_dt;
  /*ID   PROFIT_CENTER;*/
  VAR OPEN_INVOICE_CNT
    CLOSE_INVOICE_CNT CURRENT_EXPOSURE_AMT EXPOSURE_TURNOVER_AMT
    TOTAL_TURNOVER_AMT CURRENT_TOTAL_AMT;
  OUTPUT out=FIN6(drop=_FREQ_ _TYPE_) sum=;
run;

%error_check (mpStepType=DATA);
%rcSet(&STEP_RC);

/*-------Развернуть договора по дням*/
proc sort data=FCN4;
  by ACCOUNT_CONTRACT_RK VALID_FROM_DTTM;
run;

%error_check (mpStepType=DATA);
%rcSet(&STEP_RC);

data FCN5;
  set FCN4
  (rename=(expiration_dt = AVAILABILITY_PERIOD_DT));
  by ACCOUNT_CONTRACT_RK VALID_FROM_DTTM;
  format CURRENT_DT datetime20.;
  /*Считаем, что дата закрытия включается в отчет*/
  end_dt= datepart(min (CLOSE_CONTRACT_DT, &DMFCTR_PORTFOLIO_END_DTTM));
  /*
    21apr2012, Kuzin - add '=' into datepart(VALID_TO_DTTM)<end_dt,
    чтобы избежать ситуации с дублями по CURRENT_DT
  */
  if datepart(VALID_TO_DTTM)<=end_dt then end_dt=datepart(VALID_TO_DTTM)-1;
  if missing(LIMIT_AMT) then LIMIT_AMT=0;
  do C_DT=datepart(VALID_FROM_DTTM) to END_DT;
    CURRENT_DT=dhms(C_DT,0,0,0);
    if datepart(START_CONTRACT_DT) = C_DT then OPEN_CONTRACT_CNT=1; else OPEN_CONTRACT_CNT=0;
    if datepart(CLOSE_CONTRACT_DT) = C_DT then CLOSE_CONTRACT_CNT=1; else CLOSE_CONTRACT_CNT=0;
    output ;
  end;
drop VALID_FROM_DTTM VALID_TO_DTTM END_DT C_DT;
run;

%error_check (mpStepType=DATA);
%rcSet(&STEP_RC);

/*Объединить договора и поставки*/

data FPF;
  merge FCN5 (in=a) FIN6 (in=b);
  by ACCOUNT_CONTRACT_RK CURRENT_DT;
  format CURRENT_DT datetime20.;

  if (~b) then
    do;
      call missing(PROFIT_CENTER);
      OPEN_INVOICE_CNT=0;
      CLOSE_INVOICE_CNT=0;
      CURRENT_EXPOSURE_AMT=0;
      EXPOSURE_TURNOVER_AMT=0;
      TOTAL_TURNOVER_AMT=0;
      CURRENT_TOTAL_AMT=0;
    end;
run;

%error_check (mpStepType=DATA);
%rcSet(&STEP_RC);

/*
   Koltashev 12.07.2012
   exposure_turnover_amt считаем по новому алгоритму
--======================================================================================
*/

proc sql noprint;
  create table FPF1 as
  select sum(l2.transaction_amt) as transaction_amt, F1.ACCOUNT_RK, L2.TRANSACTION_DTTM
  from dwh_dds.financial_account f1,
       dwh_dds.financial_account_assoc a1,
       dwh_dds.financial_account f2,
       dwh_dds.loan_transaction l2
  where f1.FINANCIAL_ACCOUNT_TYPE_CD = 'FCN'
   and A1.ACCOUNT_RK = F1.ACCOUNT_RK
   and F2.ACCOUNT_RK = A1.REFERENCE_FINANCIAL_ACCOUNT_RK
   and A1.FINANCIAL_ACCT_ASSOC_TYPE_CD = 'FCT'
   and F2.FINANCIAL_ACCOUNT_TYPE_CD = 'FIN'
   and L2.ACCOUNT_RK = F2.ACCOUNT_RK
   and L2.TRANSACTION_TYPE_CD = '006'
  group by F1.ACCOUNT_RK, L2.TRANSACTION_DTTM;
quit;
%error_check (mpStepType=SQL);

proc sql noprint;
create table &mpOut_FPF. as
select
  f.account_contract_rk,
  f.agreement_number,
  f.start_contract_dt,
  f.close_contract_dt,
  f.expire_dt,
  f.contract_officer_rk,
  f.customer_rk,
  f.credit_facility_rk,
  f.employee_rk,
  f.profit_center,
  f.availability_period_dt,
  f.limit_amt,
  f.current_dt,
  f.open_contract_cnt,
  f.close_contract_cnt,
  f.open_invoice_cnt,
  f.close_invoice_cnt,
  f.current_exposure_amt,
  t.transaction_amt as exposure_turnover_amt,
  f.total_turnover_amt,
  f.current_total_amt
from FPF f left join FPF1 t on t.account_rk = f.account_contract_rk and t.transaction_dttm = f.current_dt;
quit;
%error_check (mpStepType=SQL);
%rcSet(&STEP_RC);
/*--======================================================================================*/

/*Создание таблиц размерностей*/
/*Клиенты*/
/*Объединяем клиентов из PORTFOLIO_FACT и EXTERNAL_ORG*/
PROC SQL NOPRINT;
  CREATE TABLE WORK.C_X_S AS
  SELECT  CX.counterparty_rk AS customer_rk
         ,S.segment_desc
    FROM DWH_DDS.COUNTERPARTY_X_SEGMENT CX, DWH_DDS.SEGMENT AS S
    WHERE CX.segment_rk = S.segment_rk
      AND CX.valid_to_dttm = &ETL_SCD_FUTURE_DTTM
      AND S.segment_type_cd = 'SEG' AND S.valid_to_dttm = &ETL_SCD_FUTURE_DTTM
  ;
QUIT;
%error_check (mpStepType=SQL);

/*Сотрудники*/
PROC SQL NOPRINT;
  CREATE TABLE &mpOut_C /*WORK_REP.CUSTOMER*/ AS
  SELECT  F.customer_rk
         ,E.external_org_id      AS customer_id
         ,E.organization_nm      AS organization_nm
         ,I.industry_desc        AS field
         ,S.segment_desc         AS segment
         ,B.business_nature_desc AS type
         ,SR.state_region_nm
    FROM (SELECT DISTINCT customer_rk
            FROM WORK.FCN2) AS F
    LEFT JOIN WORK.C_X_S S
           ON S.customer_rk = F.customer_rk
    LEFT JOIN DWH_DDS.EXTERNAL_ORG AS E
           ON E.external_org_rk = F.customer_rk AND E.valid_to_dttm = &ETL_SCD_FUTURE_DTTM
    LEFT JOIN DWH_DDS.INDUSTRY AS I
           ON I.industry_cd = E.industry_cd AND I.valid_to_dttm = &ETL_SCD_FUTURE_DTTM
    LEFT JOIN DWH_DDS.BUSINESS_NATURE AS B
           ON B.business_nature_cd = E.irb_business_nature_cd AND B.valid_to_dttm = &ETL_SCD_FUTURE_DTTM
    LEFT JOIN DWH_DDS.IRB_COUNTERPARTY_ADDRESS CADDR
           ON CADDR.counterparty_rk = E.external_org_rk AND CADDR.address_type_cd = 'REG' AND CADDR.valid_to_dttm = &ETL_SCD_FUTURE_DTTM
    LEFT JOIN DWH_DDS.STATE_REGION SR
           ON SR.state_region_cd = CADDR.state_region_cd AND SR.valid_to_dttm = &ETL_SCD_FUTURE_DTTM
  ;
QUIT;
%error_check (mpStepType=SQL);

%mend mart_factoring_olap_full;

%mart_factoring_olap_full
(mpOut_FPF=&_OUTPUT1.,
mpOut_C=&_OUTPUT2.
);

/*---- End of User Written Code  ----*/ 

/*---- Create the indexes for a table  ----*/ 
%put %str(NOTE: Creating indexes ...);
proc datasets lib = work_fct nolist; 
   modify FACTORING_PORTFOLIO_FACT; 
      index create idxPRIM = (ACCOUNT_CONTRACT_RK CURRENT_DT)
         / unique;
quit; 

%rcSet(&syserr); 

%rcSet(&syserr); 
%rcSet(&sqlrc); 


/**  Step end Mart_FACTORING_PORTFOLIO_FACT **/

/*==========================================================================* 
 * Step:            Table Loader                          A5X3Z45Z.AH00003F * 
 * Transform:       Table Loader (Version 2.1)                              * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    FACTORING_PORTFOLIO_FACT -            A5X3Z45Z.AE00001H * 
 *                   work_fct.FACTORING_PORTFOLIO_FACT                      * 
 * Target Table:    FACTORING_PORTFOLIO_FACT -            A5X3Z45Z.AE00001C * 
 *                   dm_fctr.FACTORING_PORTFOLIO_FACT                       * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00003F);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work_fct.FACTORING_PORTFOLIO_FACT); 

%let SYS_SQL_IP_SPEEDO = Y;
%let SYS_SQL_MAPPUTTO = sas_put;
%let SYS_SQLREDUCEPUT = DBMS;
%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

%global etls_tableExist;
%global etls_numIndex;
%global etls_lastTable;
%let etls_tableExist = -1; 
%let etls_numIndex = -1; 
%let etls_lastTable = &SYSLAST; 

/*---- Define load data macro  ----*/ 

/* --------------------------------------------------------------
   Load Technique Selection: Replace - Truncate
   Constraint and index action selections: 'INIT','ASIS','ASIS','ASIS'
   Additional options selections... 
      Set unmapped to missing on updates: false 
   -------------------------------------------------------------- */
%macro etls_loader;

   %let etls_tableOptions = ;
   
   /*---- Map the columns  ----*/ 
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WJB40LH;
   quit;
   
   %put %str(NOTE: Mapping columns ...);
   proc sql;
      create view work.WJB40LH as
         select
            ACCOUNT_CONTRACT_RK as ACCOUNT_RK,
            CURRENT_DT,
            CUSTOMER_RK,
            EMPLOYEE_RK as CUSTOMER_ACCOUNT_OFFICER_RK,
            CONTRACT_OFFICER_RK   
               format = 10.
               informat = 10.,
            AVAILABILITY_PERIOD_DT,
            EXPIRE_DT as EXPIRY_DT   
               format = DATETIME20.
               informat = DATETIME20.,
            START_CONTRACT_DT as START_DT,
            AGREEMENT_NUMBER,
            LIMIT_AMT,
            OPEN_CONTRACT_CNT,
            CLOSE_CONTRACT_CNT,
            (1) as CONTRACT_CNT length = 8
               format = 21.8
               informat = 21.8,
            CLOSE_CONTRACT_DT,
            OPEN_INVOICE_CNT,
            CLOSE_INVOICE_CNT,
            CURRENT_EXPOSURE_AMT,
            EXPOSURE_TURNOVER_AMT,
            TOTAL_TURNOVER_AMT,
            CURRENT_TOTAL_AMT,
            PROFIT_CENTER
      from &etls_lastTable
      ;
   quit;
   
   %let SYSLAST = work.WJB40LH;
   
   %let etls_lastTable = &SYSLAST; 
   %let etls_tableOptions = ; 
   
   /* Determine if the target table exists  */ 
   %let etls_tableExist = %eval(%sysfunc(exist(dm_fctr.FACTORING_PORTFOLIO_FACT, DATA)) or 
         %sysfunc(exist(dm_fctr.FACTORING_PORTFOLIO_FACT, VIEW))); 
   
   /*---- Create a new table  ----*/ 
   %if (&etls_tableExist eq 0) %then 
   %do;  /* if table does not exist  */ 
   
      %put %str(NOTE: Creating table ...);
      
      data dm_fctr.FACTORING_PORTFOLIO_FACT
              (dbnull = (
                         ACCOUNT_RK = NO
                         CURRENT_DT = NO
                         CUSTOMER_RK = YES
                         CUSTOMER_ACCOUNT_OFFICER_RK = YES
                         CONTRACT_OFFICER_RK = YES
                         AVAILABILITY_PERIOD_DT = YES
                         EXPIRY_DT = YES
                         START_DT = YES
                         AGREEMENT_NUMBER = YES
                         LIMIT_AMT = YES
                         OPEN_CONTRACT_CNT = YES
                         CLOSE_CONTRACT_CNT = YES
                         CONTRACT_CNT = YES
                         CLOSE_CONTRACT_DT = YES
                         OPEN_INVOICE_CNT = YES
                         CLOSE_INVOICE_CNT = YES
                         CURRENT_EXPOSURE_AMT = YES
                         EXPOSURE_TURNOVER_AMT = YES
                         TOTAL_TURNOVER_AMT = YES
                         CURRENT_TOTAL_AMT = YES
                         PROFIT_CENTER = YES));
         attrib ACCOUNT_RK length = 8
            format = 10.
            informat = 10.
            label = 'ACCOUNT_RK'; 
         attrib CURRENT_DT length = 8
            format = DATETIME20.
            informat = DATETIME20.
            label = 'CURRENT_DT'; 
         attrib CUSTOMER_RK length = 8
            format = 10.
            informat = 10.
            label = 'CUSTOMER_RK'; 
         attrib CUSTOMER_ACCOUNT_OFFICER_RK length = 8
            format = 10.
            informat = 10.
            label = 'CUSTOMER_ACCOUNT_OFFICER_RK'; 
         attrib CONTRACT_OFFICER_RK length = 8
            format = 10.
            informat = 10.
            label = 'CONTRACT_OFFICER_RK'; 
         attrib AVAILABILITY_PERIOD_DT length = 8
            format = DATETIME20.
            informat = DATETIME20.
            label = 'AVAILABILITY_PERIOD_DT'; 
         attrib EXPIRY_DT length = 8
            format = DATETIME20.
            informat = DATETIME20.
            label = 'EXPIRY_DT'; 
         attrib START_DT length = 8
            format = DATETIME20.
            informat = DATETIME20.
            label = 'START_DT'; 
         attrib AGREEMENT_NUMBER length = $100
            format = $100.
            informat = $100.
            label = 'AGREEMENT_NUMBER'; 
         attrib LIMIT_AMT length = 8
            format = 21.8
            informat = 21.8
            label = 'LIMIT_AMT'; 
         attrib OPEN_CONTRACT_CNT length = 8
            format = 21.8
            informat = 21.8
            label = 'OPEN_CONTRACT_CNT'; 
         attrib CLOSE_CONTRACT_CNT length = 8
            format = 21.8
            informat = 21.8
            label = 'CLOSE_CONTRACT_CNT'; 
         attrib CONTRACT_CNT length = 8
            format = 21.8
            informat = 21.8
            label = 'CONTRACT_CNT'; 
         attrib CLOSE_CONTRACT_DT length = 8
            format = DATETIME20.
            informat = DATETIME20.
            label = 'CLOSE_CONTRACT_DT'; 
         attrib OPEN_INVOICE_CNT length = 8
            format = 21.8
            informat = 21.8
            label = 'OPEN_INVOICE_CNT'; 
         attrib CLOSE_INVOICE_CNT length = 8
            format = 21.8
            informat = 21.8
            label = 'CLOSE_INVOICE_CNT'; 
         attrib CURRENT_EXPOSURE_AMT length = 8
            format = 25.2
            informat = 25.2
            label = 'CURRENT_EXPOSURE_AMT'; 
         attrib EXPOSURE_TURNOVER_AMT length = 8
            format = 25.2
            informat = 25.2
            label = 'EXPOSURE_TURNOVER_AMT'; 
         attrib TOTAL_TURNOVER_AMT length = 8
            format = 25.2
            informat = 25.2
            label = 'TOTAL_TURNOVER_AMT'; 
         attrib CURRENT_TOTAL_AMT length = 8
            format = 25.2
            informat = 25.2
            label = 'CURRENT_TOTAL_AMT'; 
         attrib PROFIT_CENTER length = $32
            format = $32.
            informat = $32.
            label = 'PROFIT_CENTER'; 
         call missing(of _all_);
         stop;
      run;
      
      %rcSet(&syserr); 
      
      /*---- Create the integrity constraints for a table  ----*/ 
      %put %str(NOTE: Creating integrity constraints ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DM_FCTR" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            alter table DM_FCTR.FACTORING_PORTFOLIO_FACT      
               add primary key (ACCOUNT_RK, 
                                 CURRENT_DT)
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit;
      
      %rcSet(&sqlrc); 
      
   %end;  /* if table does not exist  */ 
   
   %else 
   %do;  /* table exists */ 
      /*---- Truncate a table  ----*/ 
      %put %str(NOTE: Truncating table ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DM_FCTR" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            truncate table DM_FCTR.FACTORING_PORTFOLIO_FACT
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit; 
      
      %rcSet(&sqlrc); 
      
   %end; /* table exists */ 
   
   /*---- Append  ----*/ 
   %put %str(NOTE: Appending data ...);
   
   proc append base = dm_fctr.FACTORING_PORTFOLIO_FACT 
      data = &etls_lastTable (&etls_tableOptions)  force ; 
    run; 
   
   %rcSet(&syserr); 
   
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WJB40LH;
   quit;
   
%mend etls_loader;
%etls_loader;



/**  Step end Table Loader **/

/*==========================================================================* 
 * Step:            Table Loader                          A5X3Z45Z.AH00003G * 
 * Transform:       Table Loader (Version 2.1)                              * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    CUSTOMER - work_fct.CUSTOMER          A5X3Z45Z.AE00001G * 
 * Target Table:    CUSTOMER - dm_fctr.CUSTOMER           A5X3Z45Z.AE00001A * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00003G);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work_fct.CUSTOMER); 

%let SYS_SQL_IP_SPEEDO = Y;
%let SYS_SQL_MAPPUTTO = sas_put;
%let SYS_SQLREDUCEPUT = DBMS;
%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

%global etls_tableExist;
%global etls_numIndex;
%global etls_lastTable;
%let etls_tableExist = -1; 
%let etls_numIndex = -1; 
%let etls_lastTable = &SYSLAST; 

/*---- Define load data macro  ----*/ 

/* --------------------------------------------------------------
   Load Technique Selection: Replace - Truncate
   Constraint and index action selections: 'ASIS','ASIS','ASIS','ASIS'
   Additional options selections... 
      Set unmapped to missing on updates: false 
   -------------------------------------------------------------- */
%macro etls_loader;

   %let etls_tableOptions = ;
   
   /*---- Map the columns  ----*/ 
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WJB419L;
   quit;
   
   %put %str(NOTE: Mapping columns ...);
   proc sql;
      create view work.WJB419L as
         select
            CUSTOMER_RK,
            ORGANIZATION_NM as CUSTOMER_NAME,
            FIELD,
            SEGMENT,
            (substrn(TYPE, 1, 255)) as TYPE length = 255
               format = $255.
               informat = $255.,
            STATE_REGION_NM as REGION,
            CUSTOMER_ID
      from &etls_lastTable
      ;
   quit;
   
   %let SYSLAST = work.WJB419L;
   
   %let etls_lastTable = &SYSLAST; 
   %let etls_tableOptions = ; 
   
   /* Determine if the target table exists  */ 
   %let etls_tableExist = %eval(%sysfunc(exist(dm_fctr.CUSTOMER, DATA)) or 
         %sysfunc(exist(dm_fctr.CUSTOMER, VIEW))); 
   
   /*---- Create a new table  ----*/ 
   %if (&etls_tableExist eq 0) %then 
   %do;  /* if table does not exist  */ 
   
      %put %str(NOTE: Creating table ...);
      
      data dm_fctr.CUSTOMER
              (dbnull = (
                         CUSTOMER_RK = NO
                         CUSTOMER_NAME = YES
                         FIELD = YES
                         SEGMENT = YES
                         TYPE = YES
                         REGION = YES
                         CUSTOMER_ID = YES));
         attrib CUSTOMER_RK length = 8
            format = 10.
            informat = 10.
            label = 'CUSTOMER_RK'; 
         attrib CUSTOMER_NAME length = $40
            format = $40.
            informat = $40.
            label = 'CUSTOMER_NAME'; 
         attrib FIELD length = $105
            format = $105.
            informat = $105.
            label = 'FIELD'; 
         attrib SEGMENT length = $250
            format = $250.
            informat = $250.
            label = 'SEGMENT'; 
         attrib TYPE length = $255
            format = $255.
            informat = $255.
            label = 'TYPE'; 
         attrib REGION length = $100
            format = $100.
            informat = $100.
            label = 'REGION'; 
         attrib CUSTOMER_ID length = $32
            format = $32.
            informat = $32.
            label = 'CUSTOMER_ID'; 
         call missing(of _all_);
         stop;
      run;
      
      %rcSet(&syserr); 
      
   %end;  /* if table does not exist  */ 
   
   %else 
   %do;  /* table exists */ 
      /*---- Truncate a table  ----*/ 
      %put %str(NOTE: Truncating table ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DM_FCTR" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            truncate table DM_FCTR.CUSTOMER
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit; 
      
      %rcSet(&sqlrc); 
      
   %end; /* table exists */ 
   
   /*---- Append  ----*/ 
   %put %str(NOTE: Appending data ...);
   
   proc append base = dm_fctr.CUSTOMER 
      data = &etls_lastTable (&etls_tableOptions)  force ; 
    run; 
   
   %rcSet(&syserr); 
   
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WJB419L;
   quit;
   
%mend etls_loader;
%etls_loader;



/**  Step end Table Loader **/

/*==========================================================================* 
 * Step:            DATE_DIM                              A5X3Z45Z.AH00003H * 
 * Transform:       Extract                                                 * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    CAL_DATE - dwh_dds.CAL_DATE           A569C89V.AE0000EJ * 
 * Target Table:    Extract - work.WASEW4LB               A5X3Z45Z.AN00000P * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00003H);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(dwh_dds.CAL_DATE); 

%let SYS_SQL_IP_SPEEDO = Y;
%let SYS_SQL_MAPPUTTO = sas_put;
%let SYS_SQLREDUCEPUT = DBMS;
%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

/*---- Map the columns  ----*/ 
proc datasets lib = work nolist nowarn memtype = (data view);
   delete WASEW4LB;
quit;

%put %str(NOTE: Mapping columns ...);
proc sql;
   create view work.WASEW4LB as
      select
         CALENDAR_DT as DATE_NAME   
            label = 'DATE_NAME',
         WEEK_NO as WEEK_NAME   
            format = 8.
            informat = 8.
            label = 'WEEK_NAME',
         (lowcase(MONTH_NM)) as MONTH_NAME length = 20
            format = $20.
            informat = $20.
            label = 'MONTH_NAME',
         (int((MONTH_NO - 1) / 3) + 1) as QTR_NUMBER length = 8
            format = 8.
            informat = 8.
            label = 'QTR_NUMBER',
         YEAR_NO as YEAR_NAME   
            format = 8.
            informat = 8.
            label = 'YEAR_NAME'
   from &SYSLAST
   ;
quit;

%let SYSLAST = work.WASEW4LB;

%global etls_sql_pushDown;
%let etls_sql_pushDown = &sys_sql_ip_all;

%rcSet(&sqlrc); 



/**  Step end DATE_DIM **/

/*==========================================================================* 
 * Step:            Table Loader                          A5X3Z45Z.AH00003I * 
 * Transform:       Table Loader (Version 2.1)                              * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    Extract - work.WASEW4LB               A5X3Z45Z.AN00000P * 
 * Target Table:    DATE_DIM - dm_fctr.DATE_DIM           A5X3Z45Z.AE00001B * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00003I);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.WASEW4LB); 

%let SYS_SQL_IP_SPEEDO = Y;
%let SYS_SQL_MAPPUTTO = sas_put;
%let SYS_SQLREDUCEPUT = DBMS;
%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

%global etls_tableExist;
%global etls_numIndex;
%global etls_lastTable;
%let etls_tableExist = -1; 
%let etls_numIndex = -1; 
%let etls_lastTable = &SYSLAST; 

/*---- Define load data macro  ----*/ 

/* --------------------------------------------------------------
   Load Technique Selection: Replace - Truncate
   Constraint and index action selections: 'INIT','ASIS','ASIS','ASIS'
   Additional options selections... 
      Set unmapped to missing on updates: false 
   -------------------------------------------------------------- */
%macro etls_loader;

   %let etls_tableOptions = ;
   
   /* Determine if the target table exists  */ 
   %let etls_tableExist = %eval(%sysfunc(exist(dm_fctr.DATE_DIM, DATA)) or 
         %sysfunc(exist(dm_fctr.DATE_DIM, VIEW))); 
   
   /*---- Create a new table  ----*/ 
   %if (&etls_tableExist eq 0) %then 
   %do;  /* if table does not exist  */ 
   
      %put %str(NOTE: Creating table ...);
      
      data dm_fctr.DATE_DIM
              (dbnull = (
                         DATE_NAME = NO
                         WEEK_NAME = YES
                         MONTH_NAME = YES
                         QTR_NUMBER = YES
                         YEAR_NAME = YES));
         attrib DATE_NAME length = 8
            format = DATETIME20.
            informat = DATETIME20.
            label = 'DATE_NAME'; 
         attrib WEEK_NAME length = 8
            format = 8.
            informat = 8.
            label = 'WEEK_NAME'; 
         attrib MONTH_NAME length = $20
            format = $20.
            informat = $20.
            label = 'MONTH_NAME'; 
         attrib QTR_NUMBER length = 8
            format = 8.
            informat = 8.
            label = 'QTR_NUMBER'; 
         attrib YEAR_NAME length = 8
            format = 8.
            informat = 8.
            label = 'YEAR_NAME'; 
         call missing(of _all_);
         stop;
      run;
      
      %rcSet(&syserr); 
      
      /*---- Create the integrity constraints for a table  ----*/ 
      %put %str(NOTE: Creating integrity constraints ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DM_FCTR" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            alter table DM_FCTR.DATE_DIM      
               add primary key (DATE_NAME)
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit;
      
      %rcSet(&sqlrc); 
      
   %end;  /* if table does not exist  */ 
   
   %else 
   %do;  /* table exists */ 
      /*---- Truncate a table  ----*/ 
      %put %str(NOTE: Truncating table ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DM_FCTR" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            truncate table DM_FCTR.DATE_DIM
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit; 
      
      %rcSet(&sqlrc); 
      
   %end; /* table exists */ 
   
   /*---- Append  ----*/ 
   %put %str(NOTE: Appending data ...);
   
   proc append base = dm_fctr.DATE_DIM 
      data = &etls_lastTable (&etls_tableOptions)  force ; 
    run; 
   
   %rcSet(&syserr); 
   
%mend etls_loader;
%etls_loader;



/**  Step end Table Loader **/

/*==========================================================================* 
 * Step:            ACCOUNT_OFFICER                       A5X3Z45Z.AH00003J * 
 * Transform:       Extract                                                 * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    EMPLOYEE - dwh_dds.EMPLOYEE           A569C89V.AE0000FA * 
 * Target Table:    Extract - work.WARURZ3F               A5X3Z45Z.AN00000Q * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00003J);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(dwh_dds.EMPLOYEE); 

%let SYS_SQL_IP_SPEEDO = Y;
%let SYS_SQL_MAPPUTTO = sas_put;
%let SYS_SQLREDUCEPUT = DBMS;
%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

/*---- Map the columns  ----*/ 
proc datasets lib = work nolist nowarn memtype = (data view);
   delete WARURZ3F;
quit;

%put %str(NOTE: Mapping columns ...);
proc sql;
   create view work.WARURZ3F as
      select
         EMPLOYEE_RK   
            format = 10.
            informat = 10.,
         EMPLOYEE_ID as ACCOUNT_OFFICER_ID   
            label = 'ACCOUNT_OFFICER_ID',
         IRB_FULL_NAME as ACCOUNT_OFFICER_NAME   
            label = 'ACCOUNT_OFFICER_NAME',
         IRB_DEPARTMENT_ID as ACCOUNT_OFFICER_DEPARTMENT   
            label = 'ACCOUNT_OFFICER_DEPARTMENT'
   from &SYSLAST
      where VALID_TO_DTTM = &ETL_SCD_FUTURE_DTTM and IRB_EMPLOYEE_TYPE_CD = "AO"
   ;
quit;

%let SYSLAST = work.WARURZ3F;

%global etls_sql_pushDown;
%let etls_sql_pushDown = &sys_sql_ip_all;

%rcSet(&sqlrc); 



/**  Step end ACCOUNT_OFFICER **/

/*==========================================================================* 
 * Step:            Table Loader                          A5X3Z45Z.AH00003K * 
 * Transform:       Table Loader (Version 2.1)                              * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    Extract - work.WARURZ3F               A5X3Z45Z.AN00000Q * 
 * Target Table:    ACCOUNT_OFFICER -                     A5X3Z45Z.AE000018 * 
 *                   dm_fctr.ACCOUNT_OFFICER                                * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00003K);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.WARURZ3F); 

%let SYS_SQL_IP_SPEEDO = Y;
%let SYS_SQL_MAPPUTTO = sas_put;
%let SYS_SQLREDUCEPUT = DBMS;
%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

%global etls_tableExist;
%global etls_numIndex;
%global etls_lastTable;
%let etls_tableExist = -1; 
%let etls_numIndex = -1; 
%let etls_lastTable = &SYSLAST; 

/*---- Define load data macro  ----*/ 

/* --------------------------------------------------------------
   Load Technique Selection: Replace - Truncate
   Constraint and index action selections: 'INIT','ASIS','ASIS','ASIS'
   Additional options selections... 
      Set unmapped to missing on updates: false 
   -------------------------------------------------------------- */
%macro etls_loader;

   %let etls_tableOptions = ;
   
   /* Determine if the target table exists  */ 
   %let etls_tableExist = %eval(%sysfunc(exist(dm_fctr.ACCOUNT_OFFICER, DATA)) or 
         %sysfunc(exist(dm_fctr.ACCOUNT_OFFICER, VIEW))); 
   
   /*---- Create a new table  ----*/ 
   %if (&etls_tableExist eq 0) %then 
   %do;  /* if table does not exist  */ 
   
      %put %str(NOTE: Creating table ...);
      
      data dm_fctr.ACCOUNT_OFFICER
              (dbnull = (
                         EMPLOYEE_RK = NO
                         ACCOUNT_OFFICER_ID = YES
                         ACCOUNT_OFFICER_NAME = YES
                         ACCOUNT_OFFICER_DEPARTMENT = YES));
         attrib EMPLOYEE_RK length = 8
            format = 10.
            informat = 10.
            label = 'EMPLOYEE_RK'; 
         attrib ACCOUNT_OFFICER_ID length = $32
            format = $32.
            informat = $32.
            label = 'ACCOUNT_OFFICER_ID'; 
         attrib ACCOUNT_OFFICER_NAME length = $255
            format = $255.
            informat = $255.
            label = 'ACCOUNT_OFFICER_NAME'; 
         attrib ACCOUNT_OFFICER_DEPARTMENT length = $255
            format = $255.
            informat = $255.
            label = 'ACCOUNT_OFFICER_DEPARTMENT'; 
         call missing(of _all_);
         stop;
      run;
      
      %rcSet(&syserr); 
      
      /*---- Create the integrity constraints for a table  ----*/ 
      %put %str(NOTE: Creating integrity constraints ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DM_FCTR" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            alter table DM_FCTR.ACCOUNT_OFFICER      
               add primary key (EMPLOYEE_RK)
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit;
      
      %rcSet(&sqlrc); 
      
   %end;  /* if table does not exist  */ 
   
   %else 
   %do;  /* table exists */ 
      /*---- Truncate a table  ----*/ 
      %put %str(NOTE: Truncating table ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DM_FCTR" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            truncate table DM_FCTR.ACCOUNT_OFFICER
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit; 
      
      %rcSet(&sqlrc); 
      
   %end; /* table exists */ 
   
   /*---- Append  ----*/ 
   %put %str(NOTE: Appending data ...);
   
   proc append base = dm_fctr.ACCOUNT_OFFICER 
      data = &etls_lastTable (&etls_tableOptions)  force ; 
    run; 
   
   %rcSet(&syserr); 
   
%mend etls_loader;
%etls_loader;



/**  Step end Table Loader **/

/*==========================================================================* 
 * Step:            Завершить модуль                      A5X3Z45Z.AH00003L * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00003L);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 247 2012-04-03 07:31:10Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;

   /* Продолжаем модуль */
   %job_continue_reg(mpJobType=JOB, mpJobName=&ETLS_JobName., mpPostEvent=N);

   /* Завершаем модуль */
   %job_finish_reg(mpJobType=JOB);

%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);



/**  Job end 101_001_Mart_FACTORING_PORTFOLIO_FACT **/

/* Reset jobid and name */
%let jobID = %quote(A5X3Z45Z.AF00000O);
%let etls_jobName = %nrquote(100_002_Stream_DM_FCTR);

/**************************************************************************** 
 * Job:             101_003_Mart_CB_CCY_RATES             A5X3Z45Z.AF00000I * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: bravo14                                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DMFCTR_REP/Jobs/Includes                           * 
 *                                                                          * 
 * Server:          SASApp                                A5C46MZY.AQ000002 * 
 *                                                                          * 
 * Source Tables:   IRB_CURRENCY_RATE -                   A569C89V.AE0000HJ * 
 *                   dwh_dds.IRB_CURRENCY_RATE                              * 
 *                  CURRENCY - dwh_dds.CURRENCY           A569C89V.AE0000EY * 
 * Target Table:    CB_CCY_RATES - dm_fctr.CB_CCY_RATES   A5X3Z45Z.AE000019 * 
 *                                                                          * 
 * Generated on:    16 Июль 2013 г. 18:09:09 MSD                            * 
 * Generated by:    sasdwh                                                  * 
 * Version:         SAS Data Integration Studio 4.5                         * 
 ****************************************************************************
 * Quick Note:                                                              * 
 *  НАЗНАЧЕНИЕ:                                                             * 
 *    Создает витрину отчета CB_CCY_RATES.                                  * 
 *  ЗАДАЧА:                                                                 * 
 *    Факторинг, фаза Datamart.                                             * 
 *  ВХОДНЫЕ ТАБЛИЦЫ:                                                        * 
 *      DWH_DDS.IRB_CURRENCY_RATE                                           * 
 *      DWH_DDS.CURRENCY                                                    * 
 *  ВЫХОДНЫЕ ТАБЛИЦЫ:                                                       * 
 *      DM_REP.CB_CCY_RATES                                                 * 
 *  ИСТОРИЯ:                                                                * 
 *  12-04-2012   Пильчин Михаил  Начальное кодирование                      * 
 ****************************************************************************/ 

/* General macro variables  */ 
%let jobID = %quote(A5X3Z45Z.AF00000I);
%let etls_jobName = %nrquote(101_003_Mart_CB_CCY_RATES);
%let etls_userID = %nrquote(sasdwh);


/* Create metadata macro variables */
%let IOMServer      = %nrquote(SASApp);
%let metaPort       = %nrquote(8561);
%let metaServer     = %nrquote(bravo14);

/* Set metadata options */
options metaport       = &metaPort 
        metaserver     = "&metaServer"; 

/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A5X3Z45Z.AH00003P * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00003P);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_start.sas 1747 2012-08-01 11:26:13Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует начало модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_start;

   /* Продолжаем поток (или создаем новый) */
   %local lmvStreamName;
   %if %sysfunc(sysexist(LSB_JOBNAME)) %then
      %let lmvStreamName = %scan(%sysfunc(sysget(LSB_JOBNAME)), 3, :);
   %else
      %let lmvStreamName = ;

   %job_continue_reg(mpJobType=STREAM, mpJobName=&lmvStreamName, mpPostEvent=N, mpForcedStart=Y);

   /* Для DI, начинаем поток заново, если старый был начат не сегодня */
   %if %length(&lmvStreamName) eq 0 and &STREAM_START_DT ne %sysfunc(today()) %then %do;
      %job_start_reg(mpJobType=STREAM, mpParentJobId=, mpJobName=&lmvStreamName.);
   %end;

   /* Начинаем модуль */
   %job_start_reg(mpJobType=JOB, mpParentJobId=&STREAM_ID, mpJobName=&ETLS_JobName.);

%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Начать модуль **/

/*==========================================================================* 
 * Step:            104_010_Mart_CB_CCY_RATES             A5X3Z45Z.AH00003Q * 
 * Transform:       User Written                                            * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Tables:   IRB_CURRENCY_RATE -                   A569C89V.AE0000HJ * 
 *                   dwh_dds.IRB_CURRENCY_RATE                              * 
 *                  CURRENCY - dwh_dds.CURRENCY           A569C89V.AE0000EY * 
 * Target Table:    User Written - work.W3OTW1DJ          A5X3Z45Z.AN00000R * 
 *                                                                          * 
 * User Written:    SourceCode                                              * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00003Q);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 2;
%let _INPUT = dwh_dds.IRB_CURRENCY_RATE;
%let _INPUT_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT_engine = ORACLE;
%let _INPUT_memtype = DATA;
%let _INPUT_options = %nrquote();
%let _INPUT_alter = %nrquote();
%let _INPUT_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/IRB_CURRENCY_RATE%(Table%));
%let _INPUT_type = 1;
%let _INPUT_label = %nrquote();

%let _INPUT1 = dwh_dds.IRB_CURRENCY_RATE;
%let _INPUT1_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT1_engine = ORACLE;
%let _INPUT1_memtype = DATA;
%let _INPUT1_options = %nrquote();
%let _INPUT1_alter = %nrquote();
%let _INPUT1_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/IRB_CURRENCY_RATE%(Table%));
%let _INPUT1_type = 1;
%let _INPUT1_label = %nrquote();

%let _INPUT2 = dwh_dds.CURRENCY;
%let _INPUT2_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT2_engine = ORACLE;
%let _INPUT2_memtype = DATA;
%let _INPUT2_options = %nrquote();
%let _INPUT2_alter = %nrquote();
%let _INPUT2_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/CURRENCY%(Table%));
%let _INPUT2_type = 1;
%let _INPUT2_label = %nrquote();

%let _OUTPUT_count = 1;
%let _OUTPUT = work.W3OTW1DJ;
%let _OUTPUT_connect = ;
%let _OUTPUT_engine = ;
%let _OUTPUT_memtype = DATA;
%let _OUTPUT_options = %nrquote();
%let _OUTPUT_alter = %nrquote();
%let _OUTPUT_path = %nrquote(/User Written_A5X3Z45Z.AN00000R%(WorkTable%));
%let _OUTPUT_type = 1;
%let _OUTPUT_label = %nrquote();
/* List of target columns to keep  */ 
%let _OUTPUT_keep = CURRENT_DATE CURRENCY_NUMBER_CD CURRENCY_CD CURRENCY_DESC EXCHANGE_RT 
        EXCHANGE_RT_CHNG;
%let _OUTPUT_col_count = 6;
%let _OUTPUT_col0_name = CURRENT_DATE;
%let _OUTPUT_col0_table = work.W3OTW1DJ;
%let _OUTPUT_col0_length = 8;
%let _OUTPUT_col0_type = ;
%let _OUTPUT_col0_format = DATETIME20.;
%let _OUTPUT_col0_informat = DATETIME20.;
%let _OUTPUT_col0_label = %nrquote(CURRENT_DATE);
%let _OUTPUT_col0_exp = ;
%let _OUTPUT_col0_input_count = 0;
%let _OUTPUT_col1_name = CURRENCY_NUMBER_CD;
%let _OUTPUT_col1_table = work.W3OTW1DJ;
%let _OUTPUT_col1_length = 3;
%let _OUTPUT_col1_type = $;
%let _OUTPUT_col1_format = $3.;
%let _OUTPUT_col1_informat = $3.;
%let _OUTPUT_col1_label = %nrquote(CURRENCY_NUMBER_CD);
%let _OUTPUT_col1_exp = ;
%let _OUTPUT_col1_input_count = 0;
%let _OUTPUT_col2_name = CURRENCY_CD;
%let _OUTPUT_col2_table = work.W3OTW1DJ;
%let _OUTPUT_col2_length = 3;
%let _OUTPUT_col2_type = $;
%let _OUTPUT_col2_format = $3.;
%let _OUTPUT_col2_informat = $3.;
%let _OUTPUT_col2_label = %nrquote(CURRENCY_CD);
%let _OUTPUT_col2_exp = ;
%let _OUTPUT_col2_input_count = 0;
%let _OUTPUT_col3_name = CURRENCY_DESC;
%let _OUTPUT_col3_table = work.W3OTW1DJ;
%let _OUTPUT_col3_length = 100;
%let _OUTPUT_col3_type = $;
%let _OUTPUT_col3_format = $100.;
%let _OUTPUT_col3_informat = $100.;
%let _OUTPUT_col3_label = %nrquote(CURRENCY_DESC);
%let _OUTPUT_col3_exp = ;
%let _OUTPUT_col3_input_count = 0;
%let _OUTPUT_col4_name = EXCHANGE_RT;
%let _OUTPUT_col4_table = work.W3OTW1DJ;
%let _OUTPUT_col4_length = 8;
%let _OUTPUT_col4_type = ;
%let _OUTPUT_col4_format = 17.8;
%let _OUTPUT_col4_informat = 17.8;
%let _OUTPUT_col4_label = %nrquote(EXCHANGE_RT);
%let _OUTPUT_col4_exp = ;
%let _OUTPUT_col4_input_count = 0;
%let _OUTPUT_col5_name = EXCHANGE_RT_CHNG;
%let _OUTPUT_col5_table = work.W3OTW1DJ;
%let _OUTPUT_col5_length = 8;
%let _OUTPUT_col5_type = ;
%let _OUTPUT_col5_format = 17.8;
%let _OUTPUT_col5_informat = 17.8;
%let _OUTPUT_col5_label = %nrquote(EXCHANGE_RT_CHNG);
%let _OUTPUT_col5_exp = ;
%let _OUTPUT_col5_input_count = 0;

%let _OUTPUT1 = work.W3OTW1DJ;
%let _OUTPUT1_connect = ;
%let _OUTPUT1_engine = ;
%let _OUTPUT1_memtype = DATA;
%let _OUTPUT1_options = %nrquote();
%let _OUTPUT1_alter = %nrquote();
%let _OUTPUT1_path = %nrquote(/User Written_A5X3Z45Z.AN00000R%(WorkTable%));
%let _OUTPUT1_type = 1;
%let _OUTPUT1_label = %nrquote();
/* List of target columns to keep  */ 
%let _OUTPUT1_keep = CURRENT_DATE CURRENCY_NUMBER_CD CURRENCY_CD CURRENCY_DESC EXCHANGE_RT 
        EXCHANGE_RT_CHNG;
%let _OUTPUT1_col_count = 6;
%let _OUTPUT1_col0_name = CURRENT_DATE;
%let _OUTPUT1_col0_table = work.W3OTW1DJ;
%let _OUTPUT1_col0_length = 8;
%let _OUTPUT1_col0_type = ;
%let _OUTPUT1_col0_format = DATETIME20.;
%let _OUTPUT1_col0_informat = DATETIME20.;
%let _OUTPUT1_col0_label = %nrquote(CURRENT_DATE);
%let _OUTPUT1_col0_exp = ;
%let _OUTPUT1_col0_input_count = 0;
%let _OUTPUT1_col1_name = CURRENCY_NUMBER_CD;
%let _OUTPUT1_col1_table = work.W3OTW1DJ;
%let _OUTPUT1_col1_length = 3;
%let _OUTPUT1_col1_type = $;
%let _OUTPUT1_col1_format = $3.;
%let _OUTPUT1_col1_informat = $3.;
%let _OUTPUT1_col1_label = %nrquote(CURRENCY_NUMBER_CD);
%let _OUTPUT1_col1_exp = ;
%let _OUTPUT1_col1_input_count = 0;
%let _OUTPUT1_col2_name = CURRENCY_CD;
%let _OUTPUT1_col2_table = work.W3OTW1DJ;
%let _OUTPUT1_col2_length = 3;
%let _OUTPUT1_col2_type = $;
%let _OUTPUT1_col2_format = $3.;
%let _OUTPUT1_col2_informat = $3.;
%let _OUTPUT1_col2_label = %nrquote(CURRENCY_CD);
%let _OUTPUT1_col2_exp = ;
%let _OUTPUT1_col2_input_count = 0;
%let _OUTPUT1_col3_name = CURRENCY_DESC;
%let _OUTPUT1_col3_table = work.W3OTW1DJ;
%let _OUTPUT1_col3_length = 100;
%let _OUTPUT1_col3_type = $;
%let _OUTPUT1_col3_format = $100.;
%let _OUTPUT1_col3_informat = $100.;
%let _OUTPUT1_col3_label = %nrquote(CURRENCY_DESC);
%let _OUTPUT1_col3_exp = ;
%let _OUTPUT1_col3_input_count = 0;
%let _OUTPUT1_col4_name = EXCHANGE_RT;
%let _OUTPUT1_col4_table = work.W3OTW1DJ;
%let _OUTPUT1_col4_length = 8;
%let _OUTPUT1_col4_type = ;
%let _OUTPUT1_col4_format = 17.8;
%let _OUTPUT1_col4_informat = 17.8;
%let _OUTPUT1_col4_label = %nrquote(EXCHANGE_RT);
%let _OUTPUT1_col4_exp = ;
%let _OUTPUT1_col4_input_count = 0;
%let _OUTPUT1_col5_name = EXCHANGE_RT_CHNG;
%let _OUTPUT1_col5_table = work.W3OTW1DJ;
%let _OUTPUT1_col5_length = 8;
%let _OUTPUT1_col5_type = ;
%let _OUTPUT1_col5_format = 17.8;
%let _OUTPUT1_col5_informat = 17.8;
%let _OUTPUT1_col5_label = %nrquote(EXCHANGE_RT_CHNG);
%let _OUTPUT1_col5_exp = ;
%let _OUTPUT1_col5_input_count = 0;

/*---- Start of User Written Code  ----*/ 

/*****************************************************************
* ВЕРСИЯ:
*   $Id: 104_010_Mart_CB_CCY_RATES.sas 2903 2012-09-13 07:46:23Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Создает витрину отчета CB_CCY_RATES.
*
******************************************************************
* Использует:
*     нет
*
* Устанавливает макропеременные:
*     нет
*
******************************************************************
* 11-03-2012   Пильчин  Начальное кодирование
******************************************************************/

/*Создание списка валют и курсов*/
proc sql;
  create table work.ccy as
  select c.irb_currency_number_cd, r.currency_from_cd as currency_cd, c.currency_desc, r.exchange_rt,
    r.valid_from_dttm, r.valid_to_dttm
  from dwh_dds.currency c
  inner join dwh_dds.irb_currency_rate r on c.currency_cd = r.currency_from_cd
  where currency_to_cd = 'RUR'
  ;
quit;
%error_check (mpStepType=SQL);

/*Создание списка дат в заданном диапазоне*/
data datelist;
  do i=&DMFCTR_CB_CCY_RATES_START_DT - 1 to &DMFCTR_CB_CCY_RATES_END_DT;
    current_dt = dhms(i,0,0,0);
    output;
  end;
run;
%error_check (mpStepType=DATA);

/*Перемножаем два полученных списка и получаем список валют и курсов на заданном диапазоне*/
proc sql;
  create table work.ccylist as
  select dl.current_dt AS CURRENT_DATE, c.irb_currency_number_cd AS CURRENCY_NUMBER_CD,
         c.currency_cd AS CURRENCY_CD, c.currency_desc AS CURRENCY_DESC, c.exchange_rt AS EXCHANGE_RT
  from datelist dl
  inner join work.ccy c on dl.current_dt ge c.valid_from_dttm
                           and dl.current_dt lt c.valid_to_dttm
  order by
  c.currency_cd, dl.current_dt
  ;
quit;
%error_check (mpStepType=SQL);

/*Вычисление изменение курса по сравнению с предыдущим днём*/
data &_OUTPUT;
  set work.ccylist;
  by currency_cd CURRENT_DATE;

  length last_rt EXCHANGE_RT_CHNG 8;
  drop last_rt;
  retain last_rt;

  if first.currency_cd then do;
    call missing (EXCHANGE_RT_CHNG);
  end;
  else do;
    EXCHANGE_RT_CHNG = sum (exchange_rt, -last_rt);
  end;

  last_rt = exchange_rt;

  if not first.currency_cd then output;
run;
%error_check (mpStepType=DATA);

/*---- End of User Written Code  ----*/ 

%rcSet(&syserr); 
%rcSet(&sqlrc); 


/**  Step end 104_010_Mart_CB_CCY_RATES **/

/*==========================================================================* 
 * Step:            Table Loader                          A5X3Z45Z.AH00003R * 
 * Transform:       Table Loader (Version 2.1)                              * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    User Written - work.W3OTW1DJ          A5X3Z45Z.AN00000R * 
 * Target Table:    CB_CCY_RATES - dm_fctr.CB_CCY_RATES   A5X3Z45Z.AE000019 * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00003R);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.W3OTW1DJ); 

%let SYS_SQL_IP_SPEEDO = Y;
%let SYS_SQL_MAPPUTTO = sas_put;
%let SYS_SQLREDUCEPUT = DBMS;
%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

%global etls_tableExist;
%global etls_numIndex;
%global etls_lastTable;
%let etls_tableExist = -1; 
%let etls_numIndex = -1; 
%let etls_lastTable = &SYSLAST; 

/*---- Define load data macro  ----*/ 

/* --------------------------------------------------------------
   Load Technique Selection: Replace - Truncate
   Constraint and index action selections: 'ASIS','ASIS','ASIS','ASIS'
   Additional options selections... 
      Set unmapped to missing on updates: false 
   -------------------------------------------------------------- */
%macro etls_loader;

   %let etls_tableOptions = ;
   
   /*---- Map the columns  ----*/ 
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WJB445I;
   quit;
   
   %put %str(NOTE: Mapping columns ...);
   proc sql;
      create view work.WJB445I as
         select
            CURRENT_DATE as CUR_DATE,
            CURRENCY_NUMBER_CD,
            CURRENCY_CD,
            CURRENCY_DESC,
            EXCHANGE_RT   
               format = 18.8
               informat = 18.8,
            EXCHANGE_RT_CHNG   
               format = 18.8
               informat = 18.8
      from &etls_lastTable
      ;
   quit;
   
   %let SYSLAST = work.WJB445I;
   
   %let etls_lastTable = &SYSLAST; 
   %let etls_tableOptions = ; 
   
   /* Determine if the target table exists  */ 
   %let etls_tableExist = %eval(%sysfunc(exist(dm_fctr.CB_CCY_RATES, DATA)) or 
         %sysfunc(exist(dm_fctr.CB_CCY_RATES, VIEW))); 
   
   /*---- Create a new table  ----*/ 
   %if (&etls_tableExist eq 0) %then 
   %do;  /* if table does not exist  */ 
   
      %put %str(NOTE: Creating table ...);
      
      data dm_fctr.CB_CCY_RATES
              (dbnull = (
                         CUR_DATE = NO
                         CURRENCY_NUMBER_CD = NO
                         CURRENCY_CD = NO
                         CURRENCY_DESC = YES
                         EXCHANGE_RT = YES
                         EXCHANGE_RT_CHNG = YES));
         attrib CUR_DATE length = 8
            format = DATETIME20.
            informat = DATETIME20.
            label = 'CUR_DATE'; 
         attrib CURRENCY_NUMBER_CD length = $3
            format = $3.
            informat = $3.
            label = 'CURRENCY_NUMBER_CD'; 
         attrib CURRENCY_CD length = $3
            format = $3.
            informat = $3.
            label = 'CURRENCY_CD'; 
         attrib CURRENCY_DESC length = $100
            format = $100.
            informat = $100.
            label = 'CURRENCY_DESC'; 
         attrib EXCHANGE_RT length = 8
            format = 18.8
            informat = 18.8
            label = 'EXCHANGE_RT'; 
         attrib EXCHANGE_RT_CHNG length = 8
            format = 18.8
            informat = 18.8
            label = 'EXCHANGE_RT_CHNG'; 
         call missing(of _all_);
         stop;
      run;
      
      %rcSet(&syserr); 
      
   %end;  /* if table does not exist  */ 
   
   %else 
   %do;  /* table exists */ 
      /*---- Truncate a table  ----*/ 
      %put %str(NOTE: Truncating table ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DM_FCTR" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            truncate table DM_FCTR.CB_CCY_RATES
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit; 
      
      %rcSet(&sqlrc); 
      
   %end; /* table exists */ 
   
   /*---- Append  ----*/ 
   %put %str(NOTE: Appending data ...);
   
   proc append base = dm_fctr.CB_CCY_RATES 
      data = &etls_lastTable (&etls_tableOptions)  force ; 
    run; 
   
   %rcSet(&syserr); 
   
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WJB445I;
   quit;
   
%mend etls_loader;
%etls_loader;



/**  Step end Table Loader **/

/*==========================================================================* 
 * Step:            Завершить модуль                      A5X3Z45Z.AH00003S * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00003S);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 247 2012-04-03 07:31:10Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;

   /* Продолжаем модуль */
   %job_continue_reg(mpJobType=JOB, mpJobName=&ETLS_JobName., mpPostEvent=N);

   /* Завершаем модуль */
   %job_finish_reg(mpJobType=JOB);

%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);



/**  Job end 101_003_Mart_CB_CCY_RATES **/

/* Reset jobid and name */
%let jobID = %quote(A5X3Z45Z.AF00000O);
%let etls_jobName = %nrquote(100_002_Stream_DM_FCTR);

/**************************************************************************** 
 * Job:             101_004_Mart_MOSPRIME_RATE            A5X3Z45Z.AF00000J * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: bravo14                                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DMFCTR_REP/Jobs/Includes                           * 
 *                                                                          * 
 * Server:          SASApp                                A5C46MZY.AQ000002 * 
 *                                                                          * 
 * Source Tables:   RISK_FACTOR - dwh_dds.RISK_FACTOR     A569C89V.AE0000J4 * 
 *                  RISK_FACTOR_ATTRIBUTE_VALUE -         A569C89V.AE0000J6 * 
 *                   dwh_dds.RISK_FACTOR_ATTRIBUTE_VALUE                    * 
 *                  RISK_FACTOR_ATTRIBUTE -               A569C89V.AE0000J5 * 
 *                   dwh_dds.RISK_FACTOR_ATTRIBUTE                          * 
 * Target Table:    REP_MOSPRIME_RATE -                   A5X3Z45Z.AE00001E * 
 *                   dm_fctr.REP_MOSPRIME_RATE                              * 
 *                                                                          * 
 * Generated on:    16 Июль 2013 г. 18:09:10 MSD                            * 
 * Generated by:    sasdwh                                                  * 
 * Version:         SAS Data Integration Studio 4.5                         * 
 ****************************************************************************/ 

/* General macro variables  */ 
%let jobID = %quote(A5X3Z45Z.AF00000J);
%let etls_jobName = %nrquote(101_004_Mart_MOSPRIME_RATE);
%let etls_userID = %nrquote(sasdwh);


/* Create metadata macro variables */
%let IOMServer      = %nrquote(SASApp);
%let metaPort       = %nrquote(8561);
%let metaServer     = %nrquote(bravo14);

/* Set metadata options */
options metaport       = &metaPort 
        metaserver     = "&metaServer"; 

/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A5X3Z45Z.AH00003T * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00003T);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_start.sas 1747 2012-08-01 11:26:13Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует начало модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_start;

   /* Продолжаем поток (или создаем новый) */
   %local lmvStreamName;
   %if %sysfunc(sysexist(LSB_JOBNAME)) %then
      %let lmvStreamName = %scan(%sysfunc(sysget(LSB_JOBNAME)), 3, :);
   %else
      %let lmvStreamName = ;

   %job_continue_reg(mpJobType=STREAM, mpJobName=&lmvStreamName, mpPostEvent=N, mpForcedStart=Y);

   /* Для DI, начинаем поток заново, если старый был начат не сегодня */
   %if %length(&lmvStreamName) eq 0 and &STREAM_START_DT ne %sysfunc(today()) %then %do;
      %job_start_reg(mpJobType=STREAM, mpParentJobId=, mpJobName=&lmvStreamName.);
   %end;

   /* Начинаем модуль */
   %job_start_reg(mpJobType=JOB, mpParentJobId=&STREAM_ID, mpJobName=&ETLS_JobName.);

%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Начать модуль **/

/*==========================================================================* 
 * Step:            Extract                               A5X3Z45Z.AH00003U * 
 * Transform:       Extract                                                 * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    RISK_FACTOR - dwh_dds.RISK_FACTOR     A569C89V.AE0000J4 * 
 * Target Table:    Extract - work.W5K41QTR               A5X3Z45Z.AN00000S * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00003U);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(dwh_dds.RISK_FACTOR); 

%let SYS_SQL_IP_SPEEDO = Y;
%let SYS_SQL_MAPPUTTO = sas_put;
%let SYS_SQLREDUCEPUT = DBMS;
%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

/*---- Map the columns  ----*/ 
proc datasets lib = work nolist nowarn memtype = (data view);
   delete W5K41QTR;
quit;

%put %str(NOTE: Mapping columns ...);
proc sql;
   create view work.W5K41QTR as
      select
         RISK_FACTOR_ID
   from &SYSLAST
      where risk_factor_role_cd = 'MSP'
   ;
quit;

%let SYSLAST = work.W5K41QTR;

%global etls_sql_pushDown;
%let etls_sql_pushDown = &sys_sql_ip_all;

%rcSet(&sqlrc); 



/**  Step end Extract **/

/*==========================================================================* 
 * Step:            SQL Join                              A5X3Z45Z.AH00003V * 
 * Transform:       Join                                                    * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Tables:   Extract - work.W5K41QTR               A5X3Z45Z.AN00000S * 
 *                  RISK_FACTOR_ATTRIBUTE_VALUE -         A569C89V.AE0000J6 * 
 *                   dwh_dds.RISK_FACTOR_ATTRIBUTE_VALUE                    * 
 *                  RISK_FACTOR_ATTRIBUTE -               A569C89V.AE0000J5 * 
 *                   dwh_dds.RISK_FACTOR_ATTRIBUTE                          * 
 * Target Table:    SQL Join - work.W5K448OR              A5X3Z45Z.AN00000T * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00003V);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYS_SQL_IP_SPEEDO = Y;
%let SYS_SQL_MAPPUTTO = sas_put;
%let SYS_SQLREDUCEPUT = DBMS;
%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

proc datasets lib = work nolist nowarn memtype = (data view);
   delete W5K448OR;
quit;

proc sql;
   create view work.W5K448OR as
   select
      RISK_FACTOR_ATTRIBUTE_VALUE.RISK_FACTOR_ATTRIBUTE_CD length = 3   
         format = $3.
         informat = $3.
         label = 'RISK_FACTOR_ATTRIBUTE_CD',
      RISK_FACTOR_ATTRIBUTE_VALUE.VALID_FROM_DTTM length = 8   
         format = DATETIME20.
         informat = DATETIME20.
         label = 'VALID_FROM_DTTM',
      RISK_FACTOR_ATTRIBUTE_VALUE.RISK_FACTOR_MSRMNT_VALUE length = 32   
         format = $32.
         informat = $32.
         label = 'RISK_FACTOR_MSRMNT_VALUE'
   from
      work.W5K41QTR inner join 
      dwh_dds.RISK_FACTOR_ATTRIBUTE_VALUE
         on
         (
            W5K41QTR.RISK_FACTOR_ID = RISK_FACTOR_ATTRIBUTE_VALUE.RISK_FACTOR_ID
            and RISK_FACTOR_ATTRIBUTE_VALUE.VALID_FROM_DTTM >= INTNX('DTYEAR',datetime(),-1,'beginning')
            and RISK_FACTOR_ATTRIBUTE_VALUE.VALID_FROM_DTTM <= INTNX('DTDAY',datetime(),0,'beginning')
         ) inner join 
      dwh_dds.RISK_FACTOR_ATTRIBUTE
         on
         (
            RISK_FACTOR_ATTRIBUTE_VALUE.RISK_FACTOR_ATTRIBUTE_CD = RISK_FACTOR_ATTRIBUTE.RISK_FACTOR_ATTRIBUTE_CD
            and RISK_FACTOR_ATTRIBUTE.VALID_TO_DTTM = &ETL_SCD_FUTURE_DTTM
         )
   ;
quit;

%global etls_sql_pushDown;
%let etls_sql_pushDown = &sys_sql_ip_all;

%rcSet(&sqlrc); 



/**  Step end SQL Join **/

/*==========================================================================* 
 * Step:            Table Loader                          A5X3Z45Z.AH00003W * 
 * Transform:       Table Loader (Version 2.1)                              * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    SQL Join - work.W5K448OR              A5X3Z45Z.AN00000T * 
 * Target Table:    REP_MOSPRIME_RATE -                   A5X3Z45Z.AE00001E * 
 *                   dm_fctr.REP_MOSPRIME_RATE                              * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00003W);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.W5K448OR); 

%let SYS_SQL_IP_SPEEDO = Y;
%let SYS_SQL_MAPPUTTO = sas_put;
%let SYS_SQLREDUCEPUT = DBMS;
%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

%global etls_tableExist;
%global etls_numIndex;
%global etls_lastTable;
%let etls_tableExist = -1; 
%let etls_numIndex = -1; 
%let etls_lastTable = &SYSLAST; 

/*---- Define load data macro  ----*/ 

/* --------------------------------------------------------------
   Load Technique Selection: Replace - Truncate
   Constraint and index action selections: 'INIT','ASIS','ASIS','ASIS'
   Additional options selections... 
      Set unmapped to missing on updates: false 
   -------------------------------------------------------------- */
%macro etls_loader;

   %let etls_tableOptions = ;
   
   /*---- Map the columns  ----*/ 
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WJB44RG;
   quit;
   
   %put %str(NOTE: Mapping columns ...);
   proc sql;
      create view work.WJB44RG as
         select
            VALID_FROM_DTTM as RDATE,
            RISK_FACTOR_ATTRIBUTE_CD as TERMCODE,
            RISK_FACTOR_ATTRIBUTE_CD as TERMNAME length = 32   
               format = $32.
               informat = $32.,
            RISK_FACTOR_MSRMNT_VALUE as RATE
      from &etls_lastTable
      ;
   quit;
   
   %let SYSLAST = work.WJB44RG;
   
   %let etls_lastTable = &SYSLAST; 
   %let etls_tableOptions = ; 
   
   /* Determine if the target table exists  */ 
   %let etls_tableExist = %eval(%sysfunc(exist(dm_fctr.REP_MOSPRIME_RATE, DATA)) or 
         %sysfunc(exist(dm_fctr.REP_MOSPRIME_RATE, VIEW))); 
   
   /*---- Create a new table  ----*/ 
   %if (&etls_tableExist eq 0) %then 
   %do;  /* if table does not exist  */ 
   
      %put %str(NOTE: Creating table ...);
      
      data dm_fctr.REP_MOSPRIME_RATE
              (dbnull = (
                         RDATE = NO
                         TERMCODE = NO
                         TERMNAME = YES
                         RATE = YES));
         attrib RDATE length = 8
            format = DATETIME20.
            informat = DATETIME20.
            label = 'RDATE'; 
         attrib TERMCODE length = $3
            format = $3.
            informat = $3.
            label = 'TERMCODE'; 
         attrib TERMNAME length = $32
            format = $32.
            informat = $32.
            label = 'TERMNAME'; 
         attrib RATE length = $32
            format = $32.
            informat = $32.
            label = 'RATE'; 
         call missing(of _all_);
         stop;
      run;
      
      %rcSet(&syserr); 
      
      /*---- Create the integrity constraints for a table  ----*/ 
      %put %str(NOTE: Creating integrity constraints ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DM_FCTR" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            alter table DM_FCTR.REP_MOSPRIME_RATE      
               add primary key (RDATE, 
                                 TERMCODE)
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit;
      
      %rcSet(&sqlrc); 
      
   %end;  /* if table does not exist  */ 
   
   %else 
   %do;  /* table exists */ 
      /*---- Truncate a table  ----*/ 
      %put %str(NOTE: Truncating table ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DM_FCTR" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            truncate table DM_FCTR.REP_MOSPRIME_RATE
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit; 
      
      %rcSet(&sqlrc); 
      
   %end; /* table exists */ 
   
   /*---- Append  ----*/ 
   %put %str(NOTE: Appending data ...);
   
   proc append base = dm_fctr.REP_MOSPRIME_RATE 
      data = &etls_lastTable (&etls_tableOptions)  force ; 
    run; 
   
   %rcSet(&syserr); 
   
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WJB44RG;
   quit;
   
%mend etls_loader;
%etls_loader;



/**  Step end Table Loader **/

/*==========================================================================* 
 * Step:            Завершить модуль                      A5X3Z45Z.AH00003X * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00003X);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 247 2012-04-03 07:31:10Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;

   /* Продолжаем модуль */
   %job_continue_reg(mpJobType=JOB, mpJobName=&ETLS_JobName., mpPostEvent=N);

   /* Завершаем модуль */
   %job_finish_reg(mpJobType=JOB);

%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);



/**  Job end 101_004_Mart_MOSPRIME_RATE **/

/* Reset jobid and name */
%let jobID = %quote(A5X3Z45Z.AF00000O);
%let etls_jobName = %nrquote(100_002_Stream_DM_FCTR);

/**************************************************************************** 
 * Job:             101_005_Mart_CB_RF_RATE               A5X3Z45Z.AF00000K * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: bravo14                                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DMFCTR_REP/Jobs/Includes                           * 
 *                                                                          * 
 * Server:          SASApp                                A5C46MZY.AQ000002 * 
 *                                                                          * 
 * Source Tables:   RISK_FACTOR - dwh_dds.RISK_FACTOR     A569C89V.AE0000J4 * 
 *                  RISK_FACTOR_ATTRIBUTE_VALUE -         A569C89V.AE0000J6 * 
 *                   dwh_dds.RISK_FACTOR_ATTRIBUTE_VALUE                    * 
 *                  RISK_FACTOR_ATTRIBUTE -               A569C89V.AE0000J5 * 
 *                   dwh_dds.RISK_FACTOR_ATTRIBUTE                          * 
 * Target Table:    REP_CB_RF_RATE -                      A5X3Z45Z.AE00001D * 
 *                   dm_fctr.REP_CB_RF_RATE                                 * 
 *                                                                          * 
 * Generated on:    16 Июль 2013 г. 18:09:10 MSD                            * 
 * Generated by:    sasdwh                                                  * 
 * Version:         SAS Data Integration Studio 4.5                         * 
 ****************************************************************************/ 

/* General macro variables  */ 
%let jobID = %quote(A5X3Z45Z.AF00000K);
%let etls_jobName = %nrquote(101_005_Mart_CB_RF_RATE);
%let etls_userID = %nrquote(sasdwh);


/* Create metadata macro variables */
%let IOMServer      = %nrquote(SASApp);
%let metaPort       = %nrquote(8561);
%let metaServer     = %nrquote(bravo14);

/* Set metadata options */
options metaport       = &metaPort 
        metaserver     = "&metaServer"; 

/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A5X3Z45Z.AH00003Y * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00003Y);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_start.sas 1747 2012-08-01 11:26:13Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует начало модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_start;

   /* Продолжаем поток (или создаем новый) */
   %local lmvStreamName;
   %if %sysfunc(sysexist(LSB_JOBNAME)) %then
      %let lmvStreamName = %scan(%sysfunc(sysget(LSB_JOBNAME)), 3, :);
   %else
      %let lmvStreamName = ;

   %job_continue_reg(mpJobType=STREAM, mpJobName=&lmvStreamName, mpPostEvent=N, mpForcedStart=Y);

   /* Для DI, начинаем поток заново, если старый был начат не сегодня */
   %if %length(&lmvStreamName) eq 0 and &STREAM_START_DT ne %sysfunc(today()) %then %do;
      %job_start_reg(mpJobType=STREAM, mpParentJobId=, mpJobName=&lmvStreamName.);
   %end;

   /* Начинаем модуль */
   %job_start_reg(mpJobType=JOB, mpParentJobId=&STREAM_ID, mpJobName=&ETLS_JobName.);

%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Начать модуль **/

/*==========================================================================* 
 * Step:            Extract                               A5X3Z45Z.AH00003Z * 
 * Transform:       Extract                                                 * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    RISK_FACTOR - dwh_dds.RISK_FACTOR     A569C89V.AE0000J4 * 
 * Target Table:    Extract - work.W3ZEAMFY               A5X3Z45Z.AN00000U * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00003Z);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(dwh_dds.RISK_FACTOR); 

%let SYS_SQL_IP_SPEEDO = Y;
%let SYS_SQL_MAPPUTTO = sas_put;
%let SYS_SQLREDUCEPUT = DBMS;
%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

/*---- Map the columns  ----*/ 
proc datasets lib = work nolist nowarn memtype = (data view);
   delete W3ZEAMFY;
quit;

%put %str(NOTE: Mapping columns ...);
proc sql;
   create view work.W3ZEAMFY as
      select
         RISK_FACTOR_ID
   from &SYSLAST
      where risk_factor_role_cd = 'RFS'
   ;
quit;

%let SYSLAST = work.W3ZEAMFY;

%global etls_sql_pushDown;
%let etls_sql_pushDown = &sys_sql_ip_all;

%rcSet(&sqlrc); 



/**  Step end Extract **/

/*==========================================================================* 
 * Step:            SQL Join                              A5X3Z45Z.AH000040 * 
 * Transform:       Join                                                    * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Tables:   Extract - work.W3ZEAMFY               A5X3Z45Z.AN00000U * 
 *                  RISK_FACTOR_ATTRIBUTE_VALUE -         A569C89V.AE0000J6 * 
 *                   dwh_dds.RISK_FACTOR_ATTRIBUTE_VALUE                    * 
 *                  RISK_FACTOR_ATTRIBUTE -               A569C89V.AE0000J5 * 
 *                   dwh_dds.RISK_FACTOR_ATTRIBUTE                          * 
 * Target Table:    SQL Join - work.W3ZEESS0              A5X3Z45Z.AN00000V * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH000040);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYS_SQL_IP_SPEEDO = Y;
%let SYS_SQL_MAPPUTTO = sas_put;
%let SYS_SQLREDUCEPUT = DBMS;
%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

proc datasets lib = work nolist nowarn memtype = (data view);
   delete W3ZEESS0;
quit;

proc sql;
   create view work.W3ZEESS0 as
   select
      RISK_FACTOR_ATTRIBUTE_VALUE.VALID_FROM_DTTM length = 8   
         format = DATETIME20.
         informat = DATETIME20.
         label = 'VALID_FROM_DTTM',
      RISK_FACTOR_ATTRIBUTE_VALUE.VALID_TO_DTTM length = 8   
         format = DATETIME20.
         informat = DATETIME20.
         label = 'VALID_TO_DTTM',
      RISK_FACTOR_ATTRIBUTE_VALUE.RISK_FACTOR_MSRMNT_VALUE length = 32   
         format = $32.
         informat = $32.
         label = 'RISK_FACTOR_MSRMNT_VALUE'
   from
      work.W3ZEAMFY, 
      dwh_dds.RISK_FACTOR_ATTRIBUTE_VALUE, 
      dwh_dds.RISK_FACTOR_ATTRIBUTE
   where
      W3ZEAMFY.RISK_FACTOR_ID = RISK_FACTOR_ATTRIBUTE_VALUE.RISK_FACTOR_ID
      and RISK_FACTOR_ATTRIBUTE_VALUE.RISK_FACTOR_ATTRIBUTE_CD = RISK_FACTOR_ATTRIBUTE.RISK_FACTOR_ATTRIBUTE_CD
      and RISK_FACTOR_ATTRIBUTE_VALUE.VALID_FROM_DTTM <= INTNX('DTDAY',datetime(),0,'beginning')
      and RISK_FACTOR_ATTRIBUTE_VALUE.VALID_TO_DTTM >= INTNX('DTYEAR',datetime(),-1,'beginning')
   ;
quit;

%global etls_sql_pushDown;
%let etls_sql_pushDown = &sys_sql_ip_all;

%rcSet(&sqlrc); 



/**  Step end SQL Join **/

/*==========================================================================* 
 * Step:            Table Loader                          A5X3Z45Z.AH000041 * 
 * Transform:       Table Loader (Version 2.1)                              * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    SQL Join - work.W3ZEESS0              A5X3Z45Z.AN00000V * 
 * Target Table:    REP_CB_RF_RATE -                      A5X3Z45Z.AE00001D * 
 *                   dm_fctr.REP_CB_RF_RATE                                 * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH000041);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.W3ZEESS0); 

%let SYS_SQL_IP_SPEEDO = Y;
%let SYS_SQL_MAPPUTTO = sas_put;
%let SYS_SQLREDUCEPUT = DBMS;
%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

%global etls_tableExist;
%global etls_numIndex;
%global etls_lastTable;
%let etls_tableExist = -1; 
%let etls_numIndex = -1; 
%let etls_lastTable = &SYSLAST; 

/*---- Define load data macro  ----*/ 

/* --------------------------------------------------------------
   Load Technique Selection: Replace - Truncate
   Constraint and index action selections: 'INIT','ASIS','ASIS','ASIS'
   Additional options selections... 
      Set unmapped to missing on updates: false 
   -------------------------------------------------------------- */
%macro etls_loader;

   %let etls_tableOptions = ;
   
   /*---- Map the columns  ----*/ 
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WJB45YP;
   quit;
   
   %put %str(NOTE: Mapping columns ...);
   proc sql;
      create view work.WJB45YP as
         select
            VALID_FROM_DTTM as STARTDATE,
            VALID_TO_DTTM as ENDDATE,
            RISK_FACTOR_MSRMNT_VALUE as RATE
      from &etls_lastTable
      ;
   quit;
   
   %let SYSLAST = work.WJB45YP;
   
   %let etls_lastTable = &SYSLAST; 
   %let etls_tableOptions = ; 
   
   /* Determine if the target table exists  */ 
   %let etls_tableExist = %eval(%sysfunc(exist(dm_fctr.REP_CB_RF_RATE, DATA)) or 
         %sysfunc(exist(dm_fctr.REP_CB_RF_RATE, VIEW))); 
   
   /*---- Create a new table  ----*/ 
   %if (&etls_tableExist eq 0) %then 
   %do;  /* if table does not exist  */ 
   
      %put %str(NOTE: Creating table ...);
      
      data dm_fctr.REP_CB_RF_RATE
              (dbnull = (
                         STARTDATE = NO
                         ENDDATE = YES
                         RATE = YES));
         attrib STARTDATE length = 8
            format = DATETIME20.
            informat = DATETIME20.
            label = 'STARTDATE'; 
         attrib ENDDATE length = 8
            format = DATETIME20.
            informat = DATETIME20.
            label = 'ENDDATE'; 
         attrib RATE length = $32
            format = $32.
            informat = $32.
            label = 'RATE'; 
         call missing(of _all_);
         stop;
      run;
      
      %rcSet(&syserr); 
      
      /*---- Create the integrity constraints for a table  ----*/ 
      %put %str(NOTE: Creating integrity constraints ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DM_FCTR" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            alter table DM_FCTR.REP_CB_RF_RATE      
               add primary key (STARTDATE)
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit;
      
      %rcSet(&sqlrc); 
      
   %end;  /* if table does not exist  */ 
   
   %else 
   %do;  /* table exists */ 
      /*---- Truncate a table  ----*/ 
      %put %str(NOTE: Truncating table ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DM_FCTR" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            truncate table DM_FCTR.REP_CB_RF_RATE
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit; 
      
      %rcSet(&sqlrc); 
      
   %end; /* table exists */ 
   
   /*---- Append  ----*/ 
   %put %str(NOTE: Appending data ...);
   
   proc append base = dm_fctr.REP_CB_RF_RATE 
      data = &etls_lastTable (&etls_tableOptions)  force ; 
    run; 
   
   %rcSet(&syserr); 
   
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WJB45YP;
   quit;
   
%mend etls_loader;
%etls_loader;



/**  Step end Table Loader **/

/*==========================================================================* 
 * Step:            Завершить модуль                      A5X3Z45Z.AH000042 * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH000042);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 247 2012-04-03 07:31:10Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;

   /* Продолжаем модуль */
   %job_continue_reg(mpJobType=JOB, mpJobName=&ETLS_JobName., mpPostEvent=N);

   /* Завершаем модуль */
   %job_finish_reg(mpJobType=JOB);

%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);



/**  Job end 101_005_Mart_CB_RF_RATE **/

/* Reset jobid and name */
%let jobID = %quote(A5X3Z45Z.AF00000O);
%let etls_jobName = %nrquote(100_002_Stream_DM_FCTR);

/**************************************************************************** 
 * Job:             101_002_Mart_V_FCCHS_FACTORING_MIS_A  A5X3Z45Z.AF00000L * 
 * Description:     Создает витрину отчета V_FCCHS_FACTORING_MIS_A.         * 
 *                                                                          * 
 * Metadata Server: bravo14                                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DMFCTR_REP/Jobs/Includes                           * 
 *                                                                          * 
 * Server:          SASApp                                A5C46MZY.AQ000002 * 
 *                                                                          * 
 * Source Tables:   COUNTERPARTY - dwh_dds.COUNTERPARTY   A569C89V.AE0000EQ * 
 *                  EXTERNAL_ORG - dwh_dds.EXTERNAL_ORG   A569C89V.AE0000FG * 
 *                  FINANCIAL_ACCOUNT -                   A569C89V.AE0000FK * 
 *                   dwh_dds.FINANCIAL_ACCOUNT                              * 
 *                  LOAN_ACCOUNT - dwh_dds.LOAN_ACCOUNT   A569C89V.AE0000IQ * 
 *                  CUSTOMER_X_FINANCIAL_ACCOUNT -        A569C89V.AE0000F2 * 
 *                   dwh_dds.CUSTOMER_X_FINANCIAL_ACCOUNT                   * 
 *                  FINANCIAL_ACCOUNT_ASSOC -             A569C89V.AE0000FL * 
 *                   dwh_dds.FINANCIAL_ACCOUNT_ASSOC                        * 
 * Target Table:    V_IFCCHS_FACTORING_MIS_A -            A5X3Z45Z.AE00001F * 
 *                   dm_fctr.V_IFCCHS_FACTORING_MIS_A                       * 
 *                                                                          * 
 * Generated on:    16 Июль 2013 г. 18:09:10 MSD                            * 
 * Generated by:    sasdwh                                                  * 
 * Version:         SAS Data Integration Studio 4.5                         * 
 ****************************************************************************
 * Quick Note:                                                              * 
 *  НАЗНАЧЕНИЕ:                                                             * 
 *    Создает витрину отчета V_FCCHS_FACTORING_MIS_A.                       * 
 *  ЗАДАЧА:                                                                 * 
 *    Факторинг, фаза Datamart.                                             * 
 *  ВХОДНЫЕ ТАБЛИЦЫ:                                                        * 
 *      DWH_DDS.COUNTERPARTY                                                * 
 *      DWH_DDS.EXTERNAL_ORG                                                * 
 *      DWH_DDS.FINANCIAL_ACCOUNT                                           * 
 *      DWH_DDS.LOAN_ACCOUNT                                                * 
 *      DWH_DDS.CUSTOMER_X_FINANCIAL_ACCOUNT                                * 
 *      DWH_DDS.FINANCIAL_ACCOUNT_ASSOC                                     * 
 *  ВЫХОДНЫЕ ТАБЛИЦЫ:                                                       * 
 *      DM_REP.V_IFCCHS_FACTORING_MIS_A                                     * 
 *  ИСТОРИЯ:                                                                * 
 *  19-03-2012   Нестерёнок  Начальное кодирование                          * 
 ****************************************************************************/ 

/* General macro variables  */ 
%let jobID = %quote(A5X3Z45Z.AF00000L);
%let etls_jobName = %nrquote(101_002_Mart_V_FCCHS_FACTORING_MIS_A);
%let etls_userID = %nrquote(sasdwh);


/* Create metadata macro variables */
%let IOMServer      = %nrquote(SASApp);
%let metaPort       = %nrquote(8561);
%let metaServer     = %nrquote(bravo14);

/* Set metadata options */
options metaport       = &metaPort 
        metaserver     = "&metaServer"; 

/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A5X3Z45Z.AH00004L * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00004L);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_start.sas 1747 2012-08-01 11:26:13Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует начало модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_start;

   /* Продолжаем поток (или создаем новый) */
   %local lmvStreamName;
   %if %sysfunc(sysexist(LSB_JOBNAME)) %then
      %let lmvStreamName = %scan(%sysfunc(sysget(LSB_JOBNAME)), 3, :);
   %else
      %let lmvStreamName = ;

   %job_continue_reg(mpJobType=STREAM, mpJobName=&lmvStreamName, mpPostEvent=N, mpForcedStart=Y);

   /* Для DI, начинаем поток заново, если старый был начат не сегодня */
   %if %length(&lmvStreamName) eq 0 and &STREAM_START_DT ne %sysfunc(today()) %then %do;
      %job_start_reg(mpJobType=STREAM, mpParentJobId=, mpJobName=&lmvStreamName.);
   %end;

   /* Начинаем модуль */
   %job_start_reg(mpJobType=JOB, mpParentJobId=&STREAM_ID, mpJobName=&ETLS_JobName.);

%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Начать модуль **/

/*==========================================================================* 
 * Step:            Mart_V_FCCHS_FACTORING_MIS_A          A5X3Z45Z.AH00004M * 
 * Transform:       User Written                                            * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Tables:   COUNTERPARTY - dwh_dds.COUNTERPARTY   A569C89V.AE0000EQ * 
 *                  EXTERNAL_ORG - dwh_dds.EXTERNAL_ORG   A569C89V.AE0000FG * 
 *                  FINANCIAL_ACCOUNT -                   A569C89V.AE0000FK * 
 *                   dwh_dds.FINANCIAL_ACCOUNT                              * 
 *                  LOAN_ACCOUNT - dwh_dds.LOAN_ACCOUNT   A569C89V.AE0000IQ * 
 *                  CUSTOMER_X_FINANCIAL_ACCOUNT -        A569C89V.AE0000F2 * 
 *                   dwh_dds.CUSTOMER_X_FINANCIAL_ACCOUNT                   * 
 *                  FINANCIAL_ACCOUNT_ASSOC -             A569C89V.AE0000FL * 
 *                   dwh_dds.FINANCIAL_ACCOUNT_ASSOC                        * 
 * Target Table:    V_IFCCHS_FACTORING_MIS_A -            A5X3Z45Z.AE00001F * 
 *                   dm_fctr.V_IFCCHS_FACTORING_MIS_A                       * 
 *                                                                          * 
 * User Written:    SourceCode                                              * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00004M);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 6;
%let _INPUT = dwh_dds.COUNTERPARTY;
%let _INPUT_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT_engine = ORACLE;
%let _INPUT_memtype = DATA;
%let _INPUT_options = %nrquote();
%let _INPUT_alter = %nrquote();
%let _INPUT_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/COUNTERPARTY%(Table%));
%let _INPUT_type = 1;
%let _INPUT_label = %nrquote();

%let _INPUT1 = dwh_dds.COUNTERPARTY;
%let _INPUT1_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT1_engine = ORACLE;
%let _INPUT1_memtype = DATA;
%let _INPUT1_options = %nrquote();
%let _INPUT1_alter = %nrquote();
%let _INPUT1_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/COUNTERPARTY%(Table%));
%let _INPUT1_type = 1;
%let _INPUT1_label = %nrquote();

%let _INPUT2 = dwh_dds.EXTERNAL_ORG;
%let _INPUT2_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT2_engine = ORACLE;
%let _INPUT2_memtype = DATA;
%let _INPUT2_options = %nrquote();
%let _INPUT2_alter = %nrquote();
%let _INPUT2_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/EXTERNAL_ORG%(Table%));
%let _INPUT2_type = 1;
%let _INPUT2_label = %nrquote();

%let _INPUT3 = dwh_dds.FINANCIAL_ACCOUNT;
%let _INPUT3_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT3_engine = ORACLE;
%let _INPUT3_memtype = DATA;
%let _INPUT3_options = %nrquote();
%let _INPUT3_alter = %nrquote();
%let _INPUT3_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/FINANCIAL_ACCOUNT%(Table%));
%let _INPUT3_type = 1;
%let _INPUT3_label = %nrquote();

%let _INPUT4 = dwh_dds.LOAN_ACCOUNT;
%let _INPUT4_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT4_engine = ORACLE;
%let _INPUT4_memtype = DATA;
%let _INPUT4_options = %nrquote();
%let _INPUT4_alter = %nrquote();
%let _INPUT4_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/LOAN_ACCOUNT%(Table%));
%let _INPUT4_type = 1;
%let _INPUT4_label = %nrquote();

%let _INPUT5 = dwh_dds.CUSTOMER_X_FINANCIAL_ACCOUNT;
%let _INPUT5_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT5_engine = ORACLE;
%let _INPUT5_memtype = DATA;
%let _INPUT5_options = %nrquote();
%let _INPUT5_alter = %nrquote();
%let _INPUT5_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/CUSTOMER_X_FINANCIAL_ACCOUNT%(Table%));
%let _INPUT5_type = 1;
%let _INPUT5_label = %nrquote();

%let _INPUT6 = dwh_dds.FINANCIAL_ACCOUNT_ASSOC;
%let _INPUT6_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _INPUT6_engine = ORACLE;
%let _INPUT6_memtype = DATA;
%let _INPUT6_options = %nrquote();
%let _INPUT6_alter = %nrquote();
%let _INPUT6_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/FINANCIAL_ACCOUNT_ASSOC%(Table%));
%let _INPUT6_type = 1;
%let _INPUT6_label = %nrquote();

%let _OUTPUT_count = 1;
%let _OUTPUT = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DM_FCTR" 
;
%let _OUTPUT_engine = ORACLE;
%let _OUTPUT_memtype = DATA;
%let _OUTPUT_options = %nrquote();
%let _OUTPUT_alter = %nrquote();
%let _OUTPUT_path = %nrquote(/DWH_DMFCTR_REP/Marts/DM_FCTR/V_IFCCHS_FACTORING_MIS_A%(Table%));
%let _OUTPUT_type = 1;
%let _OUTPUT_label = %nrquote();
/* List of target columns to keep  */ 
%let _OUTPUT_keep = CURRENT_DATE CLIENT_NAME CLIENT_NUNBER FACTORING_AGREEMENT_NUMBER 
        AGREEMENT_START_DATE RECOURCE SUPPLIER_LIMIT SUPPLIER_LIMIT_CURRENCY 
        SUPPLIER_LIMIT_START_DATE SUPPLIER_LIMIT_MATURITY_DATE 
        FINANCING_PERCENTAGE DEBTOR_NAME DEBTOR_NUMBER DEBTOR_LIMIT 
        DEBTOR_LIMIT_START_DATE DEBTOR_LIMIT_MATURITY_DATE INVOICE_NUMBER 
        INVOICE_UNIQUE_IDENTIFIER INVOICE_DATE INVOICE_TOTAL_SUM 
        INVOICE_CURRENCY INVOICE_UNSETTELED_AMOUNT FINANCING_AMOUNT 
        FINANCING_DEBT FINANCING_SETTLED_SUM INT_RATE_FOR_SETTLED_FIN 
        INT_RATE_ON_DATE_OF_FIN INVOICE_DUE_DATE LETTER_DATE RECOURCE_DATE 
        REC_FACT_SERVICE_COM_EXCL_VAT ACCUM_FACT_SERV_COM_EXCL_VAT 
        RECEIVED_FIN_COM_EXCL_VAT ACCUM_FIN_COM_EXCL_VAT 
        RECEIVED_HANDLING_FEE_EXCL_VAT ACCUM_HANDLING_FEE_EXCL_VAT 
        RECEIVED_ORG_COM_EXCL_VAT ACCUM_ORG_COM_EXCL_VAT FIN_AND_COM_CLOSED 
        INVOICE_CLOSED CURR_INT_RATE_FOR_FIN_DEBT TOTAL_COMMISSIONS_TILL_TODAY 
        FINANCING_START_DATE FINANCING_SETTLE_DATE REC_MANAGEMENT_COM_EXCL_VAT 
        ACCUM_MANAGEMENT_COM_EXCL_VAT INT_RATE_VALID_FROM ED BRANCH_ID 
        ZB_47803 MIDAS1437 ZB_47803_PR MIDAS1438 ZB_47423_01 MIDAS_189301 
        ZB_47423_02 MIDAS_189302 ZB_47423_03 MIDAS_189303 ZB_47423_04 
        MIDAS_189304 NOT_ADVANCED_PAYMENT;
%let _OUTPUT_col_count = 62;
%let _OUTPUT_col0_name = CURRENT_DATE;
%let _OUTPUT_col0_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col0_length = 8;
%let _OUTPUT_col0_type = ;
%let _OUTPUT_col0_format = DATETIME20.;
%let _OUTPUT_col0_informat = DATETIME20.;
%let _OUTPUT_col0_label = %nrquote(CURRENT_DATE);
%let _OUTPUT_col0_exp = ;
%let _OUTPUT_col0_input_count = 0;
%let _OUTPUT_col1_name = CLIENT_NAME;
%let _OUTPUT_col1_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col1_length = 50;
%let _OUTPUT_col1_type = $;
%let _OUTPUT_col1_format = $50.;
%let _OUTPUT_col1_informat = $50.;
%let _OUTPUT_col1_label = %nrquote(CLIENT_NAME);
%let _OUTPUT_col1_exp = ;
%let _OUTPUT_col1_input_count = 0;
%let _OUTPUT_col2_name = CLIENT_NUNBER;
%let _OUTPUT_col2_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col2_length = 10;
%let _OUTPUT_col2_type = $;
%let _OUTPUT_col2_format = $10.;
%let _OUTPUT_col2_informat = $10.;
%let _OUTPUT_col2_label = %nrquote(CLIENT_NUNBER);
%let _OUTPUT_col2_exp = ;
%let _OUTPUT_col2_input_count = 0;
%let _OUTPUT_col3_name = FACTORING_AGREEMENT_NUMBER;
%let _OUTPUT_col3_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col3_length = 100;
%let _OUTPUT_col3_type = $;
%let _OUTPUT_col3_format = $100.;
%let _OUTPUT_col3_informat = $100.;
%let _OUTPUT_col3_label = %nrquote(FACTORING_AGREEMENT_NUMBER);
%let _OUTPUT_col3_exp = ;
%let _OUTPUT_col3_input_count = 0;
%let _OUTPUT_col4_name = AGREEMENT_START_DATE;
%let _OUTPUT_col4_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col4_length = 8;
%let _OUTPUT_col4_type = ;
%let _OUTPUT_col4_format = DATETIME20.;
%let _OUTPUT_col4_informat = DATETIME20.;
%let _OUTPUT_col4_label = %nrquote(AGREEMENT_START_DATE);
%let _OUTPUT_col4_exp = ;
%let _OUTPUT_col4_input_count = 0;
%let _OUTPUT_col5_name = RECOURCE;
%let _OUTPUT_col5_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col5_length = 1;
%let _OUTPUT_col5_type = $;
%let _OUTPUT_col5_format = $1.;
%let _OUTPUT_col5_informat = $1.;
%let _OUTPUT_col5_label = %nrquote(RECOURCE);
%let _OUTPUT_col5_exp = ;
%let _OUTPUT_col5_input_count = 0;
%let _OUTPUT_col6_name = SUPPLIER_LIMIT;
%let _OUTPUT_col6_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col6_length = 8;
%let _OUTPUT_col6_type = ;
%let _OUTPUT_col6_format = 25.2;
%let _OUTPUT_col6_informat = 25.2;
%let _OUTPUT_col6_label = %nrquote(SUPPLIER_LIMIT);
%let _OUTPUT_col6_exp = ;
%let _OUTPUT_col6_input_count = 0;
%let _OUTPUT_col7_name = SUPPLIER_LIMIT_CURRENCY;
%let _OUTPUT_col7_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col7_length = 3;
%let _OUTPUT_col7_type = $;
%let _OUTPUT_col7_format = $3.;
%let _OUTPUT_col7_informat = $3.;
%let _OUTPUT_col7_label = %nrquote(SUPPLIER_LIMIT_CURRENCY);
%let _OUTPUT_col7_exp = ;
%let _OUTPUT_col7_input_count = 0;
%let _OUTPUT_col8_name = SUPPLIER_LIMIT_START_DATE;
%let _OUTPUT_col8_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col8_length = 8;
%let _OUTPUT_col8_type = ;
%let _OUTPUT_col8_format = DATETIME20.;
%let _OUTPUT_col8_informat = DATETIME20.;
%let _OUTPUT_col8_label = %nrquote(SUPPLIER_LIMIT_START_DATE);
%let _OUTPUT_col8_exp = ;
%let _OUTPUT_col8_input_count = 0;
%let _OUTPUT_col9_name = SUPPLIER_LIMIT_MATURITY_DATE;
%let _OUTPUT_col9_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col9_length = 8;
%let _OUTPUT_col9_type = ;
%let _OUTPUT_col9_format = DATETIME20.;
%let _OUTPUT_col9_informat = DATETIME20.;
%let _OUTPUT_col9_label = %nrquote(SUPPLIER_LIMIT_MATURITY_DATE);
%let _OUTPUT_col9_exp = ;
%let _OUTPUT_col9_input_count = 0;
%let _OUTPUT_col10_name = FINANCING_PERCENTAGE;
%let _OUTPUT_col10_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col10_length = 8;
%let _OUTPUT_col10_type = ;
%let _OUTPUT_col10_format = 18.8;
%let _OUTPUT_col10_informat = 18.8;
%let _OUTPUT_col10_label = %nrquote(FINANCING_PERCENTAGE);
%let _OUTPUT_col10_exp = ;
%let _OUTPUT_col10_input_count = 0;
%let _OUTPUT_col11_name = DEBTOR_NAME;
%let _OUTPUT_col11_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col11_length = 50;
%let _OUTPUT_col11_type = $;
%let _OUTPUT_col11_format = $50.;
%let _OUTPUT_col11_informat = $50.;
%let _OUTPUT_col11_label = %nrquote(DEBTOR_NAME);
%let _OUTPUT_col11_exp = ;
%let _OUTPUT_col11_input_count = 0;
%let _OUTPUT_col12_name = DEBTOR_NUMBER;
%let _OUTPUT_col12_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col12_length = 8;
%let _OUTPUT_col12_type = $;
%let _OUTPUT_col12_format = $8.;
%let _OUTPUT_col12_informat = $8.;
%let _OUTPUT_col12_label = %nrquote(DEBTOR_NUMBER);
%let _OUTPUT_col12_exp = ;
%let _OUTPUT_col12_input_count = 0;
%let _OUTPUT_col13_name = DEBTOR_LIMIT;
%let _OUTPUT_col13_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col13_length = 8;
%let _OUTPUT_col13_type = ;
%let _OUTPUT_col13_format = 25.2;
%let _OUTPUT_col13_informat = 25.2;
%let _OUTPUT_col13_label = %nrquote(DEBTOR_LIMIT);
%let _OUTPUT_col13_exp = ;
%let _OUTPUT_col13_input_count = 0;
%let _OUTPUT_col14_name = DEBTOR_LIMIT_START_DATE;
%let _OUTPUT_col14_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col14_length = 8;
%let _OUTPUT_col14_type = ;
%let _OUTPUT_col14_format = DATETIME20.;
%let _OUTPUT_col14_informat = DATETIME20.;
%let _OUTPUT_col14_label = %nrquote(DEBTOR_LIMIT_START_DATE);
%let _OUTPUT_col14_exp = ;
%let _OUTPUT_col14_input_count = 0;
%let _OUTPUT_col15_name = DEBTOR_LIMIT_MATURITY_DATE;
%let _OUTPUT_col15_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col15_length = 8;
%let _OUTPUT_col15_type = ;
%let _OUTPUT_col15_format = DATETIME20.;
%let _OUTPUT_col15_informat = DATETIME20.;
%let _OUTPUT_col15_label = %nrquote(DEBTOR_LIMIT_MATURITY_DATE);
%let _OUTPUT_col15_exp = ;
%let _OUTPUT_col15_input_count = 0;
%let _OUTPUT_col16_name = INVOICE_NUMBER;
%let _OUTPUT_col16_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col16_length = 100;
%let _OUTPUT_col16_type = $;
%let _OUTPUT_col16_format = $100.;
%let _OUTPUT_col16_informat = $100.;
%let _OUTPUT_col16_label = %nrquote(INVOICE_NUMBER);
%let _OUTPUT_col16_exp = ;
%let _OUTPUT_col16_input_count = 0;
%let _OUTPUT_col17_name = INVOICE_UNIQUE_IDENTIFIER;
%let _OUTPUT_col17_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col17_length = 200;
%let _OUTPUT_col17_type = $;
%let _OUTPUT_col17_format = $200.;
%let _OUTPUT_col17_informat = $200.;
%let _OUTPUT_col17_label = %nrquote(INVOICE_UNIQUE_IDENTIFIER);
%let _OUTPUT_col17_exp = ;
%let _OUTPUT_col17_input_count = 0;
%let _OUTPUT_col18_name = INVOICE_DATE;
%let _OUTPUT_col18_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col18_length = 8;
%let _OUTPUT_col18_type = ;
%let _OUTPUT_col18_format = DATETIME20.;
%let _OUTPUT_col18_informat = DATETIME20.;
%let _OUTPUT_col18_label = %nrquote(INVOICE_DATE);
%let _OUTPUT_col18_exp = ;
%let _OUTPUT_col18_input_count = 0;
%let _OUTPUT_col19_name = INVOICE_TOTAL_SUM;
%let _OUTPUT_col19_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col19_length = 8;
%let _OUTPUT_col19_type = ;
%let _OUTPUT_col19_format = 25.2;
%let _OUTPUT_col19_informat = 25.2;
%let _OUTPUT_col19_label = %nrquote(INVOICE_TOTAL_SUM);
%let _OUTPUT_col19_exp = ;
%let _OUTPUT_col19_input_count = 0;
%let _OUTPUT_col20_name = INVOICE_CURRENCY;
%let _OUTPUT_col20_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col20_length = 3;
%let _OUTPUT_col20_type = $;
%let _OUTPUT_col20_format = $3.;
%let _OUTPUT_col20_informat = $3.;
%let _OUTPUT_col20_label = %nrquote(INVOICE_CURRENCY);
%let _OUTPUT_col20_exp = ;
%let _OUTPUT_col20_input_count = 0;
%let _OUTPUT_col21_name = INVOICE_UNSETTELED_AMOUNT;
%let _OUTPUT_col21_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col21_length = 8;
%let _OUTPUT_col21_type = ;
%let _OUTPUT_col21_format = 25.2;
%let _OUTPUT_col21_informat = 25.2;
%let _OUTPUT_col21_label = %nrquote(INVOICE_UNSETTELED_AMOUNT);
%let _OUTPUT_col21_exp = ;
%let _OUTPUT_col21_input_count = 0;
%let _OUTPUT_col22_name = FINANCING_AMOUNT;
%let _OUTPUT_col22_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col22_length = 8;
%let _OUTPUT_col22_type = ;
%let _OUTPUT_col22_format = 25.2;
%let _OUTPUT_col22_informat = 25.2;
%let _OUTPUT_col22_label = %nrquote(FINANCING_AMOUNT);
%let _OUTPUT_col22_exp = ;
%let _OUTPUT_col22_input_count = 0;
%let _OUTPUT_col23_name = FINANCING_DEBT;
%let _OUTPUT_col23_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col23_length = 8;
%let _OUTPUT_col23_type = ;
%let _OUTPUT_col23_format = 25.2;
%let _OUTPUT_col23_informat = 25.2;
%let _OUTPUT_col23_label = %nrquote(FINANCING_DEBT);
%let _OUTPUT_col23_exp = ;
%let _OUTPUT_col23_input_count = 0;
%let _OUTPUT_col24_name = FINANCING_SETTLED_SUM;
%let _OUTPUT_col24_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col24_length = 8;
%let _OUTPUT_col24_type = ;
%let _OUTPUT_col24_format = 25.2;
%let _OUTPUT_col24_informat = 25.2;
%let _OUTPUT_col24_label = %nrquote(FINANCING_SETTLED_SUM);
%let _OUTPUT_col24_exp = ;
%let _OUTPUT_col24_input_count = 0;
%let _OUTPUT_col25_name = INT_RATE_FOR_SETTLED_FIN;
%let _OUTPUT_col25_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col25_length = 8;
%let _OUTPUT_col25_type = ;
%let _OUTPUT_col25_format = 18.8;
%let _OUTPUT_col25_informat = 18.8;
%let _OUTPUT_col25_label = %nrquote(INT_RATE_FOR_SETTLED_FIN);
%let _OUTPUT_col25_exp = ;
%let _OUTPUT_col25_input_count = 0;
%let _OUTPUT_col26_name = INT_RATE_ON_DATE_OF_FIN;
%let _OUTPUT_col26_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col26_length = 8;
%let _OUTPUT_col26_type = ;
%let _OUTPUT_col26_format = 18.8;
%let _OUTPUT_col26_informat = 18.8;
%let _OUTPUT_col26_label = %nrquote(INT_RATE_ON_DATE_OF_FIN);
%let _OUTPUT_col26_exp = ;
%let _OUTPUT_col26_input_count = 0;
%let _OUTPUT_col27_name = INVOICE_DUE_DATE;
%let _OUTPUT_col27_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col27_length = 8;
%let _OUTPUT_col27_type = ;
%let _OUTPUT_col27_format = DATETIME20.;
%let _OUTPUT_col27_informat = DATETIME20.;
%let _OUTPUT_col27_label = %nrquote(INVOICE_DUE_DATE);
%let _OUTPUT_col27_exp = ;
%let _OUTPUT_col27_input_count = 0;
%let _OUTPUT_col28_name = LETTER_DATE;
%let _OUTPUT_col28_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col28_length = 8;
%let _OUTPUT_col28_type = ;
%let _OUTPUT_col28_format = DATETIME20.;
%let _OUTPUT_col28_informat = DATETIME20.;
%let _OUTPUT_col28_label = %nrquote(LETTER_DATE);
%let _OUTPUT_col28_exp = ;
%let _OUTPUT_col28_input_count = 0;
%let _OUTPUT_col29_name = RECOURCE_DATE;
%let _OUTPUT_col29_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col29_length = 8;
%let _OUTPUT_col29_type = ;
%let _OUTPUT_col29_format = DATETIME20.;
%let _OUTPUT_col29_informat = DATETIME20.;
%let _OUTPUT_col29_label = %nrquote(RECOURCE_DATE);
%let _OUTPUT_col29_exp = ;
%let _OUTPUT_col29_input_count = 0;
%let _OUTPUT_col30_name = REC_FACT_SERVICE_COM_EXCL_VAT;
%let _OUTPUT_col30_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col30_length = 8;
%let _OUTPUT_col30_type = ;
%let _OUTPUT_col30_format = 25.2;
%let _OUTPUT_col30_informat = 25.2;
%let _OUTPUT_col30_label = %nrquote(REC_FACT_SERVICE_COM_EXCL_VAT);
%let _OUTPUT_col30_exp = ;
%let _OUTPUT_col30_input_count = 0;
%let _OUTPUT_col31_name = ACCUM_FACT_SERV_COM_EXCL_VAT;
%let _OUTPUT_col31_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col31_length = 8;
%let _OUTPUT_col31_type = ;
%let _OUTPUT_col31_format = 25.2;
%let _OUTPUT_col31_informat = 25.2;
%let _OUTPUT_col31_label = %nrquote(ACCUM_FACT_SERV_COM_EXCL_VAT);
%let _OUTPUT_col31_exp = ;
%let _OUTPUT_col31_input_count = 0;
%let _OUTPUT_col32_name = RECEIVED_FIN_COM_EXCL_VAT;
%let _OUTPUT_col32_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col32_length = 8;
%let _OUTPUT_col32_type = ;
%let _OUTPUT_col32_format = 25.2;
%let _OUTPUT_col32_informat = 25.2;
%let _OUTPUT_col32_label = %nrquote(RECEIVED_FIN_COM_EXCL_VAT);
%let _OUTPUT_col32_exp = ;
%let _OUTPUT_col32_input_count = 0;
%let _OUTPUT_col33_name = ACCUM_FIN_COM_EXCL_VAT;
%let _OUTPUT_col33_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col33_length = 8;
%let _OUTPUT_col33_type = ;
%let _OUTPUT_col33_format = 25.2;
%let _OUTPUT_col33_informat = 25.2;
%let _OUTPUT_col33_label = %nrquote(ACCUM_FIN_COM_EXCL_VAT);
%let _OUTPUT_col33_exp = ;
%let _OUTPUT_col33_input_count = 0;
%let _OUTPUT_col34_name = RECEIVED_HANDLING_FEE_EXCL_VAT;
%let _OUTPUT_col34_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col34_length = 8;
%let _OUTPUT_col34_type = ;
%let _OUTPUT_col34_format = 25.2;
%let _OUTPUT_col34_informat = 25.2;
%let _OUTPUT_col34_label = %nrquote(RECEIVED_HANDLING_FEE_EXCL_VAT);
%let _OUTPUT_col34_exp = ;
%let _OUTPUT_col34_input_count = 0;
%let _OUTPUT_col35_name = ACCUM_HANDLING_FEE_EXCL_VAT;
%let _OUTPUT_col35_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col35_length = 8;
%let _OUTPUT_col35_type = ;
%let _OUTPUT_col35_format = 25.2;
%let _OUTPUT_col35_informat = 25.2;
%let _OUTPUT_col35_label = %nrquote(ACCUM_HANDLING_FEE_EXCL_VAT);
%let _OUTPUT_col35_exp = ;
%let _OUTPUT_col35_input_count = 0;
%let _OUTPUT_col36_name = RECEIVED_ORG_COM_EXCL_VAT;
%let _OUTPUT_col36_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col36_length = 8;
%let _OUTPUT_col36_type = ;
%let _OUTPUT_col36_format = 25.2;
%let _OUTPUT_col36_informat = 25.2;
%let _OUTPUT_col36_label = %nrquote(RECEIVED_ORG_COM_EXCL_VAT);
%let _OUTPUT_col36_exp = ;
%let _OUTPUT_col36_input_count = 0;
%let _OUTPUT_col37_name = ACCUM_ORG_COM_EXCL_VAT;
%let _OUTPUT_col37_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col37_length = 8;
%let _OUTPUT_col37_type = ;
%let _OUTPUT_col37_format = 25.2;
%let _OUTPUT_col37_informat = 25.2;
%let _OUTPUT_col37_label = %nrquote(ACCUM_ORG_COM_EXCL_VAT);
%let _OUTPUT_col37_exp = ;
%let _OUTPUT_col37_input_count = 0;
%let _OUTPUT_col38_name = FIN_AND_COM_CLOSED;
%let _OUTPUT_col38_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col38_length = 8;
%let _OUTPUT_col38_type = ;
%let _OUTPUT_col38_format = DATETIME20.;
%let _OUTPUT_col38_informat = DATETIME20.;
%let _OUTPUT_col38_label = %nrquote(FIN_AND_COM_CLOSED);
%let _OUTPUT_col38_exp = ;
%let _OUTPUT_col38_input_count = 0;
%let _OUTPUT_col39_name = INVOICE_CLOSED;
%let _OUTPUT_col39_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col39_length = 8;
%let _OUTPUT_col39_type = ;
%let _OUTPUT_col39_format = DATETIME20.;
%let _OUTPUT_col39_informat = DATETIME20.;
%let _OUTPUT_col39_label = %nrquote(INVOICE_CLOSED);
%let _OUTPUT_col39_exp = ;
%let _OUTPUT_col39_input_count = 0;
%let _OUTPUT_col40_name = CURR_INT_RATE_FOR_FIN_DEBT;
%let _OUTPUT_col40_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col40_length = 8;
%let _OUTPUT_col40_type = ;
%let _OUTPUT_col40_format = 18.8;
%let _OUTPUT_col40_informat = 18.8;
%let _OUTPUT_col40_label = %nrquote(CURR_INT_RATE_FOR_FIN_DEBT);
%let _OUTPUT_col40_exp = ;
%let _OUTPUT_col40_input_count = 0;
%let _OUTPUT_col41_name = TOTAL_COMMISSIONS_TILL_TODAY;
%let _OUTPUT_col41_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col41_length = 8;
%let _OUTPUT_col41_type = ;
%let _OUTPUT_col41_format = 25.2;
%let _OUTPUT_col41_informat = 25.2;
%let _OUTPUT_col41_label = %nrquote(TOTAL_COMMISSIONS_TILL_TODAY);
%let _OUTPUT_col41_exp = ;
%let _OUTPUT_col41_input_count = 0;
%let _OUTPUT_col42_name = FINANCING_START_DATE;
%let _OUTPUT_col42_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col42_length = 8;
%let _OUTPUT_col42_type = ;
%let _OUTPUT_col42_format = DATETIME20.;
%let _OUTPUT_col42_informat = DATETIME20.;
%let _OUTPUT_col42_label = %nrquote(FINANCING_START_DATE);
%let _OUTPUT_col42_exp = ;
%let _OUTPUT_col42_input_count = 0;
%let _OUTPUT_col43_name = FINANCING_SETTLE_DATE;
%let _OUTPUT_col43_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col43_length = 8;
%let _OUTPUT_col43_type = ;
%let _OUTPUT_col43_format = DATETIME20.;
%let _OUTPUT_col43_informat = DATETIME20.;
%let _OUTPUT_col43_label = %nrquote(FINANCING_SETTLE_DATE);
%let _OUTPUT_col43_exp = ;
%let _OUTPUT_col43_input_count = 0;
%let _OUTPUT_col44_name = REC_MANAGEMENT_COM_EXCL_VAT;
%let _OUTPUT_col44_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col44_length = 8;
%let _OUTPUT_col44_type = ;
%let _OUTPUT_col44_format = 25.2;
%let _OUTPUT_col44_informat = 25.2;
%let _OUTPUT_col44_label = %nrquote(REC_MANAGEMENT_COM_EXCL_VAT);
%let _OUTPUT_col44_exp = ;
%let _OUTPUT_col44_input_count = 0;
%let _OUTPUT_col45_name = ACCUM_MANAGEMENT_COM_EXCL_VAT;
%let _OUTPUT_col45_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col45_length = 8;
%let _OUTPUT_col45_type = ;
%let _OUTPUT_col45_format = 25.2;
%let _OUTPUT_col45_informat = 25.2;
%let _OUTPUT_col45_label = %nrquote(ACCUM_MANAGEMENT_COM_EXCL_VAT);
%let _OUTPUT_col45_exp = ;
%let _OUTPUT_col45_input_count = 0;
%let _OUTPUT_col46_name = INT_RATE_VALID_FROM;
%let _OUTPUT_col46_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col46_length = 8;
%let _OUTPUT_col46_type = ;
%let _OUTPUT_col46_format = DATETIME20.;
%let _OUTPUT_col46_informat = DATETIME20.;
%let _OUTPUT_col46_label = %nrquote(INT_RATE_VALID_FROM);
%let _OUTPUT_col46_exp = ;
%let _OUTPUT_col46_input_count = 0;
%let _OUTPUT_col47_name = ED;
%let _OUTPUT_col47_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col47_length = 8;
%let _OUTPUT_col47_type = ;
%let _OUTPUT_col47_format = DATETIME20.;
%let _OUTPUT_col47_informat = DATETIME20.;
%let _OUTPUT_col47_label = %nrquote(ED);
%let _OUTPUT_col47_exp = ;
%let _OUTPUT_col47_input_count = 0;
%let _OUTPUT_col48_name = BRANCH_ID;
%let _OUTPUT_col48_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col48_length = 3;
%let _OUTPUT_col48_type = $;
%let _OUTPUT_col48_format = $3.;
%let _OUTPUT_col48_informat = $3.;
%let _OUTPUT_col48_label = %nrquote(BRANCH_ID);
%let _OUTPUT_col48_exp = ;
%let _OUTPUT_col48_input_count = 0;
%let _OUTPUT_col49_name = ZB_47803;
%let _OUTPUT_col49_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col49_length = 20;
%let _OUTPUT_col49_type = $;
%let _OUTPUT_col49_format = $20.;
%let _OUTPUT_col49_informat = $20.;
%let _OUTPUT_col49_label = %nrquote(ZB_47803);
%let _OUTPUT_col49_exp = ;
%let _OUTPUT_col49_input_count = 0;
%let _OUTPUT_col50_name = MIDAS1437;
%let _OUTPUT_col50_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col50_length = 40;
%let _OUTPUT_col50_type = $;
%let _OUTPUT_col50_format = $40.;
%let _OUTPUT_col50_informat = $40.;
%let _OUTPUT_col50_label = %nrquote(MIDAS1437);
%let _OUTPUT_col50_exp = ;
%let _OUTPUT_col50_input_count = 0;
%let _OUTPUT_col51_name = ZB_47803_PR;
%let _OUTPUT_col51_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col51_length = 20;
%let _OUTPUT_col51_type = $;
%let _OUTPUT_col51_format = $20.;
%let _OUTPUT_col51_informat = $20.;
%let _OUTPUT_col51_label = %nrquote(ZB_47803_PR);
%let _OUTPUT_col51_exp = ;
%let _OUTPUT_col51_input_count = 0;
%let _OUTPUT_col52_name = MIDAS1438;
%let _OUTPUT_col52_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col52_length = 40;
%let _OUTPUT_col52_type = $;
%let _OUTPUT_col52_format = $40.;
%let _OUTPUT_col52_informat = $40.;
%let _OUTPUT_col52_label = %nrquote(MIDAS1438);
%let _OUTPUT_col52_exp = ;
%let _OUTPUT_col52_input_count = 0;
%let _OUTPUT_col53_name = ZB_47423_01;
%let _OUTPUT_col53_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col53_length = 20;
%let _OUTPUT_col53_type = $;
%let _OUTPUT_col53_format = $20.;
%let _OUTPUT_col53_informat = $20.;
%let _OUTPUT_col53_label = %nrquote(ZB_47423_01);
%let _OUTPUT_col53_exp = ;
%let _OUTPUT_col53_input_count = 0;
%let _OUTPUT_col54_name = MIDAS_189301;
%let _OUTPUT_col54_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col54_length = 40;
%let _OUTPUT_col54_type = $;
%let _OUTPUT_col54_format = $40.;
%let _OUTPUT_col54_informat = $40.;
%let _OUTPUT_col54_label = %nrquote(MIDAS_189301);
%let _OUTPUT_col54_exp = ;
%let _OUTPUT_col54_input_count = 0;
%let _OUTPUT_col55_name = ZB_47423_02;
%let _OUTPUT_col55_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col55_length = 20;
%let _OUTPUT_col55_type = $;
%let _OUTPUT_col55_format = $20.;
%let _OUTPUT_col55_informat = $20.;
%let _OUTPUT_col55_label = %nrquote(ZB_47423_02);
%let _OUTPUT_col55_exp = ;
%let _OUTPUT_col55_input_count = 0;
%let _OUTPUT_col56_name = MIDAS_189302;
%let _OUTPUT_col56_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col56_length = 40;
%let _OUTPUT_col56_type = $;
%let _OUTPUT_col56_format = $40.;
%let _OUTPUT_col56_informat = $40.;
%let _OUTPUT_col56_label = %nrquote(MIDAS_189302);
%let _OUTPUT_col56_exp = ;
%let _OUTPUT_col56_input_count = 0;
%let _OUTPUT_col57_name = ZB_47423_03;
%let _OUTPUT_col57_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col57_length = 20;
%let _OUTPUT_col57_type = $;
%let _OUTPUT_col57_format = $20.;
%let _OUTPUT_col57_informat = $20.;
%let _OUTPUT_col57_label = %nrquote(ZB_47423_03);
%let _OUTPUT_col57_exp = ;
%let _OUTPUT_col57_input_count = 0;
%let _OUTPUT_col58_name = MIDAS_189303;
%let _OUTPUT_col58_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col58_length = 40;
%let _OUTPUT_col58_type = $;
%let _OUTPUT_col58_format = $40.;
%let _OUTPUT_col58_informat = $40.;
%let _OUTPUT_col58_label = %nrquote(MIDAS_189303);
%let _OUTPUT_col58_exp = ;
%let _OUTPUT_col58_input_count = 0;
%let _OUTPUT_col59_name = ZB_47423_04;
%let _OUTPUT_col59_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col59_length = 20;
%let _OUTPUT_col59_type = $;
%let _OUTPUT_col59_format = $20.;
%let _OUTPUT_col59_informat = $20.;
%let _OUTPUT_col59_label = %nrquote(ZB_47423_04);
%let _OUTPUT_col59_exp = ;
%let _OUTPUT_col59_input_count = 0;
%let _OUTPUT_col60_name = MIDAS_189304;
%let _OUTPUT_col60_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col60_length = 40;
%let _OUTPUT_col60_type = $;
%let _OUTPUT_col60_format = $40.;
%let _OUTPUT_col60_informat = $40.;
%let _OUTPUT_col60_label = %nrquote(MIDAS_189304);
%let _OUTPUT_col60_exp = ;
%let _OUTPUT_col60_input_count = 0;
%let _OUTPUT_col61_name = NOT_ADVANCED_PAYMENT;
%let _OUTPUT_col61_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT_col61_length = 8;
%let _OUTPUT_col61_type = ;
%let _OUTPUT_col61_format = 25.2;
%let _OUTPUT_col61_informat = 25.2;
%let _OUTPUT_col61_label = %nrquote(NOT_ADVANCED_PAYMENT);
%let _OUTPUT_col61_exp = ;
%let _OUTPUT_col61_input_count = 0;

%let _OUTPUT1 = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DM_FCTR" 
;
%let _OUTPUT1_engine = ORACLE;
%let _OUTPUT1_memtype = DATA;
%let _OUTPUT1_options = %nrquote();
%let _OUTPUT1_alter = %nrquote();
%let _OUTPUT1_path = %nrquote(/DWH_DMFCTR_REP/Marts/DM_FCTR/V_IFCCHS_FACTORING_MIS_A%(Table%));
%let _OUTPUT1_type = 1;
%let _OUTPUT1_label = %nrquote();
/* List of target columns to keep  */ 
%let _OUTPUT1_keep = CURRENT_DATE CLIENT_NAME CLIENT_NUNBER FACTORING_AGREEMENT_NUMBER 
        AGREEMENT_START_DATE RECOURCE SUPPLIER_LIMIT SUPPLIER_LIMIT_CURRENCY 
        SUPPLIER_LIMIT_START_DATE SUPPLIER_LIMIT_MATURITY_DATE 
        FINANCING_PERCENTAGE DEBTOR_NAME DEBTOR_NUMBER DEBTOR_LIMIT 
        DEBTOR_LIMIT_START_DATE DEBTOR_LIMIT_MATURITY_DATE INVOICE_NUMBER 
        INVOICE_UNIQUE_IDENTIFIER INVOICE_DATE INVOICE_TOTAL_SUM 
        INVOICE_CURRENCY INVOICE_UNSETTELED_AMOUNT FINANCING_AMOUNT 
        FINANCING_DEBT FINANCING_SETTLED_SUM INT_RATE_FOR_SETTLED_FIN 
        INT_RATE_ON_DATE_OF_FIN INVOICE_DUE_DATE LETTER_DATE RECOURCE_DATE 
        REC_FACT_SERVICE_COM_EXCL_VAT ACCUM_FACT_SERV_COM_EXCL_VAT 
        RECEIVED_FIN_COM_EXCL_VAT ACCUM_FIN_COM_EXCL_VAT 
        RECEIVED_HANDLING_FEE_EXCL_VAT ACCUM_HANDLING_FEE_EXCL_VAT 
        RECEIVED_ORG_COM_EXCL_VAT ACCUM_ORG_COM_EXCL_VAT FIN_AND_COM_CLOSED 
        INVOICE_CLOSED CURR_INT_RATE_FOR_FIN_DEBT TOTAL_COMMISSIONS_TILL_TODAY 
        FINANCING_START_DATE FINANCING_SETTLE_DATE REC_MANAGEMENT_COM_EXCL_VAT 
        ACCUM_MANAGEMENT_COM_EXCL_VAT INT_RATE_VALID_FROM ED BRANCH_ID 
        ZB_47803 MIDAS1437 ZB_47803_PR MIDAS1438 ZB_47423_01 MIDAS_189301 
        ZB_47423_02 MIDAS_189302 ZB_47423_03 MIDAS_189303 ZB_47423_04 
        MIDAS_189304 NOT_ADVANCED_PAYMENT;
%let _OUTPUT1_col_count = 62;
%let _OUTPUT1_col0_name = CURRENT_DATE;
%let _OUTPUT1_col0_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col0_length = 8;
%let _OUTPUT1_col0_type = ;
%let _OUTPUT1_col0_format = DATETIME20.;
%let _OUTPUT1_col0_informat = DATETIME20.;
%let _OUTPUT1_col0_label = %nrquote(CURRENT_DATE);
%let _OUTPUT1_col0_exp = ;
%let _OUTPUT1_col0_input_count = 0;
%let _OUTPUT1_col1_name = CLIENT_NAME;
%let _OUTPUT1_col1_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col1_length = 50;
%let _OUTPUT1_col1_type = $;
%let _OUTPUT1_col1_format = $50.;
%let _OUTPUT1_col1_informat = $50.;
%let _OUTPUT1_col1_label = %nrquote(CLIENT_NAME);
%let _OUTPUT1_col1_exp = ;
%let _OUTPUT1_col1_input_count = 0;
%let _OUTPUT1_col2_name = CLIENT_NUNBER;
%let _OUTPUT1_col2_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col2_length = 10;
%let _OUTPUT1_col2_type = $;
%let _OUTPUT1_col2_format = $10.;
%let _OUTPUT1_col2_informat = $10.;
%let _OUTPUT1_col2_label = %nrquote(CLIENT_NUNBER);
%let _OUTPUT1_col2_exp = ;
%let _OUTPUT1_col2_input_count = 0;
%let _OUTPUT1_col3_name = FACTORING_AGREEMENT_NUMBER;
%let _OUTPUT1_col3_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col3_length = 100;
%let _OUTPUT1_col3_type = $;
%let _OUTPUT1_col3_format = $100.;
%let _OUTPUT1_col3_informat = $100.;
%let _OUTPUT1_col3_label = %nrquote(FACTORING_AGREEMENT_NUMBER);
%let _OUTPUT1_col3_exp = ;
%let _OUTPUT1_col3_input_count = 0;
%let _OUTPUT1_col4_name = AGREEMENT_START_DATE;
%let _OUTPUT1_col4_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col4_length = 8;
%let _OUTPUT1_col4_type = ;
%let _OUTPUT1_col4_format = DATETIME20.;
%let _OUTPUT1_col4_informat = DATETIME20.;
%let _OUTPUT1_col4_label = %nrquote(AGREEMENT_START_DATE);
%let _OUTPUT1_col4_exp = ;
%let _OUTPUT1_col4_input_count = 0;
%let _OUTPUT1_col5_name = RECOURCE;
%let _OUTPUT1_col5_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col5_length = 1;
%let _OUTPUT1_col5_type = $;
%let _OUTPUT1_col5_format = $1.;
%let _OUTPUT1_col5_informat = $1.;
%let _OUTPUT1_col5_label = %nrquote(RECOURCE);
%let _OUTPUT1_col5_exp = ;
%let _OUTPUT1_col5_input_count = 0;
%let _OUTPUT1_col6_name = SUPPLIER_LIMIT;
%let _OUTPUT1_col6_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col6_length = 8;
%let _OUTPUT1_col6_type = ;
%let _OUTPUT1_col6_format = 25.2;
%let _OUTPUT1_col6_informat = 25.2;
%let _OUTPUT1_col6_label = %nrquote(SUPPLIER_LIMIT);
%let _OUTPUT1_col6_exp = ;
%let _OUTPUT1_col6_input_count = 0;
%let _OUTPUT1_col7_name = SUPPLIER_LIMIT_CURRENCY;
%let _OUTPUT1_col7_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col7_length = 3;
%let _OUTPUT1_col7_type = $;
%let _OUTPUT1_col7_format = $3.;
%let _OUTPUT1_col7_informat = $3.;
%let _OUTPUT1_col7_label = %nrquote(SUPPLIER_LIMIT_CURRENCY);
%let _OUTPUT1_col7_exp = ;
%let _OUTPUT1_col7_input_count = 0;
%let _OUTPUT1_col8_name = SUPPLIER_LIMIT_START_DATE;
%let _OUTPUT1_col8_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col8_length = 8;
%let _OUTPUT1_col8_type = ;
%let _OUTPUT1_col8_format = DATETIME20.;
%let _OUTPUT1_col8_informat = DATETIME20.;
%let _OUTPUT1_col8_label = %nrquote(SUPPLIER_LIMIT_START_DATE);
%let _OUTPUT1_col8_exp = ;
%let _OUTPUT1_col8_input_count = 0;
%let _OUTPUT1_col9_name = SUPPLIER_LIMIT_MATURITY_DATE;
%let _OUTPUT1_col9_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col9_length = 8;
%let _OUTPUT1_col9_type = ;
%let _OUTPUT1_col9_format = DATETIME20.;
%let _OUTPUT1_col9_informat = DATETIME20.;
%let _OUTPUT1_col9_label = %nrquote(SUPPLIER_LIMIT_MATURITY_DATE);
%let _OUTPUT1_col9_exp = ;
%let _OUTPUT1_col9_input_count = 0;
%let _OUTPUT1_col10_name = FINANCING_PERCENTAGE;
%let _OUTPUT1_col10_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col10_length = 8;
%let _OUTPUT1_col10_type = ;
%let _OUTPUT1_col10_format = 18.8;
%let _OUTPUT1_col10_informat = 18.8;
%let _OUTPUT1_col10_label = %nrquote(FINANCING_PERCENTAGE);
%let _OUTPUT1_col10_exp = ;
%let _OUTPUT1_col10_input_count = 0;
%let _OUTPUT1_col11_name = DEBTOR_NAME;
%let _OUTPUT1_col11_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col11_length = 50;
%let _OUTPUT1_col11_type = $;
%let _OUTPUT1_col11_format = $50.;
%let _OUTPUT1_col11_informat = $50.;
%let _OUTPUT1_col11_label = %nrquote(DEBTOR_NAME);
%let _OUTPUT1_col11_exp = ;
%let _OUTPUT1_col11_input_count = 0;
%let _OUTPUT1_col12_name = DEBTOR_NUMBER;
%let _OUTPUT1_col12_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col12_length = 8;
%let _OUTPUT1_col12_type = $;
%let _OUTPUT1_col12_format = $8.;
%let _OUTPUT1_col12_informat = $8.;
%let _OUTPUT1_col12_label = %nrquote(DEBTOR_NUMBER);
%let _OUTPUT1_col12_exp = ;
%let _OUTPUT1_col12_input_count = 0;
%let _OUTPUT1_col13_name = DEBTOR_LIMIT;
%let _OUTPUT1_col13_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col13_length = 8;
%let _OUTPUT1_col13_type = ;
%let _OUTPUT1_col13_format = 25.2;
%let _OUTPUT1_col13_informat = 25.2;
%let _OUTPUT1_col13_label = %nrquote(DEBTOR_LIMIT);
%let _OUTPUT1_col13_exp = ;
%let _OUTPUT1_col13_input_count = 0;
%let _OUTPUT1_col14_name = DEBTOR_LIMIT_START_DATE;
%let _OUTPUT1_col14_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col14_length = 8;
%let _OUTPUT1_col14_type = ;
%let _OUTPUT1_col14_format = DATETIME20.;
%let _OUTPUT1_col14_informat = DATETIME20.;
%let _OUTPUT1_col14_label = %nrquote(DEBTOR_LIMIT_START_DATE);
%let _OUTPUT1_col14_exp = ;
%let _OUTPUT1_col14_input_count = 0;
%let _OUTPUT1_col15_name = DEBTOR_LIMIT_MATURITY_DATE;
%let _OUTPUT1_col15_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col15_length = 8;
%let _OUTPUT1_col15_type = ;
%let _OUTPUT1_col15_format = DATETIME20.;
%let _OUTPUT1_col15_informat = DATETIME20.;
%let _OUTPUT1_col15_label = %nrquote(DEBTOR_LIMIT_MATURITY_DATE);
%let _OUTPUT1_col15_exp = ;
%let _OUTPUT1_col15_input_count = 0;
%let _OUTPUT1_col16_name = INVOICE_NUMBER;
%let _OUTPUT1_col16_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col16_length = 100;
%let _OUTPUT1_col16_type = $;
%let _OUTPUT1_col16_format = $100.;
%let _OUTPUT1_col16_informat = $100.;
%let _OUTPUT1_col16_label = %nrquote(INVOICE_NUMBER);
%let _OUTPUT1_col16_exp = ;
%let _OUTPUT1_col16_input_count = 0;
%let _OUTPUT1_col17_name = INVOICE_UNIQUE_IDENTIFIER;
%let _OUTPUT1_col17_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col17_length = 200;
%let _OUTPUT1_col17_type = $;
%let _OUTPUT1_col17_format = $200.;
%let _OUTPUT1_col17_informat = $200.;
%let _OUTPUT1_col17_label = %nrquote(INVOICE_UNIQUE_IDENTIFIER);
%let _OUTPUT1_col17_exp = ;
%let _OUTPUT1_col17_input_count = 0;
%let _OUTPUT1_col18_name = INVOICE_DATE;
%let _OUTPUT1_col18_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col18_length = 8;
%let _OUTPUT1_col18_type = ;
%let _OUTPUT1_col18_format = DATETIME20.;
%let _OUTPUT1_col18_informat = DATETIME20.;
%let _OUTPUT1_col18_label = %nrquote(INVOICE_DATE);
%let _OUTPUT1_col18_exp = ;
%let _OUTPUT1_col18_input_count = 0;
%let _OUTPUT1_col19_name = INVOICE_TOTAL_SUM;
%let _OUTPUT1_col19_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col19_length = 8;
%let _OUTPUT1_col19_type = ;
%let _OUTPUT1_col19_format = 25.2;
%let _OUTPUT1_col19_informat = 25.2;
%let _OUTPUT1_col19_label = %nrquote(INVOICE_TOTAL_SUM);
%let _OUTPUT1_col19_exp = ;
%let _OUTPUT1_col19_input_count = 0;
%let _OUTPUT1_col20_name = INVOICE_CURRENCY;
%let _OUTPUT1_col20_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col20_length = 3;
%let _OUTPUT1_col20_type = $;
%let _OUTPUT1_col20_format = $3.;
%let _OUTPUT1_col20_informat = $3.;
%let _OUTPUT1_col20_label = %nrquote(INVOICE_CURRENCY);
%let _OUTPUT1_col20_exp = ;
%let _OUTPUT1_col20_input_count = 0;
%let _OUTPUT1_col21_name = INVOICE_UNSETTELED_AMOUNT;
%let _OUTPUT1_col21_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col21_length = 8;
%let _OUTPUT1_col21_type = ;
%let _OUTPUT1_col21_format = 25.2;
%let _OUTPUT1_col21_informat = 25.2;
%let _OUTPUT1_col21_label = %nrquote(INVOICE_UNSETTELED_AMOUNT);
%let _OUTPUT1_col21_exp = ;
%let _OUTPUT1_col21_input_count = 0;
%let _OUTPUT1_col22_name = FINANCING_AMOUNT;
%let _OUTPUT1_col22_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col22_length = 8;
%let _OUTPUT1_col22_type = ;
%let _OUTPUT1_col22_format = 25.2;
%let _OUTPUT1_col22_informat = 25.2;
%let _OUTPUT1_col22_label = %nrquote(FINANCING_AMOUNT);
%let _OUTPUT1_col22_exp = ;
%let _OUTPUT1_col22_input_count = 0;
%let _OUTPUT1_col23_name = FINANCING_DEBT;
%let _OUTPUT1_col23_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col23_length = 8;
%let _OUTPUT1_col23_type = ;
%let _OUTPUT1_col23_format = 25.2;
%let _OUTPUT1_col23_informat = 25.2;
%let _OUTPUT1_col23_label = %nrquote(FINANCING_DEBT);
%let _OUTPUT1_col23_exp = ;
%let _OUTPUT1_col23_input_count = 0;
%let _OUTPUT1_col24_name = FINANCING_SETTLED_SUM;
%let _OUTPUT1_col24_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col24_length = 8;
%let _OUTPUT1_col24_type = ;
%let _OUTPUT1_col24_format = 25.2;
%let _OUTPUT1_col24_informat = 25.2;
%let _OUTPUT1_col24_label = %nrquote(FINANCING_SETTLED_SUM);
%let _OUTPUT1_col24_exp = ;
%let _OUTPUT1_col24_input_count = 0;
%let _OUTPUT1_col25_name = INT_RATE_FOR_SETTLED_FIN;
%let _OUTPUT1_col25_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col25_length = 8;
%let _OUTPUT1_col25_type = ;
%let _OUTPUT1_col25_format = 18.8;
%let _OUTPUT1_col25_informat = 18.8;
%let _OUTPUT1_col25_label = %nrquote(INT_RATE_FOR_SETTLED_FIN);
%let _OUTPUT1_col25_exp = ;
%let _OUTPUT1_col25_input_count = 0;
%let _OUTPUT1_col26_name = INT_RATE_ON_DATE_OF_FIN;
%let _OUTPUT1_col26_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col26_length = 8;
%let _OUTPUT1_col26_type = ;
%let _OUTPUT1_col26_format = 18.8;
%let _OUTPUT1_col26_informat = 18.8;
%let _OUTPUT1_col26_label = %nrquote(INT_RATE_ON_DATE_OF_FIN);
%let _OUTPUT1_col26_exp = ;
%let _OUTPUT1_col26_input_count = 0;
%let _OUTPUT1_col27_name = INVOICE_DUE_DATE;
%let _OUTPUT1_col27_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col27_length = 8;
%let _OUTPUT1_col27_type = ;
%let _OUTPUT1_col27_format = DATETIME20.;
%let _OUTPUT1_col27_informat = DATETIME20.;
%let _OUTPUT1_col27_label = %nrquote(INVOICE_DUE_DATE);
%let _OUTPUT1_col27_exp = ;
%let _OUTPUT1_col27_input_count = 0;
%let _OUTPUT1_col28_name = LETTER_DATE;
%let _OUTPUT1_col28_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col28_length = 8;
%let _OUTPUT1_col28_type = ;
%let _OUTPUT1_col28_format = DATETIME20.;
%let _OUTPUT1_col28_informat = DATETIME20.;
%let _OUTPUT1_col28_label = %nrquote(LETTER_DATE);
%let _OUTPUT1_col28_exp = ;
%let _OUTPUT1_col28_input_count = 0;
%let _OUTPUT1_col29_name = RECOURCE_DATE;
%let _OUTPUT1_col29_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col29_length = 8;
%let _OUTPUT1_col29_type = ;
%let _OUTPUT1_col29_format = DATETIME20.;
%let _OUTPUT1_col29_informat = DATETIME20.;
%let _OUTPUT1_col29_label = %nrquote(RECOURCE_DATE);
%let _OUTPUT1_col29_exp = ;
%let _OUTPUT1_col29_input_count = 0;
%let _OUTPUT1_col30_name = REC_FACT_SERVICE_COM_EXCL_VAT;
%let _OUTPUT1_col30_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col30_length = 8;
%let _OUTPUT1_col30_type = ;
%let _OUTPUT1_col30_format = 25.2;
%let _OUTPUT1_col30_informat = 25.2;
%let _OUTPUT1_col30_label = %nrquote(REC_FACT_SERVICE_COM_EXCL_VAT);
%let _OUTPUT1_col30_exp = ;
%let _OUTPUT1_col30_input_count = 0;
%let _OUTPUT1_col31_name = ACCUM_FACT_SERV_COM_EXCL_VAT;
%let _OUTPUT1_col31_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col31_length = 8;
%let _OUTPUT1_col31_type = ;
%let _OUTPUT1_col31_format = 25.2;
%let _OUTPUT1_col31_informat = 25.2;
%let _OUTPUT1_col31_label = %nrquote(ACCUM_FACT_SERV_COM_EXCL_VAT);
%let _OUTPUT1_col31_exp = ;
%let _OUTPUT1_col31_input_count = 0;
%let _OUTPUT1_col32_name = RECEIVED_FIN_COM_EXCL_VAT;
%let _OUTPUT1_col32_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col32_length = 8;
%let _OUTPUT1_col32_type = ;
%let _OUTPUT1_col32_format = 25.2;
%let _OUTPUT1_col32_informat = 25.2;
%let _OUTPUT1_col32_label = %nrquote(RECEIVED_FIN_COM_EXCL_VAT);
%let _OUTPUT1_col32_exp = ;
%let _OUTPUT1_col32_input_count = 0;
%let _OUTPUT1_col33_name = ACCUM_FIN_COM_EXCL_VAT;
%let _OUTPUT1_col33_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col33_length = 8;
%let _OUTPUT1_col33_type = ;
%let _OUTPUT1_col33_format = 25.2;
%let _OUTPUT1_col33_informat = 25.2;
%let _OUTPUT1_col33_label = %nrquote(ACCUM_FIN_COM_EXCL_VAT);
%let _OUTPUT1_col33_exp = ;
%let _OUTPUT1_col33_input_count = 0;
%let _OUTPUT1_col34_name = RECEIVED_HANDLING_FEE_EXCL_VAT;
%let _OUTPUT1_col34_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col34_length = 8;
%let _OUTPUT1_col34_type = ;
%let _OUTPUT1_col34_format = 25.2;
%let _OUTPUT1_col34_informat = 25.2;
%let _OUTPUT1_col34_label = %nrquote(RECEIVED_HANDLING_FEE_EXCL_VAT);
%let _OUTPUT1_col34_exp = ;
%let _OUTPUT1_col34_input_count = 0;
%let _OUTPUT1_col35_name = ACCUM_HANDLING_FEE_EXCL_VAT;
%let _OUTPUT1_col35_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col35_length = 8;
%let _OUTPUT1_col35_type = ;
%let _OUTPUT1_col35_format = 25.2;
%let _OUTPUT1_col35_informat = 25.2;
%let _OUTPUT1_col35_label = %nrquote(ACCUM_HANDLING_FEE_EXCL_VAT);
%let _OUTPUT1_col35_exp = ;
%let _OUTPUT1_col35_input_count = 0;
%let _OUTPUT1_col36_name = RECEIVED_ORG_COM_EXCL_VAT;
%let _OUTPUT1_col36_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col36_length = 8;
%let _OUTPUT1_col36_type = ;
%let _OUTPUT1_col36_format = 25.2;
%let _OUTPUT1_col36_informat = 25.2;
%let _OUTPUT1_col36_label = %nrquote(RECEIVED_ORG_COM_EXCL_VAT);
%let _OUTPUT1_col36_exp = ;
%let _OUTPUT1_col36_input_count = 0;
%let _OUTPUT1_col37_name = ACCUM_ORG_COM_EXCL_VAT;
%let _OUTPUT1_col37_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col37_length = 8;
%let _OUTPUT1_col37_type = ;
%let _OUTPUT1_col37_format = 25.2;
%let _OUTPUT1_col37_informat = 25.2;
%let _OUTPUT1_col37_label = %nrquote(ACCUM_ORG_COM_EXCL_VAT);
%let _OUTPUT1_col37_exp = ;
%let _OUTPUT1_col37_input_count = 0;
%let _OUTPUT1_col38_name = FIN_AND_COM_CLOSED;
%let _OUTPUT1_col38_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col38_length = 8;
%let _OUTPUT1_col38_type = ;
%let _OUTPUT1_col38_format = DATETIME20.;
%let _OUTPUT1_col38_informat = DATETIME20.;
%let _OUTPUT1_col38_label = %nrquote(FIN_AND_COM_CLOSED);
%let _OUTPUT1_col38_exp = ;
%let _OUTPUT1_col38_input_count = 0;
%let _OUTPUT1_col39_name = INVOICE_CLOSED;
%let _OUTPUT1_col39_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col39_length = 8;
%let _OUTPUT1_col39_type = ;
%let _OUTPUT1_col39_format = DATETIME20.;
%let _OUTPUT1_col39_informat = DATETIME20.;
%let _OUTPUT1_col39_label = %nrquote(INVOICE_CLOSED);
%let _OUTPUT1_col39_exp = ;
%let _OUTPUT1_col39_input_count = 0;
%let _OUTPUT1_col40_name = CURR_INT_RATE_FOR_FIN_DEBT;
%let _OUTPUT1_col40_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col40_length = 8;
%let _OUTPUT1_col40_type = ;
%let _OUTPUT1_col40_format = 18.8;
%let _OUTPUT1_col40_informat = 18.8;
%let _OUTPUT1_col40_label = %nrquote(CURR_INT_RATE_FOR_FIN_DEBT);
%let _OUTPUT1_col40_exp = ;
%let _OUTPUT1_col40_input_count = 0;
%let _OUTPUT1_col41_name = TOTAL_COMMISSIONS_TILL_TODAY;
%let _OUTPUT1_col41_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col41_length = 8;
%let _OUTPUT1_col41_type = ;
%let _OUTPUT1_col41_format = 25.2;
%let _OUTPUT1_col41_informat = 25.2;
%let _OUTPUT1_col41_label = %nrquote(TOTAL_COMMISSIONS_TILL_TODAY);
%let _OUTPUT1_col41_exp = ;
%let _OUTPUT1_col41_input_count = 0;
%let _OUTPUT1_col42_name = FINANCING_START_DATE;
%let _OUTPUT1_col42_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col42_length = 8;
%let _OUTPUT1_col42_type = ;
%let _OUTPUT1_col42_format = DATETIME20.;
%let _OUTPUT1_col42_informat = DATETIME20.;
%let _OUTPUT1_col42_label = %nrquote(FINANCING_START_DATE);
%let _OUTPUT1_col42_exp = ;
%let _OUTPUT1_col42_input_count = 0;
%let _OUTPUT1_col43_name = FINANCING_SETTLE_DATE;
%let _OUTPUT1_col43_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col43_length = 8;
%let _OUTPUT1_col43_type = ;
%let _OUTPUT1_col43_format = DATETIME20.;
%let _OUTPUT1_col43_informat = DATETIME20.;
%let _OUTPUT1_col43_label = %nrquote(FINANCING_SETTLE_DATE);
%let _OUTPUT1_col43_exp = ;
%let _OUTPUT1_col43_input_count = 0;
%let _OUTPUT1_col44_name = REC_MANAGEMENT_COM_EXCL_VAT;
%let _OUTPUT1_col44_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col44_length = 8;
%let _OUTPUT1_col44_type = ;
%let _OUTPUT1_col44_format = 25.2;
%let _OUTPUT1_col44_informat = 25.2;
%let _OUTPUT1_col44_label = %nrquote(REC_MANAGEMENT_COM_EXCL_VAT);
%let _OUTPUT1_col44_exp = ;
%let _OUTPUT1_col44_input_count = 0;
%let _OUTPUT1_col45_name = ACCUM_MANAGEMENT_COM_EXCL_VAT;
%let _OUTPUT1_col45_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col45_length = 8;
%let _OUTPUT1_col45_type = ;
%let _OUTPUT1_col45_format = 25.2;
%let _OUTPUT1_col45_informat = 25.2;
%let _OUTPUT1_col45_label = %nrquote(ACCUM_MANAGEMENT_COM_EXCL_VAT);
%let _OUTPUT1_col45_exp = ;
%let _OUTPUT1_col45_input_count = 0;
%let _OUTPUT1_col46_name = INT_RATE_VALID_FROM;
%let _OUTPUT1_col46_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col46_length = 8;
%let _OUTPUT1_col46_type = ;
%let _OUTPUT1_col46_format = DATETIME20.;
%let _OUTPUT1_col46_informat = DATETIME20.;
%let _OUTPUT1_col46_label = %nrquote(INT_RATE_VALID_FROM);
%let _OUTPUT1_col46_exp = ;
%let _OUTPUT1_col46_input_count = 0;
%let _OUTPUT1_col47_name = ED;
%let _OUTPUT1_col47_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col47_length = 8;
%let _OUTPUT1_col47_type = ;
%let _OUTPUT1_col47_format = DATETIME20.;
%let _OUTPUT1_col47_informat = DATETIME20.;
%let _OUTPUT1_col47_label = %nrquote(ED);
%let _OUTPUT1_col47_exp = ;
%let _OUTPUT1_col47_input_count = 0;
%let _OUTPUT1_col48_name = BRANCH_ID;
%let _OUTPUT1_col48_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col48_length = 3;
%let _OUTPUT1_col48_type = $;
%let _OUTPUT1_col48_format = $3.;
%let _OUTPUT1_col48_informat = $3.;
%let _OUTPUT1_col48_label = %nrquote(BRANCH_ID);
%let _OUTPUT1_col48_exp = ;
%let _OUTPUT1_col48_input_count = 0;
%let _OUTPUT1_col49_name = ZB_47803;
%let _OUTPUT1_col49_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col49_length = 20;
%let _OUTPUT1_col49_type = $;
%let _OUTPUT1_col49_format = $20.;
%let _OUTPUT1_col49_informat = $20.;
%let _OUTPUT1_col49_label = %nrquote(ZB_47803);
%let _OUTPUT1_col49_exp = ;
%let _OUTPUT1_col49_input_count = 0;
%let _OUTPUT1_col50_name = MIDAS1437;
%let _OUTPUT1_col50_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col50_length = 40;
%let _OUTPUT1_col50_type = $;
%let _OUTPUT1_col50_format = $40.;
%let _OUTPUT1_col50_informat = $40.;
%let _OUTPUT1_col50_label = %nrquote(MIDAS1437);
%let _OUTPUT1_col50_exp = ;
%let _OUTPUT1_col50_input_count = 0;
%let _OUTPUT1_col51_name = ZB_47803_PR;
%let _OUTPUT1_col51_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col51_length = 20;
%let _OUTPUT1_col51_type = $;
%let _OUTPUT1_col51_format = $20.;
%let _OUTPUT1_col51_informat = $20.;
%let _OUTPUT1_col51_label = %nrquote(ZB_47803_PR);
%let _OUTPUT1_col51_exp = ;
%let _OUTPUT1_col51_input_count = 0;
%let _OUTPUT1_col52_name = MIDAS1438;
%let _OUTPUT1_col52_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col52_length = 40;
%let _OUTPUT1_col52_type = $;
%let _OUTPUT1_col52_format = $40.;
%let _OUTPUT1_col52_informat = $40.;
%let _OUTPUT1_col52_label = %nrquote(MIDAS1438);
%let _OUTPUT1_col52_exp = ;
%let _OUTPUT1_col52_input_count = 0;
%let _OUTPUT1_col53_name = ZB_47423_01;
%let _OUTPUT1_col53_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col53_length = 20;
%let _OUTPUT1_col53_type = $;
%let _OUTPUT1_col53_format = $20.;
%let _OUTPUT1_col53_informat = $20.;
%let _OUTPUT1_col53_label = %nrquote(ZB_47423_01);
%let _OUTPUT1_col53_exp = ;
%let _OUTPUT1_col53_input_count = 0;
%let _OUTPUT1_col54_name = MIDAS_189301;
%let _OUTPUT1_col54_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col54_length = 40;
%let _OUTPUT1_col54_type = $;
%let _OUTPUT1_col54_format = $40.;
%let _OUTPUT1_col54_informat = $40.;
%let _OUTPUT1_col54_label = %nrquote(MIDAS_189301);
%let _OUTPUT1_col54_exp = ;
%let _OUTPUT1_col54_input_count = 0;
%let _OUTPUT1_col55_name = ZB_47423_02;
%let _OUTPUT1_col55_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col55_length = 20;
%let _OUTPUT1_col55_type = $;
%let _OUTPUT1_col55_format = $20.;
%let _OUTPUT1_col55_informat = $20.;
%let _OUTPUT1_col55_label = %nrquote(ZB_47423_02);
%let _OUTPUT1_col55_exp = ;
%let _OUTPUT1_col55_input_count = 0;
%let _OUTPUT1_col56_name = MIDAS_189302;
%let _OUTPUT1_col56_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col56_length = 40;
%let _OUTPUT1_col56_type = $;
%let _OUTPUT1_col56_format = $40.;
%let _OUTPUT1_col56_informat = $40.;
%let _OUTPUT1_col56_label = %nrquote(MIDAS_189302);
%let _OUTPUT1_col56_exp = ;
%let _OUTPUT1_col56_input_count = 0;
%let _OUTPUT1_col57_name = ZB_47423_03;
%let _OUTPUT1_col57_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col57_length = 20;
%let _OUTPUT1_col57_type = $;
%let _OUTPUT1_col57_format = $20.;
%let _OUTPUT1_col57_informat = $20.;
%let _OUTPUT1_col57_label = %nrquote(ZB_47423_03);
%let _OUTPUT1_col57_exp = ;
%let _OUTPUT1_col57_input_count = 0;
%let _OUTPUT1_col58_name = MIDAS_189303;
%let _OUTPUT1_col58_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col58_length = 40;
%let _OUTPUT1_col58_type = $;
%let _OUTPUT1_col58_format = $40.;
%let _OUTPUT1_col58_informat = $40.;
%let _OUTPUT1_col58_label = %nrquote(MIDAS_189303);
%let _OUTPUT1_col58_exp = ;
%let _OUTPUT1_col58_input_count = 0;
%let _OUTPUT1_col59_name = ZB_47423_04;
%let _OUTPUT1_col59_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col59_length = 20;
%let _OUTPUT1_col59_type = $;
%let _OUTPUT1_col59_format = $20.;
%let _OUTPUT1_col59_informat = $20.;
%let _OUTPUT1_col59_label = %nrquote(ZB_47423_04);
%let _OUTPUT1_col59_exp = ;
%let _OUTPUT1_col59_input_count = 0;
%let _OUTPUT1_col60_name = MIDAS_189304;
%let _OUTPUT1_col60_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col60_length = 40;
%let _OUTPUT1_col60_type = $;
%let _OUTPUT1_col60_format = $40.;
%let _OUTPUT1_col60_informat = $40.;
%let _OUTPUT1_col60_label = %nrquote(MIDAS_189304);
%let _OUTPUT1_col60_exp = ;
%let _OUTPUT1_col60_input_count = 0;
%let _OUTPUT1_col61_name = NOT_ADVANCED_PAYMENT;
%let _OUTPUT1_col61_table = dm_fctr.V_IFCCHS_FACTORING_MIS_A;
%let _OUTPUT1_col61_length = 8;
%let _OUTPUT1_col61_type = ;
%let _OUTPUT1_col61_format = 25.2;
%let _OUTPUT1_col61_informat = 25.2;
%let _OUTPUT1_col61_label = %nrquote(NOT_ADVANCED_PAYMENT);
%let _OUTPUT1_col61_exp = ;
%let _OUTPUT1_col61_input_count = 0;

/*---- Start of User Written Code  ----*/ 

/*****************************************************************
* ВЕРСИЯ:
*   $Id: 101_002_Mart_V_FCCHS_FACTORING_MIS_A.sas 4557 2012-12-21 11:04:01Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Создает витрину отчета V_FCCHS_FACTORING_MIS_A.
*
******************************************************************
* Использует:
*     нет
*
* Устанавливает макропеременные:
*     нет
*
******************************************************************
* 19-03-2012   Нестерёнок  Начальное кодирование
* 24-05-2012   Колташев    Маппинг с новыми требованиями
* 30-07-2012   Колташев    Добавил параметр &_OUTPUT вместо названия таблицы. Добавил комментарии в код.
* 03-08-2012   Нестерёнок  Отбор интервалов через две даты (начала и конца даты отчета)
* 06-08-2012   Нестерёнок  Замена отдельных функций для облегчения pass-through
* 06-08-2012   Колташев    У transaction_dttm обрезал время.
* 06-08-2012   Колташев    Увеличен размер поля invoice_unique_identifier c 50 до 200, убрал обрезание до 50 символов.
* 08-08-2012   Колташев    Исправлена ошибка, связанная с ненужной группировкой по transaction_dttm в tmp_misa_lt_type3
* 08-08-2012   Колташев    Исправлена ошибка, связанная группировкой по функции intnx в tmp_misa_lt
* 09-08-2012   Колташев    Исправлена ошибка в поиске предыдущей запси для расчета FINANCING_SETTLED_SUM (см. последний запрос) :
                           записи нужно джойнить по поставке, а не по договору (invoice_number vs factoring_agreement_number)
* 13-08-2012   Нестерёнок  Параметризация через DMFCTR_MIS_A_START_DT, DMFCTR_MIS_A_END_DT
* 21-08-2012   Нестерёнок  Оптимизация
* 26-10-2012   Кузенков    Fix: SubStrN для CLIENT_NUNBER, DEBTOR_NUMBER
******************************************************************/

%macro mart_factoring_mis_a_init;
   proc sql noprint stimer;
      /* определение счетов ЦБ и midas для договоров */
      create table tmp_misa_irb_account_fcn as select
         i1.irb_account_number,
         i1.irb_account_rk,
         i1.irb_account_id,
         rt.account_role_type_nm,
         f3.account_rk,
         ix.counterparty_rk,
         substr(i2.irb_account_id, 5) as midas
      from
         dwh_dds.irb_account_x_fin_acc f3,
         dwh_dds.irb_account i1,
         dwh_dds.irb_account_role_type rt,
         dwh_dds.irb_account i2,
         dwh_dds.irb_account_relationship r1,
         dwh_dds.irb_cpty_x_account ix
      where
         i1.irb_account_rk = f3.irb_account_rk
         and f3.irb_account_role_type_cd = rt.irb_account_role_type_cd and
         rt.account_role_type_nm in (
            'ADVANCE_ACCNT', 'DEBT_ACCNT', 'INTST_ACCRUE_ACCNT',
            'ACCRUED_SERVICE_ACCNT', 'ACCRUED_DELIVERY_ACCNT', 'ACCRUED_MANAGE_ACCNT'
         )
         and r1.irb_account_rk = i1.irb_account_rk
         and r1.irb_acc_relation_type_cd = 'F-M'
         and i2.irb_account_rk = r1.related_irb_account_rk
         and ix.irb_account_rk = i1.irb_account_rk
         and f3.valid_to_dttm = &ETL_SCD_FUTURE_DTTM
         and i1.valid_to_dttm = &ETL_SCD_FUTURE_DTTM
         and rt.valid_to_dttm = &ETL_SCD_FUTURE_DTTM
         and i2.valid_to_dttm = &ETL_SCD_FUTURE_DTTM
         and r1.valid_to_dttm = &ETL_SCD_FUTURE_DTTM
         and ix.valid_to_dttm = &ETL_SCD_FUTURE_DTTM
      ;
      %error_check (mpStepType=SQL);

      /* определение счетов ЦБ и midas для поставок */
      create table tmp_misa_irb_account_fin as select
         coalesce(ia2.irb_account_number, ia.irb_account_number) as irb_account_number,
         ia.irb_account_rk,
         rt.account_role_type_nm,
         ia2.irb_account_id,
         x.account_rk,
         substr(ia2.irb_account_id, 5) as midas
      from
         dwh_dds.irb_account ia
      left join
         dwh_dds.irb_account_relationship iar
      on ia.irb_account_rk = iar.irb_account_rk and iar.valid_to_dttm = &ETL_SCD_FUTURE_DTTM
      left join
         dwh_dds.irb_account ia2
      on iar.related_irb_account_rk = ia2.irb_account_rk and ia2.valid_to_dttm = &ETL_SCD_FUTURE_DTTM,
         dwh_dds.irb_account_x_fin_acc x,
         dwh_dds.irb_account_role_type rt
      where
         ia.irb_account_rk = x.irb_account_rk
         and x.irb_account_role_type_cd = rt.irb_account_role_type_cd
         and rt.account_role_type_nm in (
            'ADVANCE_ACCNT', 'DEBT_ACCNT', 'INTST_ACCRUE_ACCNT',
            'ACCRUED_SERVICE_ACCNT', 'ACCRUED_DELIVERY_ACCNT', 'ACCRUED_MANAGE_ACCNT'
         )
         and iar.irb_acc_relation_type_cd = 'F-M'
         and ia.valid_to_dttm = &ETL_SCD_FUTURE_DTTM
         and x.valid_to_dttm = &ETL_SCD_FUTURE_DTTM
         and rt.valid_to_dttm = &ETL_SCD_FUTURE_DTTM
         and ia.irb_account_rk = (
            select max(ia3.irb_account_rk)
            from
               dwh_dds.irb_account ia3
            left join
               dwh_dds.irb_account_relationship iar3
            on ia3.irb_account_rk = iar3.irb_account_rk and iar3.valid_to_dttm = &ETL_SCD_FUTURE_DTTM,
               dwh_dds.irb_account_x_fin_acc x3
            where
               ia3.valid_to_dttm = &ETL_SCD_FUTURE_DTTM
               and x3.valid_to_dttm = &ETL_SCD_FUTURE_DTTM
               and x3.account_rk = x.account_rk
               and ia3.irb_account_rk = x3.irb_account_rk
               and iar3.irb_acc_relation_type_cd = 'F-M'
               and x3.irb_account_role_type_cd = x.irb_account_role_type_cd
         )
      ;
      %error_check (mpStepType=SQL);

      /* таблица с NULL-значениями для неопределяемых полей */
      create table DUMMY (
         num_null  NUM(1),
         char_null CHAR(1),
         date_null DATE)
      ;

      /* таблица с агрегатами по транзакциям */
      create table tmp_misa_txn_base as select
         account_rk,
         transaction_type_cd,
         intnx('DTDAY', transaction_dttm, 0, 'BEGINNING') as transaction_dttm,
         sum(transaction_amt) as transaction_amt
      from
         dwh_dds.loan_transaction
      where
         /* дата транзакции меньше либо равна дате конца витрины (фактически меньше следующей даты) и транзакция является текущей версией */
         transaction_dttm < %sysfunc (dhms(%eval(&DMFCTR_MIS_A_END_DT+1), 0, 0, 0))
         and valid_to_dttm = &ETL_SCD_FUTURE_DTTM
         and transaction_type_cd in /* первоначальный отбор по типу операции, сумма операции <> 0 */
         ('001', '011', '002', '022', '003', '033', '004', '044', '005', '055', '006', '066')
      group by account_rk, transaction_type_cd, transaction_dttm
      having calculated transaction_amt ne 0
      ;
      %error_check (mpStepType=SQL);
   quit;
%mend mart_factoring_mis_a_init;


%macro mart_factoring_mis_a_day (mpReportStartDttm=, mpReportEndDttm=, mpCurrentDttm=, mpOut=w_101_010_report);
   proc sql noprint stimer;

      /* Создание "временных" таблиц */
      /* дата транзакции меньше либо равна текущей дате (фактически меньше следующей даты) */

      /* Поставка (с уплатой долга по финансированию и без)+Платежи от Дебиторов без поставки */
      create table tmp_misa_lt_type1 as
      select tm.account_rk, sum(tm.transaction_amt) as transaction_amt
      from tmp_misa_txn_base tm
      where tm.transaction_dttm < &mpReportEndDttm and tm.transaction_type_cd in ('001', '011', '002', '022', '003', '033', '006', '066')
      group by tm.account_rk;

      /* Платежи, привязанные только к договору */
      create table tmp_misa_lt_type2 as
      select tm.account_rk, sum(tm.transaction_amt) as transaction_amt, max(tm.TRANSACTION_DTTM) as TRANSACTION_DTTM
      from tmp_misa_txn_base tm
      where tm.transaction_dttm < &mpReportEndDttm and tm.transaction_type_cd in ('004', '044', '005', '055')
      group by tm.account_rk;

      /* определение RECEIVED_ORG_COM_EXCL_VAT, ACCUM_ORG_COM_EXCL_VAT */
      create table tmp_misa_lt_type3 as
      select tm.account_rk, sum(tm.transaction_amt) as transaction_amt
      from tmp_misa_txn_base tm
      where tm.transaction_dttm < &mpReportEndDttm and tm.transaction_type_cd = '044'
      group by tm.account_rk;

      /* Определение комиссий- поля №31-36 */
      create table tmp_misa_lt_type4 as
      select tm.account_rk, sum(tm.transaction_amt) as transaction_amt, tm.transaction_type_cd
      from tmp_misa_txn_base tm
      where tm.transaction_dttm < &mpReportEndDttm and tm.transaction_type_cd in ('022', '002', '011', '001', '033', '003')
      group by tm.account_rk, tm.transaction_type_cd;

      /* FIN_AND_COM_CLOSED- Max(LOAN_TRANSACTION.TRANSACTION_DTTM),где TRANSACTION_TYPE_CD in 011,022,033,044,055,066 */
      create table tmp_misa_lt_type5 as
      select tm.account_rk, sum(tm.transaction_amt) as transaction_amt, max(tm.transaction_dttm) as transaction_dttm
      from tmp_misa_txn_base tm
      where tm.transaction_dttm < &mpReportEndDttm and tm.transaction_type_cd in ('011', '022', '033', '044', '055', '066')
      group by tm.account_rk;

      /* определение FINANCING_SETTLE_DATE - TRANSACTION_DTTM, где TRANSACTION_TYPE_CD = '066'
       с группировкой по дате транзакции (type6) для поставок и без нее (type61) для договоров
      */
      create table tmp_misa_lt_type6 as
      select tm.account_rk, sum(tm.transaction_amt) as transaction_amt, tm.transaction_dttm
      from tmp_misa_txn_base tm
      where tm.transaction_dttm < &mpReportEndDttm and tm.transaction_type_cd in ('066')
      group by tm.account_rk, tm.transaction_dttm;

      create table tmp_misa_lt_type61 as
      select tm.account_rk, sum(tm.transaction_amt) as transaction_amt, max(tm.transaction_dttm) as transaction_dttm
      from tmp_misa_txn_base tm
      where tm.transaction_dttm < &mpReportEndDttm and tm.transaction_type_cd in ('066')
      group by tm.account_rk;

      /* определение REC_MANAGEMENT_COM_EXCL_VAT - SUM(TRANSACTION_AMT), где TRANSACTION_TYPE_CD = '055' */
      create table tmp_misa_lt_type7 as
      select tm.account_rk, sum(tm.transaction_amt) as transaction_amt, max(tm.transaction_dttm) as transaction_dttm
      from tmp_misa_txn_base tm
      where tm.transaction_dttm < &mpReportEndDttm and tm.transaction_type_cd in ('055')
      group by tm.account_rk;

      /* определение ACCUM_MANAGEMENT_COM_EXCL_VAT - SUM(TRANSACTION_AMT), где TRANSACTION_TYPE_CD = '005' */
      create table tmp_misa_lt_type8 as
      select tm.account_rk, sum(tm.transaction_amt) as transaction_amt, max(tm.transaction_dttm) as transaction_dttm
      from tmp_misa_txn_base tm
      where tm.transaction_dttm < &mpReportEndDttm and tm.transaction_type_cd in ('005')
      group by tm.account_rk;

      /* определение ACCUM_ORG_COM_EXCL_VAT - SUM(TRANSACTION_AMT), где TRANSACTION_TYPE_CD = '004' */
      create table tmp_misa_lt_type9 as
      select tm.account_rk, sum(tm.transaction_amt) as transaction_amt, max(tm.transaction_dttm) as transaction_dttm
      from tmp_misa_txn_base tm
      where tm.transaction_dttm < &mpReportEndDttm and tm.transaction_type_cd in ('004')
      group by tm.account_rk;

/************************************************************************************************/
      create table work_fct.tmp_misa_out as
      select /* == union 1 == Поставки, по которым есть транзакции */
        fa1.ACCOUNT_REGISTRATION_NM as FACTORING_AGREEMENT_NUMBER,
        fa1.open_dt as AGREEMENT_START_DATE,
        cp.irb_src_id as CLIENT_NUNBER,
        eo.organization_legal_nm as CLIENT_NAME length=50,
        eo1.organization_legal_nm as DEBTOR_NAME length=50,
        cp1.irb_src_id as DEBTOR_NUMBER length=8,
        la.irb_recourse_flg as RECOURCE,
        cf.limit_amt as SUPPLIER_LIMIT,
        cf.currency_cd as SUPPLIER_LIMIT_CURRENCY,
        fa1.open_dt as SUPPLIER_LIMIT_START_DATE,
        cf.expiration_dt as SUPPLIER_LIMIT_MATURITY_DATE,
        coalesce(cfd.limit_amt, 0) as DEBTOR_LIMIT,
        fa1.open_dt as DEBTOR_LIMIT_START_DATE,
        case when cfd.expiration_dt is null then cfd1.expiration_dt else cfd.expiration_dt end as DEBTOR_LIMIT_MATURITY_DATE,
        coalesce(la.irb_actual_advance_rt, 0) as FINANCING_PERCENTAGE,
        fa.account_registration_nm as INVOICE_NUMBER,
        catt(fa1.ACCOUNT_REGISTRATION_NM,';',cp1.irb_src_id,';',fa.account_registration_nm,';',
          put(datepart(fa.open_dt),ddmmyyp10.)) as INVOICE_UNIQUE_IDENTIFIER,
        fa.open_dt as INVOICE_DATE,
        coalesce(la.applied_amt, 0) as INVOICE_TOTAL_SUM,
        fa.currency_cd as INVOICE_CURRENCY,
        fch.principal_balance_amt as INVOICE_UNSETTELED_AMOUNT,
        la.actual_advance_amt as FINANCING_AMOUNT,
        case when lch.irb_financing_amt is null then lch1.irb_financing_amt else lch.irb_financing_amt end as FINANCING_DEBT,
        la.actual_advance_amt-case when lch.irb_financing_amt is null then lch1.irb_financing_amt else lch.irb_financing_amt end
          as FINANCING_SETTLED_SUM,
        la3.apr_rt as INT_RATE_FOR_SETTLED_FIN,
        la2.apr_rt as INT_RATE_ON_DATE_OF_FIN,
        la.maturity_dt as INVOICE_DUE_DATE,
        la.irb_recourse_letter_dt as LETTER_DATE,
        la.irb_recourse_dt as RECOURCE_DATE,
        t41.transaction_amt as REC_FACT_SERVICE_COM_EXCL_VAT,
        t42.transaction_amt as ACCUM_FACT_SERV_COM_EXCL_VAT,
        t43.transaction_amt as RECEIVED_FIN_COM_EXCL_VAT,
        t44.transaction_amt as ACCUM_FIN_COM_EXCL_VAT,
        t45.transaction_amt as RECEIVED_HANDLING_FEE_EXCL_VAT,
        t46.transaction_amt as ACCUM_HANDLING_FEE_EXCL_VAT,
        du.num_null as RECEIVED_ORG_COM_EXCL_VAT,
        du.num_null as ACCUM_ORG_COM_EXCL_VAT,
        t5.transaction_dttm as FIN_AND_COM_CLOSED,
        /* не забываем, что mpReportEndDttm - выколотая точка и не входит в интервал */
        case when &mpReportStartDttm <= fa.close_dt and fa.close_dt < &mpReportEndDttm then fa.close_dt else du.date_null end as INVOICE_CLOSED,
        la1.apr_rt as CURR_INT_RATE_FOR_FIN_DEBT,
        case when (fa.close_dt is null) or (fa.close_dt >= &mpReportEndDttm)
         then coalesce(t42.transaction_amt, 0)+
        coalesce(t44.transaction_amt, 0)+coalesce(t46.transaction_amt, 0)
        else coalesce(t41.transaction_amt, 0)+coalesce(t43.transaction_amt, 0)+
        coalesce(t45.transaction_amt, 0) end as TOTAL_COMMISSIONS_TILL_TODAY,
        la.loan_approval_dt as FINANCING_START_DATE,
        t6.transaction_dttm as FINANCING_SETTLE_DATE,
        du.num_null as REC_MANAGEMENT_COM_EXCL_VAT,
        du.num_null as ACCUM_MANAGEMENT_COM_EXCL_VAT,
        la3.valid_from_dttm as INT_RATE_VALID_FROM,
        substrn(fu.financial_unit_id,length(fu.financial_unit_id)-2,3) as BRANCH_ID length=3,
        case when la1.irb_recourse_flg = 'Y' then ia1_1.irb_account_number
             else ia1.irb_account_number
        end as ZB_47803,
        case when la1.irb_recourse_flg = 'Y' then ia1_1.midas
             else ia1.midas
        end as MIDAS1437 length=18,
        case when la1.irb_recourse_flg = 'Y' then ia2_1.irb_account_number
             else ia2.irb_account_number
        end as ZB_47803_PR,
        case when la1.irb_recourse_flg = 'Y' then ia2_1.midas
             else ia2.midas
        end as MIDAS1438 length=18,
        ia3_1.irb_account_number as ZB_47423_01,
        ia3_1.midas as MIDAS_189301 length=18,
        ia4_1.irb_account_number as ZB_47423_02,
        ia4_1.midas as MIDAS_189302 length=18,
        ia5_1.irb_account_number as ZB_47423_03,
        ia5_1.midas as MIDAS_189303 length=18,
        ia6_1.irb_account_number as ZB_47423_04,
        ia6_1.midas as MIDAS_189304 length=18,
        coalesce(fch.principal_balance_amt, 0)-
          coalesce(lch.irb_financing_amt, lch1.irb_financing_amt, 0)
          as Not_advanced_payment,
        &mpCurrentDttm as CURRENT_DATE,
        &mpReportStartDttm as ED
      from
        tmp_misa_lt_type1 t1, dwh_dds.financial_account fa
        /* Связь факторинговых договоров с поставками */
        left join dwh_dds.financial_account_assoc faa on faa.reference_financial_account_rk = fa.account_rk
          and faa.financial_acct_assoc_type_cd = 'FCT'
          and faa.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= faa.valid_to_dttm
        left join dwh_dds.financial_account fa1 on fa1.account_rk = faa.account_rk
          and fa1.financial_account_type_cd = 'FCN'
          and fa1.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= fa1.valid_to_dttm
          and (fa1.close_dt is null or (&mpReportStartDttm <= fa.close_dt and fa.close_dt < &mpReportEndDttm))
        left join dummy du on 1=1
        /* связь поставки с клиентом - первичным владельцем */
        left join dwh_dds.customer_x_financial_account cx on cx.account_rk = fa.account_rk
          and cx.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= cx.valid_to_dttm
          and cx.relationship_to_account_cd = 'PO'
        left join dwh_dds.counterparty cp on cp.counterparty_rk = cx.customer_rk
          and &ETL_SCD_FUTURE_DTTM = cp.valid_to_dttm
        left join dwh_dds.external_org eo on eo.external_org_rk = cp.counterparty_rk
          and &ETL_SCD_FUTURE_DTTM = eo.valid_to_dttm
        /* связь поставки с клиентом - дебитором */
        left join dwh_dds.customer_x_financial_account cx1 on cx1.account_rk = fa.account_rk
          and cx1.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= cx1.valid_to_dttm
          and cx1.relationship_to_account_cd = 'DT'
        left join dwh_dds.counterparty cp1 on cp1.counterparty_rk = cx1.customer_rk
          and &ETL_SCD_FUTURE_DTTM = cp1.valid_to_dttm
        left join dwh_dds.external_org eo1 on eo1.external_org_rk = cp1.counterparty_rk
          and &ETL_SCD_FUTURE_DTTM = eo1.valid_to_dttm
        left join dwh_dds.loan_account la on la.account_rk = fa.account_rk
          and la.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= la.valid_to_dttm
        left join (  /* связь договора с лимитом, PRIMARY - основной лимит, действующий на генеральный договор */
          select cfx.account_rk, c.limit_amt, c.currency_cd, c.effective_from_dt, c.expiration_dt
          from dwh_dds.credit_facility c, dwh_dds.irb_crfacility_x_facc cfx
          where c.credit_facility_type_cd = 'PRM'
          and c.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= c.valid_to_dttm
          and cfx.credit_facility_rk = c.credit_facility_rk
          and cfx.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= cfx.valid_to_dttm
        ) cf on cf.account_rk = fa1.account_rk
        left join (  /* связь договора с лимитом, лимит на дебитора в рамках данного договора */
          select c.counterparty_rk, cfx.account_rk, c.limit_amt, c.currency_cd, c.effective_from_dt, c.expiration_dt
             from dwh_dds.credit_facility c, dwh_dds.irb_crfacility_x_facc cfx
             where c.credit_facility_type_cd = 'DEB'
             and c.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= c.valid_to_dttm
             and cfx.credit_facility_rk = c.credit_facility_rk
             and cfx.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= cfx.valid_to_dttm
        ) cfd on cfd.account_rk = fa1.account_rk  and cx1.customer_rk = cfd.counterparty_rk
        left join (  /* определение DEBTOR_LIMIT_MATURITY_DATE */
          select cp.counterparty_rk, cp.account_rk, cp.credit_facility_rk, cp.expiration_dt, cp.valid_from_dttm, cm.max_valid_from
          from (
          select c.counterparty_rk, cfx.account_rk, c.credit_facility_rk, c.expiration_dt, c.valid_from_dttm
          from dwh_dds.credit_facility c, dwh_dds.irb_crfacility_x_facc cfx
          where c.credit_facility_type_cd = 'DEB'
          and c.valid_from_dttm < &mpReportEndDttm
          and cfx.credit_facility_rk = c.credit_facility_rk
          and cfx.valid_from_dttm = c.valid_from_dttm
          ) cp  inner join (
          select cfx.account_rk, c.credit_facility_rk, max(c.valid_from_dttm) as max_valid_from
          from dwh_dds.credit_facility c, dwh_dds.irb_crfacility_x_facc cfx
          where c.credit_facility_type_cd = 'DEB'
          and c.valid_from_dttm < &mpReportEndDttm
          and cfx.credit_facility_rk = c.credit_facility_rk
          and cfx.valid_from_dttm = c.valid_from_dttm
          group by cfx.account_rk, c.credit_facility_rk
         ) cm on cp.account_rk = cm.account_rk and cp.credit_facility_rk = cm.credit_facility_rk
          where cp.valid_from_dttm = cm.max_valid_from
        ) cfd1 on cfd1.account_rk = fa1.account_rk and cfd1.counterparty_rk = cx1.customer_rk
        left join dwh_dds.loan_account la1 on la1.account_rk = fa1.account_rk
          and la1.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= la1.valid_to_dttm
        left join dwh_dds.FINANCIAL_ACCOUNT_CHNG fch on fch.account_rk = fa.account_rk
          and fch.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= fch.valid_to_dttm
        left join dwh_dds.loan_account la2 on la2.account_rk = fa1.account_rk
          and la.loan_approval_dt >= la2.valid_from_dttm and la.loan_approval_dt < la2.valid_to_dttm
        left join tmp_misa_lt_type5 t5 on t5.account_rk = fa.account_rk
        left join tmp_misa_lt_type6 t6 on t6.account_rk = fa.account_rk
        /* Определение комиссий- поля №31-36 */
        left join tmp_misa_lt_type4 t41 on t41.account_rk = fa.account_rk and t41.transaction_type_cd = '022'
        left join tmp_misa_lt_type4 t42 on t42.account_rk = fa.account_rk and t42.transaction_type_cd = '002'
        left join tmp_misa_lt_type4 t43 on t43.account_rk = fa.account_rk and t43.transaction_type_cd = '011'
        left join tmp_misa_lt_type4 t44 on t44.account_rk = fa.account_rk and t44.transaction_type_cd = '001'
        left join tmp_misa_lt_type4 t45 on t45.account_rk = fa.account_rk and t45.transaction_type_cd = '033'
        left join tmp_misa_lt_type4 t46 on t46.account_rk = fa.account_rk and t46.transaction_type_cd = '003'
        left join dwh_dds.LOAN_ACCOUNT_CHNG lch on lch.account_rk = fa.account_rk and t6.transaction_dttm >= lch.valid_from_dttm and t6.transaction_dttm < lch.valid_to_dttm
        left join dwh_dds.LOAN_ACCOUNT_CHNG lch1 on lch1.account_rk = fa.account_rk and lch1.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= lch1.valid_to_dttm
        left join dwh_dds.loan_account la3 on la3.account_rk = fa1.account_rk and t6.transaction_dttm >= la3.valid_from_dttm and t6.transaction_dttm < la3.valid_to_dttm
        /* связь поставок/договоров(_1) со счетами ЦБ/Midas  */
        left join tmp_misa_irb_account_fin ia1 on ia1.account_rk = fa.account_rk and ia1.account_role_type_nm = 'ADVANCE_ACCNT'
        left join tmp_misa_irb_account_fin ia1_1 on ia1_1.account_rk = fa1.account_rk and ia1_1.account_role_type_nm = 'ADVANCE_ACCNT'
        left join tmp_misa_irb_account_fin ia2 on ia2.account_rk = fa.account_rk and ia2.account_role_type_nm = 'DEBT_ACCNT'
        left join tmp_misa_irb_account_fin ia2_1 on ia2_1.account_rk = fa1.account_rk and ia2_1.account_role_type_nm = 'DEBT_ACCNT'
        left join tmp_misa_irb_account_fin ia3 on ia3.account_rk = fa.account_rk and ia3.account_role_type_nm = 'INTST_ACCRUE_ACCNT'
        left join tmp_misa_irb_account_fin ia3_1 on ia3_1.account_rk = fa1.account_rk and ia3_1.account_role_type_nm = 'INTST_ACCRUE_ACCNT'
        left join tmp_misa_irb_account_fin ia4 on ia4.account_rk = fa.account_rk and ia4.account_role_type_nm = 'ACCRUED_SERVICE_ACCNT'
        left join tmp_misa_irb_account_fin ia4_1 on ia4_1.account_rk = fa1.account_rk and ia4_1.account_role_type_nm = 'ACCRUED_SERVICE_ACCNT'
        left join tmp_misa_irb_account_fin ia5 on ia5.account_rk = fa.account_rk and ia5.account_role_type_nm = 'ACCRUED_DELIVERY_ACCNT'
        left join tmp_misa_irb_account_fin ia5_1 on ia5_1.account_rk = fa1.account_rk and ia5_1.account_role_type_nm = 'ACCRUED_DELIVERY_ACCNT'
        left join tmp_misa_irb_account_fin ia6 on ia6.account_rk = fa.account_rk and ia6.account_role_type_nm = 'ACCRUED_MANAGE_ACCNT'
        left join tmp_misa_irb_account_fin ia6_1 on ia6_1.account_rk = fa1.account_rk and ia6_1.account_role_type_nm = 'ACCRUED_MANAGE_ACCNT'
        left join dwh_dds.FINANCIAL_UNIT fu on fu.financial_unit_rk = fa.prim_branch_financial_unit_rk
          and fu.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= fu.valid_to_dttm
      where                               /* поставка не закрыта на отчетную дату */
        fa.account_rk = t1.account_rk and (fa.close_dt is null or fa.close_dt >= &mpReportStartDttm)
        and fa.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= fa.valid_to_dttm
        and fa.financial_account_type_cd = 'FIN' /* поставка */
      union all /* == union 2 == Поставки, по которым нет транзакций */
      select
        fa1.ACCOUNT_REGISTRATION_NM as FACTORING_AGREEMENT_NUMBER,
        fa1.open_dt as AGREEMENT_START_DATE,
        cp.irb_src_id as CLIENT_NUNBER,
        eo.organization_legal_nm as CLIENT_NAME length=50,
        eo1.organization_legal_nm as DEBTOR_NAME length=50,
        cp1.irb_src_id as DEBTOR_NUMBER length=8,
        la.irb_recourse_flg as RECOURCE,
        cf.limit_amt as SUPPLIER_LIMIT,
        cf.currency_cd as SUPPLIER_LIMIT_CURRENCY,
        fa1.open_dt as SUPPLIER_LIMIT_START_DATE,
        cf.expiration_dt as SUPPLIER_LIMIT_MATURITY_DATE,
        coalesce(cfd.limit_amt, 0) as DEBTOR_LIMIT,
        fa1.open_dt as DEBTOR_LIMIT_START_DATE,
        case when cfd.expiration_dt is null then cfd1.expiration_dt else cfd.expiration_dt end as DEBTOR_LIMIT_MATURITY_DATE,
        coalesce(la.irb_actual_advance_rt, 0) as FINANCING_PERCENTAGE,
        fa.account_registration_nm as INVOICE_NUMBER,
        catt(fa1.ACCOUNT_REGISTRATION_NM,';',cp1.irb_src_id,';',fa.account_registration_nm,';',
          put(datepart(fa.open_dt),ddmmyyp10.)) as INVOICE_UNIQUE_IDENTIFIER,
        fa.open_dt as INVOICE_DATE,
        coalesce(la.applied_amt, 0) as INVOICE_TOTAL_SUM,
        fa.currency_cd as INVOICE_CURRENCY,
        fch.principal_balance_amt as INVOICE_UNSETTELED_AMOUNT,
        la.actual_advance_amt as FINANCING_AMOUNT,
        case when lch.irb_financing_amt is null then lch1.irb_financing_amt else lch.irb_financing_amt end as FINANCING_DEBT,
        la.actual_advance_amt-case when lch.irb_financing_amt is null then lch1.irb_financing_amt else lch.irb_financing_amt end
          as FINANCING_SETTLED_SUM,
        la3.apr_rt as INT_RATE_FOR_SETTLED_FIN,
        la2.apr_rt as INT_RATE_ON_DATE_OF_FIN,
        la.maturity_dt as INVOICE_DUE_DATE,
        la.irb_recourse_letter_dt as LETTER_DATE,
        la.irb_recourse_dt as RECOURCE_DATE,
        t41.transaction_amt as REC_FACT_SERVICE_COM_EXCL_VAT,
        t42.transaction_amt as ACCUM_FACT_SERV_COM_EXCL_VAT,
        t43.transaction_amt as RECEIVED_FIN_COM_EXCL_VAT,
        t44.transaction_amt as ACCUM_FIN_COM_EXCL_VAT,
        t45.transaction_amt as RECEIVED_HANDLING_FEE_EXCL_VAT,
        t46.transaction_amt as ACCUM_HANDLING_FEE_EXCL_VAT,
        du.num_null as RECEIVED_ORG_COM_EXCL_VAT,
        du.num_null as ACCUM_ORG_COM_EXCL_VAT,
        t5.transaction_dttm as FIN_AND_COM_CLOSED,
        case when &mpReportStartDttm <= fa.close_dt and fa.close_dt < &mpReportEndDttm then fa.close_dt else du.date_null end as INVOICE_CLOSED,
        la1.apr_rt as CURR_INT_RATE_FOR_FIN_DEBT,
        case when (fa.close_dt is null) or (fa.close_dt >= &mpReportEndDttm)
        then coalesce(t42.transaction_amt, 0)+
        coalesce(t44.transaction_amt, 0)+coalesce(t46.transaction_amt, 0)
        else coalesce(t41.transaction_amt, 0)+coalesce(t43.transaction_amt, 0)+
        coalesce(t45.transaction_amt, 0) end as TOTAL_COMMISSIONS_TILL_TODAY,
        la.loan_approval_dt as FINANCING_START_DATE,
        t6.transaction_dttm as FINANCING_SETTLE_DATE,
        du.num_null as REC_MANAGEMENT_COM_EXCL_VAT,
        du.num_null as ACCUM_MANAGEMENT_COM_EXCL_VAT,
        la3.valid_from_dttm as INT_RATE_VALID_FROM,
        substrn(fu.financial_unit_id,length(fu.financial_unit_id)-2,3) as BRANCH_ID length=3,
        case when la1.irb_recourse_flg = 'Y' then ia1_1.irb_account_number
             else ia1.irb_account_number
        end as ZB_47803,
        case when la1.irb_recourse_flg = 'Y' then ia1_1.midas
             else ia1.midas
        end as MIDAS1437 length=18,
        case when la1.irb_recourse_flg = 'Y' then ia2_1.irb_account_number
             else ia2.irb_account_number
        end as ZB_47803_PR,
        case when la1.irb_recourse_flg = 'Y' then ia2_1.midas
             else ia2.midas
        end as MIDAS1438 length=18,
        ia3_1.irb_account_number as ZB_47423_01,
        ia3_1.midas as MIDAS_189301 length=18,
        ia4_1.irb_account_number as ZB_47423_02,
        ia4_1.midas as MIDAS_189302 length=18,
        ia5_1.irb_account_number as ZB_47423_03,
        ia5_1.midas as MIDAS_189303 length=18,
        ia6_1.irb_account_number as ZB_47423_04,
        ia6_1.midas as MIDAS_189304 length=18,
        coalesce(fch.principal_balance_amt, 0)-
          coalesce(lch.irb_financing_amt, lch1.irb_financing_amt, 0)
          as Not_advanced_payment,
        &mpCurrentDttm as CURRENT_DATE,
        &mpReportStartDttm as ED
      from
        dwh_dds.financial_account fa
        /* Связь факторинговых договоров с поставками */
        left join dwh_dds.financial_account_assoc faa on faa.reference_financial_account_rk = fa.account_rk
          and faa.financial_acct_assoc_type_cd = 'FCT'
          and faa.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= faa.valid_to_dttm
        left join dwh_dds.financial_account fa1 on fa1.account_rk = faa.account_rk
          and fa1.financial_account_type_cd = 'FCN'
          and fa1.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= fa1.valid_to_dttm
          and (fa1.close_dt is null or (&mpReportStartDttm <= fa.close_dt and fa.close_dt < &mpReportEndDttm))
        left join dummy du on 1=1
        /* связь поставки с клиентом - первичным владельцем */
        left join dwh_dds.customer_x_financial_account cx on cx.account_rk = fa.account_rk
          and cx.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= cx.valid_to_dttm
          and cx.relationship_to_account_cd = 'PO'
        left join dwh_dds.counterparty cp on cp.counterparty_rk = cx.customer_rk
          and &ETL_SCD_FUTURE_DTTM = cp.valid_to_dttm
        left join dwh_dds.external_org eo on eo.external_org_rk = cp.counterparty_rk
          and &ETL_SCD_FUTURE_DTTM = eo.valid_to_dttm
        /* связь поставки с клиентом - дебитором */
        left join dwh_dds.customer_x_financial_account cx1 on cx1.account_rk = fa.account_rk
          and cx1.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= cx1.valid_to_dttm
          and cx1.relationship_to_account_cd = 'DT'
        left join dwh_dds.counterparty cp1 on cp1.counterparty_rk = cx1.customer_rk
          and &ETL_SCD_FUTURE_DTTM = cp1.valid_to_dttm
        left join dwh_dds.external_org eo1 on eo1.external_org_rk = cp1.counterparty_rk
          and &ETL_SCD_FUTURE_DTTM = eo1.valid_to_dttm
        left join dwh_dds.loan_account la on la.account_rk = fa.account_rk
          and la.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= la.valid_to_dttm
        left join (   /* связь договора с лимитом, PRIMARY - основной лимит, действующий на генеральный договор */
          select cfx.account_rk, c.limit_amt, c.currency_cd, c.effective_from_dt, c.expiration_dt
          from dwh_dds.credit_facility c, dwh_dds.irb_crfacility_x_facc cfx
          where c.credit_facility_type_cd = 'PRM'
          and c.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= c.valid_to_dttm
          and cfx.credit_facility_rk = c.credit_facility_rk
          and cfx.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= cfx.valid_to_dttm
        ) cf on cf.account_rk = fa1.account_rk
        left join (   /* связь договора с лимитом, лимит на дебитора в рамках данного договора */
          select c.counterparty_rk, cfx.account_rk, c.limit_amt, c.currency_cd, c.effective_from_dt, c.expiration_dt
             from dwh_dds.credit_facility c, dwh_dds.irb_crfacility_x_facc cfx
             where c.credit_facility_type_cd = 'DEB'
             and c.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= c.valid_to_dttm
             and cfx.credit_facility_rk = c.credit_facility_rk
             and cfx.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= cfx.valid_to_dttm
        ) cfd on cfd.account_rk = fa1.account_rk  and cx1.customer_rk = cfd.counterparty_rk
        left join (   /* определение DEBTOR_LIMIT_MATURITY_DATE */
          select cp.counterparty_rk, cp.account_rk, cp.credit_facility_rk, cp.expiration_dt, cp.valid_from_dttm, cm.max_valid_from
          from (
          select c.counterparty_rk, cfx.account_rk, c.credit_facility_rk, c.expiration_dt, c.valid_from_dttm
          from dwh_dds.credit_facility c, dwh_dds.irb_crfacility_x_facc cfx
          where c.credit_facility_type_cd = 'DEB'
          and c.valid_from_dttm < &mpReportEndDttm
          and cfx.credit_facility_rk = c.credit_facility_rk
          and cfx.valid_from_dttm = c.valid_from_dttm
          ) cp  inner join (
          select cfx.account_rk, c.credit_facility_rk, max(c.valid_from_dttm) as max_valid_from
          from dwh_dds.credit_facility c, dwh_dds.irb_crfacility_x_facc cfx
          where c.credit_facility_type_cd = 'DEB'
          and c.valid_from_dttm < &mpReportEndDttm
          and cfx.credit_facility_rk = c.credit_facility_rk
          and cfx.valid_from_dttm = c.valid_from_dttm
          group by cfx.account_rk, c.credit_facility_rk
          ) cm on cp.account_rk = cm.account_rk and cp.credit_facility_rk = cm.credit_facility_rk
          where cp.valid_from_dttm = cm.max_valid_from
        ) cfd1 on cfd1.account_rk = fa1.account_rk and cfd1.counterparty_rk = cx1.customer_rk
        left join dwh_dds.loan_account la1 on la1.account_rk = fa1.account_rk
          and la1.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= la1.valid_to_dttm
        left join dwh_dds.FINANCIAL_ACCOUNT_CHNG fch on fch.account_rk = fa.account_rk
          and fch.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= fch.valid_to_dttm
        left join dwh_dds.LOAN_ACCOUNT_CHNG lch on lch.account_rk = fa.account_rk and lch.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= lch.valid_to_dttm
        left join dwh_dds.LOAN_ACCOUNT_CHNG lch1 on lch1.account_rk = fa.account_rk and lch1.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= lch1.valid_to_dttm
        left join dwh_dds.loan_account la2 on la2.account_rk = fa1.account_rk
          and la.loan_approval_dt >= la2.valid_from_dttm and la.loan_approval_dt < la2.valid_to_dttm
        left join tmp_misa_lt_type5 t5 on t5.account_rk = fa.account_rk
        left join tmp_misa_lt_type6 t6 on t6.account_rk = fa.account_rk
        /* Определение комиссий- поля №31-36 */
        left join tmp_misa_lt_type4 t41 on t41.account_rk = fa.account_rk and t41.transaction_type_cd = '022'
        left join tmp_misa_lt_type4 t42 on t42.account_rk = fa.account_rk and t42.transaction_type_cd = '002'
        left join tmp_misa_lt_type4 t43 on t43.account_rk = fa.account_rk and t43.transaction_type_cd = '011'
        left join tmp_misa_lt_type4 t44 on t44.account_rk = fa.account_rk and t44.transaction_type_cd = '001'
        left join tmp_misa_lt_type4 t45 on t45.account_rk = fa.account_rk and t45.transaction_type_cd = '033'
        left join tmp_misa_lt_type4 t46 on t46.account_rk = fa.account_rk and t46.transaction_type_cd = '003'
        left join dwh_dds.loan_account la3 on la3.account_rk = fa1.account_rk and t6.transaction_dttm >= la3.valid_from_dttm and t6.transaction_dttm < la3.valid_to_dttm
        /* связь поставок/договоров(_1) со счетами ЦБ/Midas  */
        left join tmp_misa_irb_account_fin ia1 on ia1.account_rk = fa.account_rk and ia1.account_role_type_nm = 'ADVANCE_ACCNT'
        left join tmp_misa_irb_account_fin ia1_1 on ia1_1.account_rk = fa1.account_rk and ia1_1.account_role_type_nm = 'ADVANCE_ACCNT'
        left join tmp_misa_irb_account_fin ia2 on ia2.account_rk = fa.account_rk and ia2.account_role_type_nm = 'DEBT_ACCNT'
        left join tmp_misa_irb_account_fin ia2_1 on ia2_1.account_rk = fa1.account_rk and ia2_1.account_role_type_nm = 'DEBT_ACCNT'
        left join tmp_misa_irb_account_fin ia3 on ia3.account_rk = fa.account_rk and ia3.account_role_type_nm = 'INTST_ACCRUE_ACCNT'
        left join tmp_misa_irb_account_fin ia3_1 on ia3_1.account_rk = fa1.account_rk and ia3_1.account_role_type_nm = 'INTST_ACCRUE_ACCNT'
        left join tmp_misa_irb_account_fin ia4 on ia4.account_rk = fa.account_rk and ia4.account_role_type_nm = 'ACCRUED_SERVICE_ACCNT'
        left join tmp_misa_irb_account_fin ia4_1 on ia4_1.account_rk = fa1.account_rk and ia4_1.account_role_type_nm = 'ACCRUED_SERVICE_ACCNT'
        left join tmp_misa_irb_account_fin ia5 on ia5.account_rk = fa.account_rk and ia5.account_role_type_nm = 'ACCRUED_DELIVERY_ACCNT'
        left join tmp_misa_irb_account_fin ia5_1 on ia5_1.account_rk = fa1.account_rk and ia5_1.account_role_type_nm = 'ACCRUED_DELIVERY_ACCNT'
        left join tmp_misa_irb_account_fin ia6 on ia6.account_rk = fa.account_rk and ia6.account_role_type_nm = 'ACCRUED_MANAGE_ACCNT'
        left join tmp_misa_irb_account_fin ia6_1 on ia6_1.account_rk = fa1.account_rk and ia6_1.account_role_type_nm = 'ACCRUED_MANAGE_ACCNT'
        left join dwh_dds.FINANCIAL_UNIT fu on fu.financial_unit_rk = fa.prim_branch_financial_unit_rk
          and fu.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= fu.valid_to_dttm
      where                   /* нет транзакций */
        fa.account_rk not in (select t1.account_rk from tmp_misa_lt_type1 t1)
        and fa.account_rk not in (select t1.account_rk from tmp_misa_lt_type2 t1)
        and la.loan_approval_dt < &mpReportEndDttm and la.loan_approval_dt is not null
        and (fa.close_dt is null or fa.close_dt >= &mpReportStartDttm) /* поставка не закрыта на отчетную дату */
        and fa.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= fa.valid_to_dttm
        and fa.financial_account_type_cd = 'FIN'  /* поставка */
      union all /* == union 3 == Договоры с типом транзакции (001, 011, 002, 022, 003, 033, 006, 066) */
      select
        fa.ACCOUNT_REGISTRATION_NM as FACTORING_AGREEMENT_NUMBER,
        fa.open_dt as AGREEMENT_START_DATE,
        cp.irb_src_id as CLIENT_NUNBER,
        eo.organization_legal_nm as CLIENT_NAME,
        du.char_null as DEBTOR_NAME,
        du.char_null as DEBTOR_NUMBER,
        la.irb_recourse_flg as RECOURCE,
        cf.limit_amt as SUPPLIER_LIMIT,
        cf.currency_cd as SUPPLIER_LIMIT_CURRENCY,
        cf.effective_from_dt as SUPPLIER_LIMIT_START_DATE,
        cf.expiration_dt as SUPPLIER_LIMIT_MATURITY_DATE,
        du.num_null as DEBTOR_LIMIT,
        du.date_null as DEBTOR_LIMIT_START_DATE,
        du.date_null as DEBTOR_LIMIT_MATURITY_DATE,
        0 as FINANCING_PERCENTAGE,
        fa.ACCOUNT_REGISTRATION_NM as INVOICE_NUMBER,
        catt(fa.ACCOUNT_REGISTRATION_NM,';','0',';',fa.account_registration_nm,';',put(datepart(fa.open_dt),ddmmyyp10.)) as INVOICE_UNIQUE_IDENTIFIER,
        fa.open_dt as INVOICE_DATE,
        0 as INVOICE_TOTAL_SUM,
        fa.currency_cd as INVOICE_CURRENCY,
        du.num_null as INVOICE_UNSETTELED_AMOUNT,
        du.num_null as FINANCING_AMOUNT,
        du.num_null as FINANCING_DEBT,
        du.num_null as FINANCING_SETTLED_SUM,
        du.num_null as INT_RATE_FOR_SETTLED_FIN,
        du.num_null as INT_RATE_ON_DATE_OF_FIN,
        du.date_null as INVOICE_DUE_DATE,
        du.date_null as LETTER_DATE,
        du.date_null as RECOURCE_DATE,
        du.num_null as REC_FACT_SERVICE_COM_EXCL_VAT,
        du.num_null as ACCUM_FACT_SERV_COM_EXCL_VAT,
        du.num_null as RECEIVED_FIN_COM_EXCL_VAT,
        du.num_null as ACCUM_FIN_COM_EXCL_VAT,
        du.num_null as RECEIVED_HANDLING_FEE_EXCL_VAT,
        du.num_null as ACCUM_HANDLING_FEE_EXCL_VAT,
        du.num_null as RECEIVED_ORG_COM_EXCL_VAT,
        du.num_null as ACCUM_ORG_COM_EXCL_VAT,
        t5.transaction_dttm as FIN_AND_COM_CLOSED,
        du.date_null as INVOICE_CLOSED,
        la.apr_rt as CURR_INT_RATE_FOR_FIN_DEBT,
        0 as TOTAL_COMMISSIONS_TILL_TODAY,
        du.date_null as FINANCING_START_DATE,
        t6.transaction_dttm as FINANCING_SETTLE_DATE,
        du.num_null as REC_MANAGEMENT_COM_EXCL_VAT,
        du.num_null as ACCUM_MANAGEMENT_COM_EXCL_VAT,
        la.valid_from_dttm as INT_RATE_VALID_FROM,
        substrn(fu.financial_unit_id,length(fu.financial_unit_id)-2,3) as BRANCH_ID length=3,
        ia1.irb_account_number as ZB_47803,
        ia1.midas as MIDAS1437,
        ia2.irb_account_number as ZB_47803_PR,
        ia2.midas as MIDAS1438,
        ia3.irb_account_number as ZB_47423_01,
        ia3.midas as MIDAS_189301,
        ia4.irb_account_number as ZB_47423_02,
        ia4.midas as MIDAS_189302,
        ia5.irb_account_number as ZB_47423_03,
        ia5.midas as MIDAS_189303,
        ia6.irb_account_number as ZB_47423_04,
        ia6.midas as MIDAS_189304,
        du.num_null as Not_advanced_payment,
        &mpCurrentDttm as CURRENT_DATE,
        &mpReportStartDttm as ED
      from
        tmp_misa_lt_type1 t1, dwh_dds.financial_account fa
        left join dummy du on 1=1
        /* связь договора с клиентом - первичным владельцем */
        left join dwh_dds.customer_x_financial_account cx on cx.account_rk = fa.account_rk
          and cx.valid_from_dttm < &mpReportEndDttm
          and &mpReportEndDttm <= cx.valid_to_dttm and cx.relationship_to_account_cd = 'PO'
        left join dwh_dds.counterparty cp on cp.counterparty_rk = cx.customer_rk
          and &ETL_SCD_FUTURE_DTTM = cp.valid_to_dttm
        left join dwh_dds.external_org eo on eo.external_org_rk = cp.counterparty_rk
          and &ETL_SCD_FUTURE_DTTM = eo.valid_to_dttm
        left join dwh_dds.loan_account la on la.account_rk = fa.account_rk
          and la.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= la.valid_to_dttm
        left join (  /* связь договора с лимитом, PRIMARY - основной лимит, действующий на генеральный договор */
          select cfx.account_rk, c.limit_amt, c.currency_cd, c.effective_from_dt, c.expiration_dt
          from dwh_dds.credit_facility c, dwh_dds.irb_crfacility_x_facc cfx
          where c.credit_facility_type_cd = 'PRM'
          and c.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= c.valid_to_dttm
          and cfx.credit_facility_rk = c.credit_facility_rk
          and cfx.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= cfx.valid_to_dttm
        ) cf on cf.account_rk = fa.account_rk
        left join tmp_misa_lt_type5 t5 on t5.account_rk = fa.account_rk
        left join tmp_misa_lt_type61 t6 on t6.account_rk = fa.account_rk
        /* связь договоров со счетами ЦБ/Midas  */
        left join tmp_misa_irb_account_fcn ia1 on ia1.account_rk = fa.account_rk and ia1.account_role_type_nm = 'ADVANCE_ACCNT' and ia1.counterparty_rk = cx.customer_rk
        left join tmp_misa_irb_account_fcn ia2 on ia2.account_rk = fa.account_rk and ia2.account_role_type_nm = 'DEBT_ACCNT'  and ia2.counterparty_rk = cx.customer_rk
        left join tmp_misa_irb_account_fcn ia3 on ia3.account_rk = fa.account_rk and ia3.account_role_type_nm = 'INTST_ACCRUE_ACCNT'  and ia3.counterparty_rk = cx.customer_rk
        left join tmp_misa_irb_account_fcn ia4 on ia4.account_rk = fa.account_rk and ia4.account_role_type_nm = 'ACCRUED_SERVICE_ACCNT'  and ia4.counterparty_rk = cx.customer_rk
        left join tmp_misa_irb_account_fcn ia5 on ia5.account_rk = fa.account_rk and ia5.account_role_type_nm = 'ACCRUED_DELIVERY_ACCNT'  and ia5.counterparty_rk = cx.customer_rk
        left join tmp_misa_irb_account_fcn ia6 on ia6.account_rk = fa.account_rk and ia6.account_role_type_nm = 'ACCRUED_MANAGE_ACCNT'  and ia6.counterparty_rk = cx.customer_rk
        left join dwh_dds.FINANCIAL_UNIT fu on fu.financial_unit_rk = fa.prim_branch_financial_unit_rk
          and fu.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= fu.valid_to_dttm
      where                                 /* договор не закрыт на отчетную дату */
        fa.account_rk = t1.account_rk and (fa.close_dt is null or fa.close_dt >= &mpReportStartDttm)
        and fa.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= fa.valid_to_dttm
        and fa.financial_account_type_cd = 'FCN'  /* договор */
      union all /* == union 4 == Договоры с типом транзакции (004, 044, 005, 055) */
      select
        fa.ACCOUNT_REGISTRATION_NM as FACTORING_AGREEMENT_NUMBER,
        fa.open_dt as AGREEMENT_START_DATE,
        cp.irb_src_id as CLIENT_NUNBER,
        eo.organization_legal_nm as CLIENT_NAME,
        du.char_null as DEBTOR_NAME,
        du.char_null as DEBTOR_NUMBER,
        la.irb_recourse_flg as RECOURCE,
        coalesce(cf.limit_amt, 0) as SUPPLIER_LIMIT,
        cf.currency_cd as SUPPLIER_LIMIT_CURRENCY,
        fa.open_dt as SUPPLIER_LIMIT_START_DATE,
        cf.expiration_dt as SUPPLIER_LIMIT_MATURITY_DATE,
        du.num_null as DEBTOR_LIMIT,
        du.date_null as DEBTOR_LIMIT_START_DATE,
        du.date_null as DEBTOR_LIMIT_MATURITY_DATE,
        0 as FINANCING_PERCENTAGE,
        fa.ACCOUNT_REGISTRATION_NM as INVOICE_NUMBER,
        catt(fa.ACCOUNT_REGISTRATION_NM,';','0',';',fa.account_registration_nm,';',put(datepart(t1.transaction_dttm),ddmmyyp10.)) as INVOICE_UNIQUE_IDENTIFIER,
        fa.open_dt as INVOICE_DATE,
        coalesce(t3.transaction_amt, 0)+coalesce(t7.transaction_amt, 0) as INVOICE_TOTAL_SUM,
        fa.currency_cd as INVOICE_CURRENCY,
        du.num_null as INVOICE_UNSETTELED_AMOUNT,
        du.num_null as FINANCING_AMOUNT,
        du.num_null as FINANCING_DEBT,
        du.num_null as FINANCING_SETTLED_SUM,
        du.num_null as INT_RATE_FOR_SETTLED_FIN,
        du.num_null as INT_RATE_ON_DATE_OF_FIN,
        du.date_null as INVOICE_DUE_DATE,
        du.date_null as LETTER_DATE,
        du.date_null as RECOURCE_DATE,
        du.num_null as REC_FACT_SERVICE_COM_EXCL_VAT,
        du.num_null as ACCUM_FACT_SERV_COM_EXCL_VAT,
        du.num_null as RECEIVED_FIN_COM_EXCL_VAT,
        du.num_null as ACCUM_FIN_COM_EXCL_VAT,
        du.num_null as RECEIVED_HANDLING_FEE_EXCL_VAT,
        du.num_null as ACCUM_HANDLING_FEE_EXCL_VAT,
        t3.transaction_amt as RECEIVED_ORG_COM_EXCL_VAT,
        t9.transaction_amt as ACCUM_ORG_COM_EXCL_VAT,
        t5.transaction_dttm as FIN_AND_COM_CLOSED,
        du.date_null as INVOICE_CLOSED,
        la.apr_rt as CURR_INT_RATE_FOR_FIN_DEBT,
      coalesce(t3.transaction_amt, 0)+ coalesce(t7.transaction_amt, 0) as TOTAL_COMMISSIONS_TILL_TODAY,
        du.date_null as FINANCING_START_DATE,
        du.date_null as FINANCING_SETTLE_DATE,
        t7.transaction_amt as REC_MANAGEMENT_COM_EXCL_VAT,
        t8.transaction_amt as ACCUM_MANAGEMENT_COM_EXCL_VAT,
        la.valid_from_dttm as INT_RATE_VALID_FROM,
        substrn(fu.financial_unit_id,length(fu.financial_unit_id)-2,3) as BRANCH_ID length=3,
        ia1.irb_account_number as ZB_47803,
        ia1.midas as MIDAS1437,
        ia2.irb_account_number as ZB_47803_PR,
        ia2.midas as MIDAS1438,
        ia3.irb_account_number as ZB_47423_01,
        ia3.midas as MIDAS_189301,
        ia4.irb_account_number as ZB_47423_02,
        ia4.midas as MIDAS_189302,
        ia5.irb_account_number as ZB_47423_03,
        ia5.midas as MIDAS_189303,
        ia6.irb_account_number as ZB_47423_04,
        ia6.midas as MIDAS_189304,
        du.num_null as Not_advanced_payment,
        &mpCurrentDttm as CURRENT_DATE,
        &mpReportStartDttm as ED
      from
        tmp_misa_lt_type2 t1, dwh_dds.financial_account fa
        left join dummy du on 1=1
        /* связь договора с клиентом - первичным владельцем */
        left join dwh_dds.customer_x_financial_account cx on cx.account_rk = fa.account_rk and cx.valid_from_dttm < &mpReportEndDttm
          and &mpReportEndDttm <= cx.valid_to_dttm and cx.relationship_to_account_cd = 'PO'
        left join dwh_dds.counterparty cp on cp.counterparty_rk = cx.customer_rk and &ETL_SCD_FUTURE_DTTM = cp.valid_to_dttm
        left join dwh_dds.external_org eo on eo.external_org_rk = cp.counterparty_rk and &ETL_SCD_FUTURE_DTTM = eo.valid_to_dttm
        left join dwh_dds.loan_account la on la.account_rk = fa.account_rk and la.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= la.valid_to_dttm
        left join (
          select cfx.account_rk, c.limit_amt, c.currency_cd, c.effective_from_dt, c.expiration_dt
          from dwh_dds.credit_facility c, dwh_dds.irb_crfacility_x_facc cfx
          where c.credit_facility_type_cd = 'PRM'
          and c.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= c.valid_to_dttm
          and cfx.credit_facility_rk = c.credit_facility_rk
          and cfx.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= cfx.valid_to_dttm
        ) cf on cf.account_rk = fa.account_rk
        left join tmp_misa_lt_type3 t3 on t3.account_rk = fa.account_rk
        left join tmp_misa_lt_type5 t5 on t5.account_rk = fa.account_rk
        left join tmp_misa_lt_type7 t7 on t7.account_rk = fa.account_rk
        left join tmp_misa_lt_type8 t8 on t8.account_rk = fa.account_rk
        left join tmp_misa_lt_type9 t9 on t9.account_rk = fa.account_rk
        /* связь договоров со счетами ЦБ/Midas  */
        left join tmp_misa_irb_account_fcn ia1 on ia1.account_rk = fa.account_rk and ia1.account_role_type_nm = 'ADVANCE_ACCNT' and ia1.counterparty_rk = cx.customer_rk
        left join tmp_misa_irb_account_fcn ia2 on ia2.account_rk = fa.account_rk and ia2.account_role_type_nm = 'DEBT_ACCNT'  and ia2.counterparty_rk = cx.customer_rk
        left join tmp_misa_irb_account_fcn ia3 on ia3.account_rk = fa.account_rk and ia3.account_role_type_nm = 'INTST_ACCRUE_ACCNT'  and ia3.counterparty_rk = cx.customer_rk
        left join tmp_misa_irb_account_fcn ia4 on ia4.account_rk = fa.account_rk and ia4.account_role_type_nm = 'ACCRUED_SERVICE_ACCNT'  and ia4.counterparty_rk = cx.customer_rk
        left join tmp_misa_irb_account_fcn ia5 on ia5.account_rk = fa.account_rk and ia5.account_role_type_nm = 'ACCRUED_DELIVERY_ACCNT'  and ia5.counterparty_rk = cx.customer_rk
        left join tmp_misa_irb_account_fcn ia6 on ia6.account_rk = fa.account_rk and ia6.account_role_type_nm = 'ACCRUED_MANAGE_ACCNT'  and ia6.counterparty_rk = cx.customer_rk
        left join dwh_dds.FINANCIAL_UNIT fu on fu.financial_unit_rk = fa.prim_branch_financial_unit_rk
          and fu.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= fu.valid_to_dttm
      where
        fa.account_rk = t1.account_rk and (fa.close_dt is null or fa.close_dt >= &mpReportStartDttm)
        and fa.valid_from_dttm < &mpReportEndDttm and &mpReportEndDttm <= fa.valid_to_dttm
        and fa.financial_account_type_cd = 'FCN'  /* договор */
        and exists(   /* существуют незакрытые поставки */
          select 1
          from dwh_dds.financial_account_assoc faa, dwh_dds.financial_account fa1, dwh_dds.loan_account la
          where faa.account_rk = fa.account_rk and faa.financial_acct_assoc_type_cd = 'FCT'
            and fa1.account_rk = faa.reference_financial_account_rk
            and fa1.financial_account_type_cd = 'FIN' and (fa1.close_dt is null or fa1.close_dt >= &mpReportStartDttm)
        and la.account_rk = fa1.account_rk and la.loan_approval_dt < &mpReportEndDttm and la.loan_approval_dt is not null
        );

      /* создаем индекс, который многократно ускоряет выполнение следующего запроса */
      create index invoice_number on work_fct.tmp_misa_out (invoice_number);

      /* определение FINANCING_SETTLED_SUM для поставки с максимальным financing_settle_date в рамках договора факторинга */
      create table &mpOut as
      select
        x.FACTORING_AGREEMENT_NUMBER,
        x.AGREEMENT_START_DATE,
        SubStrN(x.CLIENT_NUNBER,1,10) AS CLIENT_NUNBER LENGTH=10,
        x.CLIENT_NAME,
        x.DEBTOR_NAME,
        SubStrN(x.DEBTOR_NUMBER,1,8) AS DEBTOR_NUMBER LENGTH=8,
        x.RECOURCE,
        x.SUPPLIER_LIMIT,
        x.SUPPLIER_LIMIT_CURRENCY,
        x.SUPPLIER_LIMIT_START_DATE,
        x.SUPPLIER_LIMIT_MATURITY_DATE,
        x.DEBTOR_LIMIT,
        x.DEBTOR_LIMIT_START_DATE,
        x.DEBTOR_LIMIT_MATURITY_DATE,
        x.FINANCING_PERCENTAGE,
        x.INVOICE_NUMBER,
        x.INVOICE_UNIQUE_IDENTIFIER,
        x.INVOICE_DATE,
        x.INVOICE_TOTAL_SUM,
        x.INVOICE_CURRENCY,
        x.INVOICE_UNSETTELED_AMOUNT,
        x.FINANCING_AMOUNT,
        x.FINANCING_DEBT,
        x.financing_amount-x.financing_debt-
          coalesce(t1.financing_settled_sum, 0) as FINANCING_SETTLED_SUM,
        x.INT_RATE_FOR_SETTLED_FIN,
        x.INT_RATE_ON_DATE_OF_FIN,
        x.INVOICE_DUE_DATE,
        x.LETTER_DATE,
        x.RECOURCE_DATE,
        x.REC_FACT_SERVICE_COM_EXCL_VAT,
        x.ACCUM_FACT_SERV_COM_EXCL_VAT,
        x.RECEIVED_FIN_COM_EXCL_VAT,
        x.ACCUM_FIN_COM_EXCL_VAT,
        x.RECEIVED_HANDLING_FEE_EXCL_VAT,
        x.ACCUM_HANDLING_FEE_EXCL_VAT,
        x.RECEIVED_ORG_COM_EXCL_VAT,
        x.ACCUM_ORG_COM_EXCL_VAT,
        x.FIN_AND_COM_CLOSED,
        x.INVOICE_CLOSED,
        x.CURR_INT_RATE_FOR_FIN_DEBT,
      coalesce(x.TOTAL_COMMISSIONS_TILL_TODAY, 0) as TOTAL_COMMISSIONS_TILL_TODAY,
        x.FINANCING_START_DATE,
        x.FINANCING_SETTLE_DATE,
        x.REC_MANAGEMENT_COM_EXCL_VAT,
        x.ACCUM_MANAGEMENT_COM_EXCL_VAT,
        x.INT_RATE_VALID_FROM,
        x.BRANCH_ID,
        x.ZB_47803,
        x.MIDAS1437,
        x.ZB_47803_PR,
        x.MIDAS1438,
        x.ZB_47423_01,
        x.MIDAS_189301,
        x.ZB_47423_02,
        x.MIDAS_189302,
        x.ZB_47423_03,
        x.MIDAS_189303,
        x.ZB_47423_04,
        x.MIDAS_189304,
        x.Not_advanced_payment,
        x.CURRENT_DATE,
        x.ED
      from (
         select t.*,
         (select max(t2.financing_settle_date)
            from work_fct.tmp_misa_out t2
            where t2.invoice_number = t.invoice_number
            and t2.financing_settle_date < t.financing_settle_date
         ) as dd
        from work_fct.tmp_misa_out t
      ) x
      left join work_fct.tmp_misa_out t1
        on t1.factoring_agreement_number = x.factoring_agreement_number and t1.invoice_number = x.invoice_number
        and x.dd = t1.financing_settle_date and t1.debtor_number = x.debtor_number
      order by x.financing_settle_date
   ;
   quit;
   %error_check (mpStepType=SQL);
%mend mart_factoring_mis_a_day;


%macro mart_factoring_mis_a_full (mpOut=);
   %local lmvReportStartDttm lmvReportEndDttm lmvReport i;
   %let lmvReport = w_103_010_report;

   /* Расчет вспомогательных таблиц */
   %mart_factoring_mis_a_init;

   %do i=&DMFCTR_MIS_A_END_DT %to &DMFCTR_MIS_A_START_DT %by -1;
      /* Важно - дата-время начала дня (т.е. 0 часов) включается в интервалы, дата конца (т.е. 24 часа) не включается */
      %let lmvReportStartDttm = %sysfunc (dhms(&i, 0, 0, 0));
      %let lmvReportEndDttm   = %sysfunc (dhms(%eval(&i+1), 0, 0, 0));

      /* Строим витрину за очередной день */
      %mart_factoring_mis_a_day (
         mpReportStartDttm=&lmvReportStartDttm, mpReportEndDttm=&lmvReportEndDttm,
         mpCurrentDttm=&JOB_START_DTTM, mpOut=&lmvReport
      );

      /* Добавляем результат в итоги */
      %local lmvInsertVars;
      %let lmvInsertVars = %member_vars (&lmvReport);
      proc sql;
         /* Очищаем прошлую витрину */
         delete from &mpOut where ED = &lmvReportStartDttm
         ;
         insert into &mpOut
         (
            %util_list (
               mpWith=  &lmvInsertVars,
               mpDlm=   %str(, )
            )
         )
         select
            %util_list (
               mpWith=  &lmvInsertVars,
               mpDlm=   %str(, )
            )
         from &lmvReport
         ;

      quit;

      %error_check (mpStepType=SQL);
      %rcSet(&STEP_RC);
   %end;
%mend mart_factoring_mis_a_full;

%mart_factoring_mis_a_full (mpOut=&_OUTPUT);

/*---- End of User Written Code  ----*/ 

%rcSet(&syserr); 
%rcSet(&sqlrc); 


/**  Step end Mart_V_FCCHS_FACTORING_MIS_A **/

/*==========================================================================* 
 * Step:            Завершить модуль                      A5X3Z45Z.AH00004N * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00004N);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 247 2012-04-03 07:31:10Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;

   /* Продолжаем модуль */
   %job_continue_reg(mpJobType=JOB, mpJobName=&ETLS_JobName., mpPostEvent=N);

   /* Завершаем модуль */
   %job_finish_reg(mpJobType=JOB);

%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);



/**  Job end 101_002_Mart_V_FCCHS_FACTORING_MIS_A **/

/* Reset jobid and name */
%let jobID = %quote(A5X3Z45Z.AF00000O);
%let etls_jobName = %nrquote(100_002_Stream_DM_FCTR);

/**************************************************************************** 
 * Job:             101_900_Stream_DM_FCTR_Finish         A5X3Z45Z.AF00000M * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: bravo14                                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DMFCTR_REP/Jobs/Includes                           * 
 *                                                                          * 
 * Server:          SASApp                                A5C46MZY.AQ000002 * 
 *                                                                          * 
 * Source Table:    ETL_RESOURCE - etl_sys.ETL_RESOURCE   A59S11RW.AE00001H * 
 *                                                                          * 
 * Generated on:    16 Июль 2013 г. 18:09:10 MSD                            * 
 * Generated by:    sasdwh                                                  * 
 * Version:         SAS Data Integration Studio 4.5                         * 
 ****************************************************************************/ 

/* General macro variables  */ 
%let jobID = %quote(A5X3Z45Z.AF00000M);
%let etls_jobName = %nrquote(101_900_Stream_DM_FCTR_Finish);
%let etls_userID = %nrquote(sasdwh);


/* Create metadata macro variables */
%let IOMServer      = %nrquote(SASApp);
%let metaPort       = %nrquote(8561);
%let metaServer     = %nrquote(bravo14);

/* Set metadata options */
options metaport       = &metaPort 
        metaserver     = "&metaServer"; 

/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A5X3Z45Z.AH000043 * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH000043);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_start.sas 1747 2012-08-01 11:26:13Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует начало модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_start;

   /* Продолжаем поток (или создаем новый) */
   %local lmvStreamName;
   %if %sysfunc(sysexist(LSB_JOBNAME)) %then
      %let lmvStreamName = %scan(%sysfunc(sysget(LSB_JOBNAME)), 3, :);
   %else
      %let lmvStreamName = ;

   %job_continue_reg(mpJobType=STREAM, mpJobName=&lmvStreamName, mpPostEvent=N, mpForcedStart=Y);

   /* Для DI, начинаем поток заново, если старый был начат не сегодня */
   %if %length(&lmvStreamName) eq 0 and &STREAM_START_DT ne %sysfunc(today()) %then %do;
      %job_start_reg(mpJobType=STREAM, mpParentJobId=, mpJobName=&lmvStreamName.);
   %end;

   /* Начинаем модуль */
   %job_start_reg(mpJobType=JOB, mpParentJobId=&STREAM_ID, mpJobName=&ETLS_JobName.);

%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Начать модуль **/

/*==========================================================================* 
 * Step:            Extract                               A5X3Z45Z.AH000044 * 
 * Transform:       Extract                                                 * 
 * Description:     RESOURCE_CD = "DM_FCTR"                                 * 
 *                                                                          * 
 * Source Table:    ETL_RESOURCE - etl_sys.ETL_RESOURCE   A59S11RW.AE00001H * 
 * Target Table:    Extract - work.W6TDS5W0               A5X3Z45Z.AN00000W * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH000044);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(etl_sys.ETL_RESOURCE); 

%let SYS_SQL_IP_SPEEDO = Y;
%let SYS_SQL_MAPPUTTO = sas_put;
%let SYS_SQLREDUCEPUT = DBMS;
%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

/*---- Map the columns  ----*/ 
proc datasets lib = work nolist nowarn memtype = (data view);
   delete W6TDS5W0;
quit;

%put %str(NOTE: Mapping columns ...);
proc sql;
   create table work.W6TDS5W0 as
      select
         RESOURCE_ID,
         ("ALL") as VERSION_ID length = 8
            format = $8.
            informat = $8.
            label = 'VERSION_ID',
         ("NOCHG") as AVAILABLE_DT length = 8
            format = $8.
            informat = $8.
            label = 'AVAILABLE_DT',
         (&JOB_ID) as PROCESSED_BY_JOB_ID length = 8
            format = 8.
            informat = 8.
            label = 'PROCESSED_BY_JOB_ID',
         ("E") as STATUS_CD length = 3
            format = $3.
            informat = $3.
            label = 'STATUS_CD'
   from &SYSLAST
      where RESOURCE_CD = "DM_FCTR"
   ;
quit;

%let SYSLAST = work.W6TDS5W0;

%global etls_sql_pushDown;
%let etls_sql_pushDown = &sys_sql_ip_all;

%rcSet(&sqlrc); 



/**  Step end Extract **/

/*==========================================================================* 
 * Step:            Обновить ресурсы                      A5X3Z45Z.AH000045 * 
 * Transform:       Обновить ресурсы                                        * 
 * Description:     E для всех                                              * 
 *                                                                          * 
 * Source Table:    Extract - work.W6TDS5W0               A5X3Z45Z.AN00000W * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH000045);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.W6TDS5W0); 

%let _INPUT_count = 1; 
%let _INPUT = work.W6TDS5W0;
%let _INPUT_connect = ;
%let _INPUT_engine = ;
%let _INPUT_memtype = DATA;
%let _INPUT_options = %nrquote();
%let _INPUT_alter = %nrquote();
%let _INPUT_path = %nrquote(/Extract_A5X3Z45Z.AN00000W%(WorkTable%));
%let _INPUT_type = 1;
%let _INPUT_label = %nrquote();

%let tpIn = work.W6TDS5W0;
%let tpIn_connect = ;
%let tpIn_engine = ;
%let tpIn_memtype = DATA;
%let tpIn_options = %nrquote();
%let tpIn_alter = %nrquote();
%let tpIn_path = %nrquote(/Extract_A5X3Z45Z.AN00000W%(WorkTable%));
%let tpIn_type = 1;
%let tpIn_label = %nrquote();

%let _OUTPUT_count = 0; 

%let tpNotFound = %nrquote(ADD);
%let tpWhere = %nrquote(status_cd = %'A%');

/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_resource_update_all.sas 3459 2012-10-09 06:44:46Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Обновляет несколько ресурсов по таблице.
*   TODO:  убрать дефолт для update_dttm.
*
* ПАРАМЕТРЫ:
*   tpIn                + входная таблица (поля: resource_id, version_id, available_dt, update_dttm, processed_by_job_id, status_cd)
*                         Поля available_dt, update_dttm, processed_by_job_id, status_cd могут отсутствовать и в этом случае не обновляются
*                         Присутствующие поля должны содержать обновленные значения
*   tpNotFound          - если запись не найдена:
*                         NOP - ничего не делать
*                         ERR - сообщать об ошибке
*                         ADD - добавить новую запись
*   tpWhere             - дополнительное ограничение, в формате Oracle
*
******************************************************************/

%macro transform_resource_update_all;
   /* Получаем список доступных переменных */
   %local lmvInVars;
   %let lmvInVars = %upcase(%member_vars (&tpIn));

   /* Обновляем все ресурсы */
   %macro _tr_resource_update_all_loop;
      %resource_update (
         mpResourceId=&resource_id, mpVersion=&version_id,
         %if %index(&lmvInVars, AVAILABLE_DT) %then
            mpDate=&available_dt,
         ;
         %if %index(&lmvInVars, UPDATE_DTTM) %then
            mpUpdateDttm=&update_dttm,
         ;
         %else %if %length(&version_id) = 0 or &version_id = . %then
            mpUpdateDttm=,
         ;
         %if %index(&lmvInVars, PROCESSED_BY_JOB_ID) %then
            mpProcessedBy=&processed_by_job_id,
         ;
         %if %index(&lmvInVars, STATUS_CD) %then
            mpStatus=&status_cd,
         ;
         mpNotFound=&tpNotFound, mpWhere=&tpWhere
      );
   %mend _tr_resource_update_all_loop;

   %util_loop_data (mpLoopMacro=_tr_resource_update_all_loop, mpData=&tpIn);
%mend transform_resource_update_all;

%transform_resource_update_all;

%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Обновить ресурсы **/

/*==========================================================================* 
 * Step:            Завершить модуль                      A5X3Z45Z.AH000046 * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH000046);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 247 2012-04-03 07:31:10Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;

   /* Продолжаем модуль */
   %job_continue_reg(mpJobType=JOB, mpJobName=&ETLS_JobName., mpPostEvent=N);

   /* Завершаем модуль */
   %job_finish_reg(mpJobType=JOB);

%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);



/**  Job end 101_900_Stream_DM_FCTR_Finish **/

/* Reset jobid and name */
%let jobID = %quote(A5X3Z45Z.AF00000O);
%let etls_jobName = %nrquote(100_002_Stream_DM_FCTR);

/*==========================================================================* 
 * Step:            Завершить модуль                      A5X3Z45Z.AH00004K * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5X3Z45Z.AH00004K);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 247 2012-04-03 07:31:10Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;

   /* Продолжаем модуль */
   %job_continue_reg(mpJobType=JOB, mpJobName=&ETLS_JobName., mpPostEvent=N);

   /* Завершаем модуль */
   %job_finish_reg(mpJobType=JOB);

%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);

