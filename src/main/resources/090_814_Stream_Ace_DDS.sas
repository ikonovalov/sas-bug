/**************************************************************************** 
 * Job:             090_814_Stream_Ace_DDS                A569C89V.AQ0000DX * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: bravo14                                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DWHDDS_DDS/Jobs/090_Regular_ETL/090_800_Stream_A   * 
 *                  ce                                                      * 
 *                                                                          * 
 * Server:          SASApp                                A5C46MZY.AQ000002 * 
 *                                                                          * 
 * Generated on:    16 Июль 2013 г. 17:08:10 MSD                            * 
 * Generated by:    sasdwh                                                  * 
 * Version:         SAS Data Integration Studio 4.5                         * 
 ****************************************************************************/ 

/* General macro variables  */ 
%let jobID = %quote(A569C89V.AQ0000DX);
%let etls_jobName = %nrquote(090_814_Stream_Ace_DDS);
%let etls_userID = %nrquote(sasdwh);

/* Setup to capture return codes  */ 
%global job_rc trans_rc sqlrc ;
%let sysrc = 0;
%let job_rc = 0;
%let trans_rc = 0;
%let sqlrc = 0;
%global etls_stepStartTime; 
/* initialize syserr to 0 */
data _null_; run;

%macro rcSet(error); 
   %if (&error gt &trans_rc) %then 
      %let trans_rc = &error;
   %if (&error gt &job_rc) %then 
      %let job_rc = &error;
%mend rcSet; 

%macro rcSetDS(error); 
   if &error gt input(symget('trans_rc'),12.) then 
      call symput('trans_rc',trim(left(put(&error,12.))));
   if &error gt input(symget('job_rc'),12.) then 
      call symput('job_rc',trim(left(put(&error,12.))));
%mend rcSetDS; 

/* Create metadata macro variables */
%let IOMServer      = %nrquote(SASApp);
%let metaPort       = %nrquote(8561);
%let metaServer     = %nrquote(bravo14);

/* Set metadata options */
options metaport       = &metaPort 
        metaserver     = "&metaServer"; 

/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A569C89V.AS0004EL * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A569C89V.AS0004EL);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_start.sas 1747 2012-08-01 11:26:13Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует начало модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_start;

   /* Продолжаем поток (или создаем новый) */
   %local lmvStreamName;
   %if %sysfunc(sysexist(LSB_JOBNAME)) %then
      %let lmvStreamName = %scan(%sysfunc(sysget(LSB_JOBNAME)), 3, :);
   %else
      %let lmvStreamName = ;

   %job_continue_reg(mpJobType=STREAM, mpJobName=&lmvStreamName, mpPostEvent=N, mpForcedStart=Y);

   /* Для DI, начинаем поток заново, если старый был начат не сегодня */
   %if %length(&lmvStreamName) eq 0 and &STREAM_START_DT ne %sysfunc(today()) %then %do;
      %job_start_reg(mpJobType=STREAM, mpParentJobId=, mpJobName=&lmvStreamName.);
   %end;

   /* Начинаем модуль */
   %job_start_reg(mpJobType=JOB, mpParentJobId=&STREAM_ID, mpJobName=&ETLS_JobName.);

%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Начать модуль **/

/**************************************************************************** 
 * Job:             062_831_Get_Delta_EXTERNAL_ORG_FIN_D  A5Y50FNE.AN000110 * 
 *                  ATA_DELTA                                               * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: bravo14                                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DWHDDS_IA/Jobs/062_Get_Delta/Facts                 * 
 *                                                                          * 
 * Server:          SASApp                                A5C46MZY.AQ000002 * 
 *                                                                          * 
 * Source Tables:   EXTERNAL_ORG_FINANCIAL_DATA_RK -      A5Y50FNE.AE0000ZG * 
 *                  work_ia.EXTERNAL_ORG_FINANCIAL_DATA                     * 
 *                  _RK                                                     * 
 *                  EXTERNAL_ORG_FIN_DATA_SNAP -          A5Y50FNE.AE0000Q4 * 
 *                   etl_ia.EXTERNAL_ORG_FIN_DATA_SNAP                      * 
 * Target Tables:   EXTERNAL_ORG_FIN_DATA_DELTA -         A569C89V.AE0000K3 * 
 *                   etl_dds.EXTERNAL_ORG_FIN_DATA_DELTA                    * 
 *                  EXTERNAL_ORG_FIN_DATA_SNUP -          A5Y50FNE.AE0000Q5 * 
 *                   etl_ia.EXTERNAL_ORG_FIN_DATA_SNUP                      * 
 *                                                                          * 
 * Generated on:    16 Июль 2013 г. 17:08:10 MSD                            * 
 * Generated by:    sasdwh                                                  * 
 * Version:         SAS Data Integration Studio 4.5                         * 
 ****************************************************************************/ 

/* General macro variables  */ 
%let jobID = %quote(A5Y50FNE.AN000110);
%let etls_jobName = %nrquote(062_831_Get_Delta_EXTERNAL_ORG_FIN_DATA_DELTA);
%let etls_userID = %nrquote(sasdwh);


/* Create metadata macro variables */
%let IOMServer      = %nrquote(SASApp);
%let metaPort       = %nrquote(8561);
%let metaServer     = %nrquote(bravo14);

/* Set metadata options */
options metaport       = &metaPort 
        metaserver     = "&metaServer"; 

/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A5Y50FNE.AQ000991 * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5Y50FNE.AQ000991);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_start.sas 1747 2012-08-01 11:26:13Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует начало модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_start;

   /* Продолжаем поток (или создаем новый) */
   %local lmvStreamName;
   %if %sysfunc(sysexist(LSB_JOBNAME)) %then
      %let lmvStreamName = %scan(%sysfunc(sysget(LSB_JOBNAME)), 3, :);
   %else
      %let lmvStreamName = ;

   %job_continue_reg(mpJobType=STREAM, mpJobName=&lmvStreamName, mpPostEvent=N, mpForcedStart=Y);

   /* Для DI, начинаем поток заново, если старый был начат не сегодня */
   %if %length(&lmvStreamName) eq 0 and &STREAM_START_DT ne %sysfunc(today()) %then %do;
      %job_start_reg(mpJobType=STREAM, mpParentJobId=, mpJobName=&lmvStreamName.);
   %end;

   /* Начинаем модуль */
   %job_start_reg(mpJobType=JOB, mpParentJobId=&STREAM_ID, mpJobName=&ETLS_JobName.);

%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Начать модуль **/

/*==========================================================================* 
 * Step:            Вычисление дельты по SCD              A5Y50FNE.AQ000992 * 
 * Transform:       Вычисление дельты по SCD                                * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Tables:   EXTERNAL_ORG_FINANCIAL_DATA_RK -      A5Y50FNE.AE0000ZG * 
 *                  work_ia.EXTERNAL_ORG_FINANCIAL_DATA                     * 
 *                  _RK                                                     * 
 *                  EXTERNAL_ORG_FIN_DATA_SNAP -          A5Y50FNE.AE0000Q4 * 
 *                   etl_ia.EXTERNAL_ORG_FIN_DATA_SNAP                      * 
 * Target Tables:   Вычисление дельты_OUTPUT0 -           A5Y50FNE.AO00057H * 
 *                   work.W8DIJEPR                                          * 
 *                  Вычисление дельты_OUTPUT1 -           A5Y50FNE.AO00057I * 
 *                   work.W8DIJG8A                                          * 
 *==========================================================================*/ 

%let transformID = %quote(A5Y50FNE.AQ000992);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 2; 
%let _INPUT = work_ia.EXTERNAL_ORG_FINANCIAL_DATA_RK;
%let _INPUT_connect = ;
%let _INPUT_engine = BASE;
%let _INPUT_memtype = DATA;
%let _INPUT_options = %nrquote();
%let _INPUT_alter = %nrquote();
%let _INPUT_path = %nrquote(/DWH_DWHDDS_IA/Tables/WORK_IA/Counterparty/ACE/EXTERNAL_ORG_FINANCIAL_DATA_RK%(Table%));
%let _INPUT_type = 1;
%let _INPUT_label = %nrquote();

%let tpIn = work_ia.EXTERNAL_ORG_FINANCIAL_DATA_RK;
%let tpIn_connect = ;
%let tpIn_engine = BASE;
%let tpIn_memtype = DATA;
%let tpIn_options = %nrquote();
%let tpIn_alter = %nrquote();
%let tpIn_path = %nrquote(/DWH_DWHDDS_IA/Tables/WORK_IA/Counterparty/ACE/EXTERNAL_ORG_FINANCIAL_DATA_RK%(Table%));
%let tpIn_type = 1;
%let tpIn_label = %nrquote();

%let tpSnap = etl_ia.EXTERNAL_ORG_FIN_DATA_SNAP;
%let tpSnap_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_IA" 
;
%let tpSnap_engine = ORACLE;
%let tpSnap_memtype = DATA;
%let tpSnap_options = %nrquote();
%let tpSnap_alter = %nrquote();
%let tpSnap_path = %nrquote(/DWH_DWHDDS_IA/Tables/ETL_IA/Counterparty_External/EXTERNAL_ORG_FIN_DATA_SNAP%(Table%));
%let tpSnap_type = 1;
%let tpSnap_label = %nrquote();

%let _OUTPUT_count = 2; 
%let _OUTPUT = work.W8DIJEPR;
%let _OUTPUT_connect = ;
%let _OUTPUT_engine = ;
%let _OUTPUT_memtype = DATA;
%let _OUTPUT_options = %nrquote();
%let _OUTPUT_alter = %nrquote();
%let _OUTPUT_path = %nrquote(/Вычисление дельты_OUTPUT0_A5Y50FNE.AO00057H%(WorkTable%));
%let _OUTPUT_type = 1;
%let _OUTPUT_label = %nrquote();
/* List of target columns to keep  */ 
%let _OUTPUT_keep = EXTERNAL_ORG_RK VALID_FROM_DTTM VALID_TO_DTTM NET_SALES_REVENUE_AMT 
        ANNUAL_OPERATING_REVENUE_AMT COST_OF_GOODS_SOLD_AMT COST_OF_SALES_AMT 
        GENERAL_OTHER_EXPENSE_AMT EBIT_AMT GROSS_PROFIT_AMT NET_INCOME_AMT 
        TOTAL_ASSETS_AMT FIXED_ASSETS_AMT CURRENT_ASSETS_AMT NET_TRADE_REC_AMT 
        INVENTORY_AMT CASH_AND_BANK_BALANCES_AMT TOTAL_DEBT_AMT 
        LONG_TERM_DEBT_AMT SHORT_TERM_DEBT_AMT LIQUIDITY_RT CURRENT_RT 
        CURRENCY_CD EQUITY_CAPITAL_AMT REPORTED_ON_DT RETURN_ON_ASSESTS_AMT 
        IRB_FIN_REPORT_ID IRB_SOURCE_SYSTEM_CD IRB_FIN_REPORT_MONTH 
        IRB_FIN_REPORT_YEAR IRB_FIN_REPORT_STATUS_CD 
        IRB_FIN_REPORT_AUDIT_STATUS_CD IRB_RECLASSIFICATION_FLG 
        IRB_LONG_TERM_RECEIVABLES_AMT IRB_SHORT_TERM_RECEIVABLES_AMT 
        IRB_PROVISIONS_AMT IRB_LONG_TERM_LOAN_AMT IRB_SHORT_TERM_LOAN_AMT 
        IRB_SUBSCRIBED_CAPITAL_AMT IRB_NFD_EBITDA_RT IRB_TOTAL_LEVERAGE_AMT 
        IRB_TOTAL_GEARING_AMT ETL_DELTA_CD PROCESSED_DTTM IRB_FIN_REPORT_RK;

%let tpOut = work.W8DIJEPR;
%let tpOut_connect = ;
%let tpOut_engine = ;
%let tpOut_memtype = DATA;
%let tpOut_options = %nrquote();
%let tpOut_alter = %nrquote();
%let tpOut_path = %nrquote(/Вычисление дельты_OUTPUT0_A5Y50FNE.AO00057H%(WorkTable%));
%let tpOut_type = 1;
%let tpOut_label = %nrquote();
/* List of target columns to keep  */ 
%let tpOut_keep = EXTERNAL_ORG_RK VALID_FROM_DTTM VALID_TO_DTTM NET_SALES_REVENUE_AMT 
        ANNUAL_OPERATING_REVENUE_AMT COST_OF_GOODS_SOLD_AMT COST_OF_SALES_AMT 
        GENERAL_OTHER_EXPENSE_AMT EBIT_AMT GROSS_PROFIT_AMT NET_INCOME_AMT 
        TOTAL_ASSETS_AMT FIXED_ASSETS_AMT CURRENT_ASSETS_AMT NET_TRADE_REC_AMT 
        INVENTORY_AMT CASH_AND_BANK_BALANCES_AMT TOTAL_DEBT_AMT 
        LONG_TERM_DEBT_AMT SHORT_TERM_DEBT_AMT LIQUIDITY_RT CURRENT_RT 
        CURRENCY_CD EQUITY_CAPITAL_AMT REPORTED_ON_DT RETURN_ON_ASSESTS_AMT 
        IRB_FIN_REPORT_ID IRB_SOURCE_SYSTEM_CD IRB_FIN_REPORT_MONTH 
        IRB_FIN_REPORT_YEAR IRB_FIN_REPORT_STATUS_CD 
        IRB_FIN_REPORT_AUDIT_STATUS_CD IRB_RECLASSIFICATION_FLG 
        IRB_LONG_TERM_RECEIVABLES_AMT IRB_SHORT_TERM_RECEIVABLES_AMT 
        IRB_PROVISIONS_AMT IRB_LONG_TERM_LOAN_AMT IRB_SHORT_TERM_LOAN_AMT 
        IRB_SUBSCRIBED_CAPITAL_AMT IRB_NFD_EBITDA_RT IRB_TOTAL_LEVERAGE_AMT 
        IRB_TOTAL_GEARING_AMT ETL_DELTA_CD PROCESSED_DTTM IRB_FIN_REPORT_RK;

%let tpSnup = work.W8DIJG8A;
%let tpSnup_connect = ;
%let tpSnup_engine = ;
%let tpSnup_memtype = DATA;
%let tpSnup_options = %nrquote();
%let tpSnup_alter = %nrquote();
%let tpSnup_path = %nrquote(/Вычисление дельты_OUTPUT1_A5Y50FNE.AO00057I%(WorkTable%));
%let tpSnup_type = 1;
%let tpSnup_label = %nrquote();
/* List of target columns to keep  */ 
%let tpSnup_keep = EXTERNAL_ORG_RK VALID_FROM_DTTM VALID_TO_DTTM IRB_FIN_REPORT_RK 
        IRB_RECLASSIFICATION_FLG ETL_DIGEST1_CD ETL_DIGEST2_CD ETL_DELTA_CD;


%let tpFieldPK = EXTERNAL_ORG_RK IRB_FIN_REPORT_RK IRB_RECLASSIFICATION_FLG;
%let tpFieldPK_count = 3;
%let tpFieldPK0 = 3;
%let tpFieldPK1 = EXTERNAL_ORG_RK;
%let tpFieldPK2 = IRB_FIN_REPORT_RK;
%let tpFieldPK3 = IRB_RECLASSIFICATION_FLG;
%let tpFieldStartDttm = VALID_FROM_DTTM;
%let tpFieldStartDttm_count = 1;
%let tpFieldStartDttm0 = 1;
%let tpFieldStartDttm1 = VALID_FROM_DTTM;
%let tpFieldEndDttm = VALID_TO_DTTM;
%let tpFieldEndDttm_count = 1;
%let tpFieldEndDttm0 = 1;
%let tpFieldEndDttm1 = VALID_TO_DTTM;
%let tpFieldProcessedDttm = PROCESSED_DTTM;
%let tpFieldProcessedDttm_count = 1;
%let tpFieldProcessedDttm0 = 1;
%let tpFieldProcessedDttm1 = PROCESSED_DTTM;
%let tpFieldDummyType = ;
%let tpFieldDummyType_count = 0;
%let tpFieldDummyType0 = 0;
%let tpFieldDigest1 = ;
%let tpFieldDigest1_count = 0;
%let tpFieldDigest10 = 0;
%let tpFieldDigest2 = ;
%let tpFieldDigest2_count = 0;
%let tpFieldDigest20 = 0;
%let tpInSCD1Fields = ;
%let tpInSCD1Fields_count = 0;
%let tpInSCD1Fields0 = 0;
%let tpInSCD1Fields = ;
%let tpInSCD2Fields = ;
%let tpInSCD2Fields_count = 0;
%let tpInSCD2Fields0 = 0;
%let tpInSCD2Fields = ;
%let tpFieldGroup = ;
%let tpFieldGroup_count = 0;
%let tpFieldGroup0 = 0;
%let tpFieldGroup = ;
%let tpFieldTimeFrameDttm = ;
%let tpFieldTimeFrameDttm_count = 0;
%let tpFieldTimeFrameDttm0 = 0;
%let tpTypeV = %nrquote(No);
%let tpCreateNew = %nrquote(Yes);

/* List of target columns to keep  */ 
%let _keep = EXTERNAL_ORG_RK VALID_FROM_DTTM VALID_TO_DTTM NET_SALES_REVENUE_AMT 
        ANNUAL_OPERATING_REVENUE_AMT COST_OF_GOODS_SOLD_AMT COST_OF_SALES_AMT 
        GENERAL_OTHER_EXPENSE_AMT EBIT_AMT GROSS_PROFIT_AMT NET_INCOME_AMT 
        TOTAL_ASSETS_AMT FIXED_ASSETS_AMT CURRENT_ASSETS_AMT NET_TRADE_REC_AMT 
        INVENTORY_AMT CASH_AND_BANK_BALANCES_AMT TOTAL_DEBT_AMT 
        LONG_TERM_DEBT_AMT SHORT_TERM_DEBT_AMT LIQUIDITY_RT CURRENT_RT 
        CURRENCY_CD EQUITY_CAPITAL_AMT REPORTED_ON_DT RETURN_ON_ASSESTS_AMT 
        IRB_FIN_REPORT_ID IRB_SOURCE_SYSTEM_CD IRB_FIN_REPORT_MONTH 
        IRB_FIN_REPORT_YEAR IRB_FIN_REPORT_STATUS_CD 
        IRB_FIN_REPORT_AUDIT_STATUS_CD IRB_RECLASSIFICATION_FLG 
        IRB_LONG_TERM_RECEIVABLES_AMT IRB_SHORT_TERM_RECEIVABLES_AMT 
        IRB_PROVISIONS_AMT IRB_LONG_TERM_LOAN_AMT IRB_SHORT_TERM_LOAN_AMT 
        IRB_SUBSCRIBED_CAPITAL_AMT IRB_NFD_EBITDA_RT IRB_TOTAL_LEVERAGE_AMT 
        IRB_TOTAL_GEARING_AMT ETL_DELTA_CD PROCESSED_DTTM IRB_FIN_REPORT_RK 
        EXTERNAL_ORG_RK VALID_FROM_DTTM VALID_TO_DTTM IRB_FIN_REPORT_RK 
        IRB_RECLASSIFICATION_FLG ETL_DIGEST1_CD ETL_DIGEST2_CD ETL_DELTA_CD;
/* List of target columns to keep  */ 
%let keep = EXTERNAL_ORG_RK VALID_FROM_DTTM VALID_TO_DTTM NET_SALES_REVENUE_AMT 
        ANNUAL_OPERATING_REVENUE_AMT COST_OF_GOODS_SOLD_AMT COST_OF_SALES_AMT 
        GENERAL_OTHER_EXPENSE_AMT EBIT_AMT GROSS_PROFIT_AMT NET_INCOME_AMT 
        TOTAL_ASSETS_AMT FIXED_ASSETS_AMT CURRENT_ASSETS_AMT NET_TRADE_REC_AMT 
        INVENTORY_AMT CASH_AND_BANK_BALANCES_AMT TOTAL_DEBT_AMT 
        LONG_TERM_DEBT_AMT SHORT_TERM_DEBT_AMT LIQUIDITY_RT CURRENT_RT 
        CURRENCY_CD EQUITY_CAPITAL_AMT REPORTED_ON_DT RETURN_ON_ASSESTS_AMT 
        IRB_FIN_REPORT_ID IRB_SOURCE_SYSTEM_CD IRB_FIN_REPORT_MONTH 
        IRB_FIN_REPORT_YEAR IRB_FIN_REPORT_STATUS_CD 
        IRB_FIN_REPORT_AUDIT_STATUS_CD IRB_RECLASSIFICATION_FLG 
        IRB_LONG_TERM_RECEIVABLES_AMT IRB_SHORT_TERM_RECEIVABLES_AMT 
        IRB_PROVISIONS_AMT IRB_LONG_TERM_LOAN_AMT IRB_SHORT_TERM_LOAN_AMT 
        IRB_SUBSCRIBED_CAPITAL_AMT IRB_NFD_EBITDA_RT IRB_TOTAL_LEVERAGE_AMT 
        IRB_TOTAL_GEARING_AMT ETL_DELTA_CD PROCESSED_DTTM IRB_FIN_REPORT_RK 
        EXTERNAL_ORG_RK VALID_FROM_DTTM VALID_TO_DTTM IRB_FIN_REPORT_RK 
        IRB_RECLASSIFICATION_FLG ETL_DIGEST1_CD ETL_DIGEST2_CD ETL_DELTA_CD;
/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_get_delta_scd.sas 3099 2012-09-21 11:08:02Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Создает дельта-наборы для таблицы и ее прошлого состояния
*   по технике SCD1/SCD2.
*   В дельта-набор снэпшота попадают все поля снэпшота + дельта-код.
*
* ПАРАМЕТРЫ:
*   tpIn                   + имя входного набора, порции новых данных
*   tpInSCD1Fields         - список полей для расчета хэш-суммы по SCD1
*                            по умолчанию все ключевые поля (mpFieldPK)
*   tpInSCD2Fields         - список полей для расчета хэш-суммы по SCD2
*                            по умолчанию все поля, за исключением ключевых (mpFieldPK) и временнЫх (mpField*Dttm)
*   tpSnap                 + имя входного набора, текущего состояния
*   tpFieldPK              + список полей первичного ключа, не включает интервальные (tpField*Dttm)
*   tpFieldStartDttm       + имя поля начала временного интервала действия версии
*   tpFieldEndDttm         + имя поля конца временного интервала действия версии
*   tpFieldProcessedDttm   + имя поля даты обновления версии
*   tpFieldDummyType       - имя поля типа дамми
*   tpFieldGroup           - список полей кусочного обновления, например branch_id в пофилиальной загрузке.
*                            Также может использоваться для обновления неполным набором, в этом случае совпадает с mpFieldPK.
*                            По умолчанию не используется
*   tpFieldTimeFrameDttm   - имя поля даты для окна обновления, например transaction_dttm для транзакций.
*                            Если задано, то непришедшие записи закрываются в пределах окна (иначе закрываются все).
*                            По умолчанию не используется
*   tpTypeV                - создавать V-дельту вместо С+N (No - нет, Yes - да).
*                            Если Yes, требует создания поля etl_start_dttm в дельте основной таблицы.
*                            по умолчанию No.
*   tpCreateNew            - создавать первые версии (Yes - да, No - нет)
*                            по умолчанию Yes.
*   tpOut                  + имя выходного набора, дельты mpIn относительно tpSnap
*   tpSnUp                 + имя выходного набора, дельты tpSnap относительно tpSnap
******************************************************************/

%macro transform_get_delta_scd;
   %etl_get_delta_scd (
      mpIn=&tpIn, mpInSCD1Fields=&tpInSCD1Fields, mpInSCD2Fields=&tpInSCD2Fields,
      mpSnap=&tpSnap,
      mpFieldPK=&tpFieldPK,
      mpFieldDummyType=&tpFieldDummyType, mpFieldGroup=&tpFieldGroup, mpFieldTimeFrameDttm=&tpFieldTimeFrameDttm,
      mpTypeV=&tpTypeV, mpCreateNew=&tpCreateNew,
      mpOut=&tpOut, mpSnUp=&tpSnUp,
      mpFieldStartDttm=&tpFieldStartDttm, mpFieldEndDttm=&tpFieldEndDttm, mpFieldProcessedDttm=&tpFieldProcessedDttm,
      mpFieldDigest1=&tpFieldDigest1, mpFieldDigest2=&tpFieldDigest2
   );
%mend transform_get_delta_scd;

%transform_get_delta_scd;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Вычисление дельты по SCD **/

/*==========================================================================* 
 * Step:            Table Loader                          A5Y50FNE.AQ000993 * 
 * Transform:       Table Loader (Version 2.1)                              * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    Вычисление дельты_OUTPUT0 -           A5Y50FNE.AO00057H * 
 *                   work.W8DIJEPR                                          * 
 * Target Table:    EXTERNAL_ORG_FIN_DATA_DELTA -         A569C89V.AE0000K3 * 
 *                   etl_dds.EXTERNAL_ORG_FIN_DATA_DELTA                    * 
 *==========================================================================*/ 

%let transformID = %quote(A5Y50FNE.AQ000993);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.W8DIJEPR); 

%let SYS_SQL_IP_SPEEDO = Y;
%let SYS_SQL_MAPPUTTO = sas_put;
%let SYS_SQLREDUCEPUT = DBMS;
%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

%global etls_tableExist;
%global etls_numIndex;
%global etls_lastTable;
%let etls_tableExist = -1; 
%let etls_numIndex = -1; 
%let etls_lastTable = &SYSLAST; 

/*---- Define load data macro  ----*/ 

/* --------------------------------------------------------------
   Load Technique Selection: Replace - Truncate
   Constraint and index action selections: 'ASIS','ASIS','ASIS','ASIS'
   Additional options selections... 
      Set unmapped to missing on updates: false 
   -------------------------------------------------------------- */
%macro etls_loader;

   %let etls_tableOptions = ;
   
   /*---- Map the columns  ----*/ 
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WIPBTXK;
   quit;
   
   %put %str(NOTE: Mapping columns ...);
   proc sql;
      create view work.WIPBTXK as
         select
            EXTERNAL_ORG_RK   
               format = 14.
               informat = 14.,
            VALID_FROM_DTTM,
            VALID_TO_DTTM,
            NET_SALES_REVENUE_AMT   
               format = 24.5
               informat = 24.5,
            ANNUAL_OPERATING_REVENUE_AMT   
               format = 24.5
               informat = 24.5,
            COST_OF_GOODS_SOLD_AMT   
               format = 24.5
               informat = 24.5,
            COST_OF_SALES_AMT   
               format = 24.5
               informat = 24.5,
            GENERAL_OTHER_EXPENSE_AMT   
               format = 24.5
               informat = 24.5,
            EBIT_AMT   
               format = 24.5
               informat = 24.5,
            GROSS_PROFIT_AMT   
               format = 24.5
               informat = 24.5,
            NET_INCOME_AMT   
               format = 24.5
               informat = 24.5,
            TOTAL_ASSETS_AMT   
               format = 24.5
               informat = 24.5,
            FIXED_ASSETS_AMT   
               format = 24.5
               informat = 24.5,
            CURRENT_ASSETS_AMT   
               format = 24.5
               informat = 24.5,
            NET_TRADE_REC_AMT   
               format = 24.5
               informat = 24.5,
            INVENTORY_AMT   
               format = 24.5
               informat = 24.5,
            CASH_AND_BANK_BALANCES_AMT   
               format = 24.5
               informat = 24.5,
            TOTAL_DEBT_AMT   
               format = 24.5
               informat = 24.5,
            LONG_TERM_DEBT_AMT   
               format = 24.5
               informat = 24.5,
            SHORT_TERM_DEBT_AMT   
               format = 24.5
               informat = 24.5,
            LIQUIDITY_RT,
            CURRENT_RT,
            CURRENCY_CD,
            EQUITY_CAPITAL_AMT   
               format = 24.5
               informat = 24.5,
            REPORTED_ON_DT,
            PROCESSED_DTTM,
            RETURN_ON_ASSESTS_AMT,
            IRB_FIN_REPORT_RK   
               format = 12.
               informat = 12.,
            IRB_FIN_REPORT_ID,
            IRB_SOURCE_SYSTEM_CD,
            IRB_FIN_REPORT_MONTH   
               format = 12.
               informat = 12.,
            IRB_FIN_REPORT_YEAR   
               format = 12.
               informat = 12.,
            IRB_FIN_REPORT_STATUS_CD,
            IRB_FIN_REPORT_AUDIT_STATUS_CD,
            IRB_RECLASSIFICATION_FLG,
            IRB_LONG_TERM_RECEIVABLES_AMT   
               format = 24.5
               informat = 24.5,
            IRB_SHORT_TERM_RECEIVABLES_AMT   
               format = 24.5
               informat = 24.5,
            IRB_PROVISIONS_AMT   
               format = 24.5
               informat = 24.5,
            IRB_LONG_TERM_LOAN_AMT   
               format = 24.5
               informat = 24.5,
            IRB_SHORT_TERM_LOAN_AMT   
               format = 24.5
               informat = 24.5,
            IRB_SUBSCRIBED_CAPITAL_AMT   
               format = 24.5
               informat = 24.5,
            IRB_NFD_EBITDA_RT,
            IRB_TOTAL_LEVERAGE_AMT,
            IRB_TOTAL_GEARING_AMT   
               format = 24.5
               informat = 24.5,
            ETL_DELTA_CD   
               format = $1.
               informat = $1.
      from &etls_lastTable
      ;
   quit;
   
   %let SYSLAST = work.WIPBTXK;
   
   %let etls_lastTable = &SYSLAST; 
   %let etls_tableOptions = ; 
   
   /* Determine if the target table exists  */ 
   %let etls_tableExist = %eval(%sysfunc(exist(etl_dds.EXTERNAL_ORG_FIN_DATA_DELTA, DATA)) or 
         %sysfunc(exist(etl_dds.EXTERNAL_ORG_FIN_DATA_DELTA, VIEW))); 
   
   /*---- Create a new table  ----*/ 
   %if (&etls_tableExist eq 0) %then 
   %do;  /* if table does not exist  */ 
   
      %put %str(NOTE: Creating table ...);
      
      data etl_dds.EXTERNAL_ORG_FIN_DATA_DELTA
              (dbnull = (
                         EXTERNAL_ORG_RK = NO
                         VALID_FROM_DTTM = NO
                         VALID_TO_DTTM = NO
                         NET_SALES_REVENUE_AMT = YES
                         ANNUAL_OPERATING_REVENUE_AMT = YES
                         COST_OF_GOODS_SOLD_AMT = YES
                         COST_OF_SALES_AMT = YES
                         GENERAL_OTHER_EXPENSE_AMT = YES
                         EBIT_AMT = YES
                         GROSS_PROFIT_AMT = YES
                         NET_INCOME_AMT = YES
                         TOTAL_ASSETS_AMT = YES
                         FIXED_ASSETS_AMT = YES
                         CURRENT_ASSETS_AMT = YES
                         NET_TRADE_REC_AMT = YES
                         INVENTORY_AMT = YES
                         CASH_AND_BANK_BALANCES_AMT = YES
                         TOTAL_DEBT_AMT = YES
                         LONG_TERM_DEBT_AMT = YES
                         SHORT_TERM_DEBT_AMT = YES
                         LIQUIDITY_RT = YES
                         CURRENT_RT = YES
                         CURRENCY_CD = YES
                         EQUITY_CAPITAL_AMT = YES
                         REPORTED_ON_DT = YES
                         PROCESSED_DTTM = NO
                         RETURN_ON_ASSESTS_AMT = YES
                         IRB_FIN_REPORT_RK = NO
                         IRB_FIN_REPORT_ID = YES
                         IRB_SOURCE_SYSTEM_CD = YES
                         IRB_FIN_REPORT_MONTH = YES
                         IRB_FIN_REPORT_YEAR = YES
                         IRB_FIN_REPORT_STATUS_CD = YES
                         IRB_FIN_REPORT_AUDIT_STATUS_CD = YES
                         IRB_RECLASSIFICATION_FLG = NO
                         IRB_LONG_TERM_RECEIVABLES_AMT = YES
                         IRB_SHORT_TERM_RECEIVABLES_AMT = YES
                         IRB_PROVISIONS_AMT = YES
                         IRB_LONG_TERM_LOAN_AMT = YES
                         IRB_SHORT_TERM_LOAN_AMT = YES
                         IRB_SUBSCRIBED_CAPITAL_AMT = YES
                         IRB_NFD_EBITDA_RT = YES
                         IRB_TOTAL_LEVERAGE_AMT = YES
                         IRB_TOTAL_GEARING_AMT = YES
                         ETL_DELTA_CD = NO));
         attrib EXTERNAL_ORG_RK length = 8
            format = 14.
            informat = 14.
            label = 'EXTERNAL_ORG_RK'; 
         attrib VALID_FROM_DTTM length = 8
            format = DATETIME20.
            informat = DATETIME20.
            label = 'VALID_FROM_DTTM'; 
         attrib VALID_TO_DTTM length = 8
            format = DATETIME20.
            informat = DATETIME20.
            label = 'VALID_TO_DTTM'; 
         attrib NET_SALES_REVENUE_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'NET_SALES_REVENUE_AMT'; 
         attrib ANNUAL_OPERATING_REVENUE_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'ANNUAL_OPERATING_REVENUE_AMT'; 
         attrib COST_OF_GOODS_SOLD_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'COST_OF_GOODS_SOLD_AMT'; 
         attrib COST_OF_SALES_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'COST_OF_SALES_AMT'; 
         attrib GENERAL_OTHER_EXPENSE_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'GENERAL_OTHER_EXPENSE_AMT'; 
         attrib EBIT_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'EBIT_AMT'; 
         attrib GROSS_PROFIT_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'GROSS_PROFIT_AMT'; 
         attrib NET_INCOME_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'NET_INCOME_AMT'; 
         attrib TOTAL_ASSETS_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'TOTAL_ASSETS_AMT'; 
         attrib FIXED_ASSETS_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'FIXED_ASSETS_AMT'; 
         attrib CURRENT_ASSETS_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'CURRENT_ASSETS_AMT'; 
         attrib NET_TRADE_REC_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'NET_TRADE_REC_AMT'; 
         attrib INVENTORY_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'INVENTORY_AMT'; 
         attrib CASH_AND_BANK_BALANCES_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'CASH_AND_BANK_BALANCES_AMT'; 
         attrib TOTAL_DEBT_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'TOTAL_DEBT_AMT'; 
         attrib LONG_TERM_DEBT_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'LONG_TERM_DEBT_AMT'; 
         attrib SHORT_TERM_DEBT_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'SHORT_TERM_DEBT_AMT'; 
         attrib LIQUIDITY_RT length = 8
            format = 21.7
            informat = 21.7
            label = 'LIQUIDITY_RT'; 
         attrib CURRENT_RT length = 8
            format = 21.7
            informat = 21.7
            label = 'CURRENT_RT'; 
         attrib CURRENCY_CD length = $3
            format = $3.
            informat = $3.
            label = 'CURRENCY_CD'; 
         attrib EQUITY_CAPITAL_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'EQUITY_CAPITAL_AMT'; 
         attrib REPORTED_ON_DT length = 8
            format = DATETIME20.
            informat = DATETIME20.
            label = 'REPORTED_ON_DT'; 
         attrib PROCESSED_DTTM length = 8
            format = DATETIME20.
            informat = DATETIME20.
            label = 'PROCESSED_DTTM'; 
         attrib RETURN_ON_ASSESTS_AMT length = 8
            format = 21.7
            informat = 21.7
            label = 'RETURN_ON_ASSESTS_AMT'; 
         attrib IRB_FIN_REPORT_RK length = 8
            format = 12.
            informat = 12.
            label = 'IRB_FIN_REPORT_RK'; 
         attrib IRB_FIN_REPORT_ID length = $50
            format = $50.
            informat = $50.
            label = 'IRB_FIN_REPORT_ID'; 
         attrib IRB_SOURCE_SYSTEM_CD length = $3
            format = $3.
            informat = $3.
            label = 'IRB_SOURCE_SYSTEM_CD'; 
         attrib IRB_FIN_REPORT_MONTH length = 8
            format = 12.
            informat = 12.
            label = 'IRB_FIN_REPORT_MONTH'; 
         attrib IRB_FIN_REPORT_YEAR length = 8
            format = 12.
            informat = 12.
            label = 'IRB_FIN_REPORT_YEAR'; 
         attrib IRB_FIN_REPORT_STATUS_CD length = $3
            format = $3.
            informat = $3.
            label = 'IRB_FIN_REPORT_STATUS_CD'; 
         attrib IRB_FIN_REPORT_AUDIT_STATUS_CD length = $3
            format = $3.
            informat = $3.
            label = 'IRB_FIN_REPORT_AUDIT_STATUS_CD'; 
         attrib IRB_RECLASSIFICATION_FLG length = $1
            format = $1.
            informat = $1.
            label = 'IRB_RECLASSIFICATION_FLG'; 
         attrib IRB_LONG_TERM_RECEIVABLES_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'IRB_LONG_TERM_RECEIVABLES_AMT'; 
         attrib IRB_SHORT_TERM_RECEIVABLES_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'IRB_SHORT_TERM_RECEIVABLES_AMT'; 
         attrib IRB_PROVISIONS_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'IRB_PROVISIONS_AMT'; 
         attrib IRB_LONG_TERM_LOAN_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'IRB_LONG_TERM_LOAN_AMT'; 
         attrib IRB_SHORT_TERM_LOAN_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'IRB_SHORT_TERM_LOAN_AMT'; 
         attrib IRB_SUBSCRIBED_CAPITAL_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'IRB_SUBSCRIBED_CAPITAL_AMT'; 
         attrib IRB_NFD_EBITDA_RT length = 8
            format = 21.7
            informat = 21.7
            label = 'IRB_NFD_EBITDA_RT'; 
         attrib IRB_TOTAL_LEVERAGE_AMT length = 8
            format = 21.7
            informat = 21.7
            label = 'IRB_TOTAL_LEVERAGE_AMT'; 
         attrib IRB_TOTAL_GEARING_AMT length = 8
            format = 24.5
            informat = 24.5
            label = 'IRB_TOTAL_GEARING_AMT'; 
         attrib ETL_DELTA_CD length = $1
            format = $1.
            informat = $1.
            label = 'ETL_DELTA_CD'; 
         call missing(of _all_);
         stop;
      run;
      
      %rcSet(&syserr); 
      
   %end;  /* if table does not exist  */ 
   
   %else 
   %do;  /* table exists */ 
      /*---- Truncate a table  ----*/ 
      %put %str(NOTE: Truncating table ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_DDS" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            truncate table ETL_DDS.EXTERNAL_ORG_FIN_DATA_DELTA
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit; 
      
      %rcSet(&sqlrc); 
      
   %end; /* table exists */ 
   
   /*---- Append  ----*/ 
   %put %str(NOTE: Appending data ...);
   
   proc append base = etl_dds.EXTERNAL_ORG_FIN_DATA_DELTA 
      data = &etls_lastTable (&etls_tableOptions)  force ; 
    run; 
   
   %rcSet(&syserr); 
   
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WIPBTXK;
   quit;
   
%mend etls_loader;
%etls_loader;



/**  Step end Table Loader **/

/*==========================================================================* 
 * Step:            Table Loader                          A5Y50FNE.AQ000994 * 
 * Transform:       Table Loader (Version 2.1)                              * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    Вычисление дельты_OUTPUT1 -           A5Y50FNE.AO00057I * 
 *                   work.W8DIJG8A                                          * 
 * Target Table:    EXTERNAL_ORG_FIN_DATA_SNUP -          A5Y50FNE.AE0000Q5 * 
 *                   etl_ia.EXTERNAL_ORG_FIN_DATA_SNUP                      * 
 *==========================================================================*/ 

%let transformID = %quote(A5Y50FNE.AQ000994);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.W8DIJG8A); 

%let SYS_SQL_IP_SPEEDO = Y;
%let SYS_SQL_MAPPUTTO = sas_put;
%let SYS_SQLREDUCEPUT = DBMS;
%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

%global etls_tableExist;
%global etls_numIndex;
%global etls_lastTable;
%let etls_tableExist = -1; 
%let etls_numIndex = -1; 
%let etls_lastTable = &SYSLAST; 

/*---- Define load data macro  ----*/ 

/* --------------------------------------------------------------
   Load Technique Selection: Replace - Truncate
   Constraint and index action selections: 'ASIS','ASIS','ASIS','ASIS'
   Additional options selections... 
      Set unmapped to missing on updates: false 
   -------------------------------------------------------------- */
%macro etls_loader;

   %let etls_tableOptions = ;
   
   /*---- Map the columns  ----*/ 
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WIPBU7G;
   quit;
   
   %put %str(NOTE: Mapping columns ...);
   proc sql;
      create view work.WIPBU7G as
         select
            EXTERNAL_ORG_RK   
               format = 14.
               informat = 14.,
            VALID_FROM_DTTM,
            VALID_TO_DTTM,
            IRB_FIN_REPORT_RK   
               format = 11.
               informat = 11.,
            IRB_RECLASSIFICATION_FLG,
            ETL_DIGEST1_CD   
               format = $16.
               informat = $16.,
            ETL_DIGEST2_CD   
               format = $16.
               informat = $16.,
            ETL_DELTA_CD   
               format = $1.
               informat = $1.
      from &etls_lastTable
      ;
   quit;
   
   %let SYSLAST = work.WIPBU7G;
   
   %let etls_lastTable = &SYSLAST; 
   %let etls_tableOptions = ; 
   
   /* Determine if the target table exists  */ 
   %let etls_tableExist = %eval(%sysfunc(exist(etl_ia.EXTERNAL_ORG_FIN_DATA_SNUP, DATA)) or 
         %sysfunc(exist(etl_ia.EXTERNAL_ORG_FIN_DATA_SNUP, VIEW))); 
   
   /*---- Create a new table  ----*/ 
   %if (&etls_tableExist eq 0) %then 
   %do;  /* if table does not exist  */ 
   
      %put %str(NOTE: Creating table ...);
      
      data etl_ia.EXTERNAL_ORG_FIN_DATA_SNUP
              (dbnull = (
                         EXTERNAL_ORG_RK = NO
                         VALID_FROM_DTTM = NO
                         VALID_TO_DTTM = NO
                         IRB_FIN_REPORT_RK = NO
                         IRB_RECLASSIFICATION_FLG = NO
                         ETL_DIGEST1_CD = NO
                         ETL_DIGEST2_CD = NO
                         ETL_DELTA_CD = NO));
         attrib EXTERNAL_ORG_RK length = 8
            format = 14.
            informat = 14.
            label = 'EXTERNAL_ORG_RK'; 
         attrib VALID_FROM_DTTM length = 8
            format = DATETIME20.
            informat = DATETIME20.
            label = 'VALID_FROM_DTTM'; 
         attrib VALID_TO_DTTM length = 8
            format = DATETIME20.
            informat = DATETIME20.
            label = 'VALID_TO_DTTM'; 
         attrib IRB_FIN_REPORT_RK length = 8
            format = 11.
            informat = 11.
            label = 'IRB_FIN_REPORT_RK'; 
         attrib IRB_RECLASSIFICATION_FLG length = $1
            format = $1.
            informat = $1.
            label = 'IRB_RECLASSIFICATION_FLG'; 
         attrib ETL_DIGEST1_CD length = $16
            format = $16.
            informat = $16.
            label = 'ETL_DIGEST1_CD'; 
         attrib ETL_DIGEST2_CD length = $16
            format = $16.
            informat = $16.
            label = 'ETL_DIGEST2_CD'; 
         attrib ETL_DELTA_CD length = $1
            format = $1.
            informat = $1.
            label = 'ETL_DELTA_CD'; 
         call missing(of _all_);
         stop;
      run;
      
      %rcSet(&syserr); 
      
   %end;  /* if table does not exist  */ 
   
   %else 
   %do;  /* table exists */ 
      /*---- Truncate a table  ----*/ 
      %put %str(NOTE: Truncating table ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_IA" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            truncate table ETL_IA.EXTERNAL_ORG_FIN_DATA_SNUP
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit; 
      
      %rcSet(&sqlrc); 
      
   %end; /* table exists */ 
   
   /*---- Append  ----*/ 
   %put %str(NOTE: Appending data ...);
   
   proc append base = etl_ia.EXTERNAL_ORG_FIN_DATA_SNUP 
      data = &etls_lastTable (&etls_tableOptions)  force ; 
    run; 
   
   %rcSet(&syserr); 
   
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WIPBU7G;
   quit;
   
%mend etls_loader;
%etls_loader;



/**  Step end Table Loader **/

/*==========================================================================* 
 * Step:            Завершить модуль                      A5Y50FNE.AQ000995 * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5Y50FNE.AQ000995);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 247 2012-04-03 07:31:10Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;

   /* Продолжаем модуль */
   %job_continue_reg(mpJobType=JOB, mpJobName=&ETLS_JobName., mpPostEvent=N);

   /* Завершаем модуль */
   %job_finish_reg(mpJobType=JOB);

%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);



/**  Job end 062_831_Get_Delta_EXTERNAL_ORG_FIN_DATA_DELTA **/

/* Reset jobid and name */
%let jobID = %quote(A569C89V.AQ0000DX);
%let etls_jobName = %nrquote(090_814_Stream_Ace_DDS);

/**************************************************************************** 
 * Job:             064_110_Get_Delta_Demmy_COUNTERPARTY  A5Y50FNE.AN00012T * 
 *                  _FCC_EXT_DEMMY                                          * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: bravo14                                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DWHDDS_IA/Jobs/064_Get_Delta_Demmy/Counterparty    * 
 *                                                                          * 
 * Server:          SASApp                                A5C46MZY.AQ000002 * 
 *                                                                          * 
 * Source Tables:   COUNTERPARTY_FCC_EXT_SNAP -           A5Y50FNE.AE0000PK * 
 *                   etl_ia.COUNTERPARTY_FCC_EXT_SNAP                       * 
 *                  COUNTERPARTY_EXT_DUMMY -              A5Y50FNE.AE0000PI * 
 *                   etl_ia.COUNTERPARTY_EXT_DUMMY                          * 
 *                  COUNTERPARTY_FCC_EXT_SNAP -           A5Y50FNE.AE0000PK * 
 *                   etl_ia.COUNTERPARTY_FCC_EXT_SNAP                       * 
 * Target Tables:   COUNTERPARTY_FCC_EXT_DEMMY -          A569C89V.AE0000JQ * 
 *                   etl_dds.COUNTERPARTY_FCC_EXT_DEMMY                     * 
 *                  COUNTERPARTY_FCC_EXT_SNUM -           A5Y50FNE.AE0000PL * 
 *                   etl_ia.COUNTERPARTY_FCC_EXT_SNUM                       * 
 *                                                                          * 
 * Generated on:    16 Июль 2013 г. 17:08:10 MSD                            * 
 * Generated by:    sasdwh                                                  * 
 * Version:         SAS Data Integration Studio 4.5                         * 
 ****************************************************************************/ 

/* General macro variables  */ 
%let jobID = %quote(A5Y50FNE.AN00012T);
%let etls_jobName = %nrquote(064_110_Get_Delta_Demmy_COUNTERPARTY_FCC_EXT_DEMMY);
%let etls_userID = %nrquote(sasdwh);


/* Create metadata macro variables */
%let IOMServer      = %nrquote(SASApp);
%let metaPort       = %nrquote(8561);
%let metaServer     = %nrquote(bravo14);

/* Set metadata options */
options metaport       = &metaPort 
        metaserver     = "&metaServer"; 

/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A5Y50FNE.AQ000B7D * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5Y50FNE.AQ000B7D);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_start.sas 1747 2012-08-01 11:26:13Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует начало модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_start;

   /* Продолжаем поток (или создаем новый) */
   %local lmvStreamName;
   %if %sysfunc(sysexist(LSB_JOBNAME)) %then
      %let lmvStreamName = %scan(%sysfunc(sysget(LSB_JOBNAME)), 3, :);
   %else
      %let lmvStreamName = ;

   %job_continue_reg(mpJobType=STREAM, mpJobName=&lmvStreamName, mpPostEvent=N, mpForcedStart=Y);

   /* Для DI, начинаем поток заново, если старый был начат не сегодня */
   %if %length(&lmvStreamName) eq 0 and &STREAM_START_DT ne %sysfunc(today()) %then %do;
      %job_start_reg(mpJobType=STREAM, mpParentJobId=, mpJobName=&lmvStreamName.);
   %end;

   /* Начинаем модуль */
   %job_start_reg(mpJobType=JOB, mpParentJobId=&STREAM_ID, mpJobName=&ETLS_JobName.);

%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Начать модуль **/

/*==========================================================================* 
 * Step:            Обработка дамми перед дельтой         A5Y50FNE.AQ000B7E * 
 * Transform:       Обработка дамми перед дельтой                           * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Tables:   COUNTERPARTY_EXT_DUMMY -              A5Y50FNE.AE0000PI * 
 *                   etl_ia.COUNTERPARTY_EXT_DUMMY                          * 
 *                  COUNTERPARTY_FCC_EXT_SNAP -           A5Y50FNE.AE0000PK * 
 *                   etl_ia.COUNTERPARTY_FCC_EXT_SNAP                       * 
 * Target Table:    дамми перед дельтойtpOut -            A5Y50FNE.AO00068W * 
 *                   work.WZKQNX                                            * 
 *==========================================================================*/ 

%let transformID = %quote(A5Y50FNE.AQ000B7E);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 2; 
%let _INPUT = etl_ia.COUNTERPARTY_EXT_DUMMY;
%let _INPUT_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_IA" 
;
%let _INPUT_engine = ORACLE;
%let _INPUT_memtype = DATA;
%let _INPUT_options = %nrquote();
%let _INPUT_alter = %nrquote();
%let _INPUT_path = %nrquote(/DWH_DWHDDS_IA/Tables/ETL_IA/Counterparty_External/COUNTERPARTY_EXT_DUMMY%(Table%));
%let _INPUT_type = 1;
%let _INPUT_label = %nrquote();

%let tpIn = etl_ia.COUNTERPARTY_EXT_DUMMY;
%let tpIn_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_IA" 
;
%let tpIn_engine = ORACLE;
%let tpIn_memtype = DATA;
%let tpIn_options = %nrquote();
%let tpIn_alter = %nrquote();
%let tpIn_path = %nrquote(/DWH_DWHDDS_IA/Tables/ETL_IA/Counterparty_External/COUNTERPARTY_EXT_DUMMY%(Table%));
%let tpIn_type = 1;
%let tpIn_label = %nrquote();

%let tpSnap = etl_ia.COUNTERPARTY_FCC_EXT_SNAP;
%let tpSnap_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_IA" 
;
%let tpSnap_engine = ORACLE;
%let tpSnap_memtype = DATA;
%let tpSnap_options = %nrquote();
%let tpSnap_alter = %nrquote();
%let tpSnap_path = %nrquote(/DWH_DWHDDS_IA/Tables/ETL_IA/Counterparty_External/COUNTERPARTY_FCC_EXT_SNAP%(Table%));
%let tpSnap_type = 1;
%let tpSnap_label = %nrquote();

%let _OUTPUT_count = 1; 
%let _OUTPUT = work.WZKQNX;
%let _OUTPUT_connect = ;
%let _OUTPUT_engine = ;
%let _OUTPUT_memtype = VIEW;
%let _OUTPUT_options = %nrquote();
%let _OUTPUT_alter = %nrquote();
%let _OUTPUT_path = %nrquote(/дамми перед дельтойtpOut_A5Y50FNE.AO00068W%(WorkTable%));
%let _OUTPUT_type = 1;
%let _OUTPUT_label = %nrquote();
/* List of target columns to keep  */ 
%let _OUTPUT_keep = COUNTERPARTY_RK VALID_FROM_DTTM VALID_TO_DTTM CUSTOMER_RK 
        INTERNAL_ORG_RK NON_CUSTOMER_EXTERNAL_ORG_RK 
        NON_CUSTOMER_EXTERNAL_IND_RK SOURCE_SYSTEM_CD COUNTERPARTY_ID 
        COUNTERPARTY_GROUP_ID COUNTERPARTY_GROUP_PARENT_FLG 
        COUNTERPARTY_TYPE_CD REGLTRY_COUNTERPARTY_TYPE_CD ECONOMIC_SECTOR_CD 
        HIGH_RISK_CATEGORY_FLG COUNTERPARTY_LEGAL_TYPE_CD 
        CORE_MKT_PARTICIPANT_FLG RISK_WEIGHT_PCT COUNTERPARTY_RLN_TYPE_CD 
        EFFECTIVE_FROM_DTTM EFFECTIVE_TO_DTTM DOMESTIC_CURRENCY_CD 
        ELIG_CCR_CENTRAL_CPTY_FLG CPTY_INTERNAL_RPT_CATEGORY_CD PROCESSED_DTTM 
        IRB_DUMMY_TYPE_CD IRB_SRC_ID IRB_TECHNICAL_FLG 
        IRB_COUNTERPARTY_STATUS_CD;

%let tpOut = work.WZKQNX;
%let tpOut_connect = ;
%let tpOut_engine = ;
%let tpOut_memtype = VIEW;
%let tpOut_options = %nrquote();
%let tpOut_alter = %nrquote();
%let tpOut_path = %nrquote(/дамми перед дельтойtpOut_A5Y50FNE.AO00068W%(WorkTable%));
%let tpOut_type = 1;
%let tpOut_label = %nrquote();
/* List of target columns to keep  */ 
%let tpOut_keep = COUNTERPARTY_RK VALID_FROM_DTTM VALID_TO_DTTM CUSTOMER_RK 
        INTERNAL_ORG_RK NON_CUSTOMER_EXTERNAL_ORG_RK 
        NON_CUSTOMER_EXTERNAL_IND_RK SOURCE_SYSTEM_CD COUNTERPARTY_ID 
        COUNTERPARTY_GROUP_ID COUNTERPARTY_GROUP_PARENT_FLG 
        COUNTERPARTY_TYPE_CD REGLTRY_COUNTERPARTY_TYPE_CD ECONOMIC_SECTOR_CD 
        HIGH_RISK_CATEGORY_FLG COUNTERPARTY_LEGAL_TYPE_CD 
        CORE_MKT_PARTICIPANT_FLG RISK_WEIGHT_PCT COUNTERPARTY_RLN_TYPE_CD 
        EFFECTIVE_FROM_DTTM EFFECTIVE_TO_DTTM DOMESTIC_CURRENCY_CD 
        ELIG_CCR_CENTRAL_CPTY_FLG CPTY_INTERNAL_RPT_CATEGORY_CD PROCESSED_DTTM 
        IRB_DUMMY_TYPE_CD IRB_SRC_ID IRB_TECHNICAL_FLG 
        IRB_COUNTERPARTY_STATUS_CD;


proc datasets lib=work nolist nowarn memtype = (data view);
   delete WZKQNX;
quit;

%let tpFieldsPK = COUNTERPARTY_RK;
%let tpFieldsPK_count = 1;
%let tpFieldsPK0 = 1;
%let tpFieldsPK1 = COUNTERPARTY_RK;
%let tpSnapshotCd = %nrquote(FCC);

/* List of target columns to keep  */ 
%let _keep = COUNTERPARTY_RK VALID_FROM_DTTM VALID_TO_DTTM CUSTOMER_RK 
        INTERNAL_ORG_RK NON_CUSTOMER_EXTERNAL_ORG_RK 
        NON_CUSTOMER_EXTERNAL_IND_RK SOURCE_SYSTEM_CD COUNTERPARTY_ID 
        COUNTERPARTY_GROUP_ID COUNTERPARTY_GROUP_PARENT_FLG 
        COUNTERPARTY_TYPE_CD REGLTRY_COUNTERPARTY_TYPE_CD ECONOMIC_SECTOR_CD 
        HIGH_RISK_CATEGORY_FLG COUNTERPARTY_LEGAL_TYPE_CD 
        CORE_MKT_PARTICIPANT_FLG RISK_WEIGHT_PCT COUNTERPARTY_RLN_TYPE_CD 
        EFFECTIVE_FROM_DTTM EFFECTIVE_TO_DTTM DOMESTIC_CURRENCY_CD 
        ELIG_CCR_CENTRAL_CPTY_FLG CPTY_INTERNAL_RPT_CATEGORY_CD PROCESSED_DTTM 
        IRB_DUMMY_TYPE_CD IRB_SRC_ID IRB_TECHNICAL_FLG 
        IRB_COUNTERPARTY_STATUS_CD;
/* List of target columns to keep  */ 
%let keep = COUNTERPARTY_RK VALID_FROM_DTTM VALID_TO_DTTM CUSTOMER_RK 
        INTERNAL_ORG_RK NON_CUSTOMER_EXTERNAL_ORG_RK 
        NON_CUSTOMER_EXTERNAL_IND_RK SOURCE_SYSTEM_CD COUNTERPARTY_ID 
        COUNTERPARTY_GROUP_ID COUNTERPARTY_GROUP_PARENT_FLG 
        COUNTERPARTY_TYPE_CD REGLTRY_COUNTERPARTY_TYPE_CD ECONOMIC_SECTOR_CD 
        HIGH_RISK_CATEGORY_FLG COUNTERPARTY_LEGAL_TYPE_CD 
        CORE_MKT_PARTICIPANT_FLG RISK_WEIGHT_PCT COUNTERPARTY_RLN_TYPE_CD 
        EFFECTIVE_FROM_DTTM EFFECTIVE_TO_DTTM DOMESTIC_CURRENCY_CD 
        ELIG_CCR_CENTRAL_CPTY_FLG CPTY_INTERNAL_RPT_CATEGORY_CD PROCESSED_DTTM 
        IRB_DUMMY_TYPE_CD IRB_SRC_ID IRB_TECHNICAL_FLG 
        IRB_COUNTERPARTY_STATUS_CD;
/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_get_delta_dummy.sas 3967 2012-11-07 09:14:43Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Транзакционно:
*     - отбирает дамми-записи с указанным кодом снэпшота, отсутствующие в снэпшоте, из входной таблицы с дамми-записями
*     - удаляет в ней записи, присутствующие в снэпшоте
*   Требуется, чтобы обе таблицы были в одной библиотеке, например ETL_IA.
*   Поле ETL_SNAPSHOT_CD, если есть, не включается в выходную таблицу.
*
* ПАРАМЕТРЫ:
*   tpIn                   +  имя входного набора, порции дамми-записей
*   tpFieldsPK             +  поля первичного ключа
*   tpSrcSystem            +  код источника
*   tpSnap                 +  имя входного набора, текущего состояния целевого справочника
*   tpOut                  +  имя выходного набора, уникальных и не существующих в снэпшоте дамми-записей
*   tpSnapshotCd           -  код снэпшота, для которого отбираются дамми-записи.   Должен быть пустым,
*                             если поле ETL_SNAPSHOT_CD отсутствует во входном наборе, иначе наоборот.
******************************************************************/

%macro transform_get_delta_dummy;

   /* Временные переменные */
   %local lmvLibref lmvInName lmvSnapName;
   %member_names (mpTable=&tpIn,   mpLibrefNameKey=lmvLibref, mpMemberNameKey=lmvInName);
   %member_names (mpTable=&tpSnap, mpLibrefNameKey=lmvLibref, mpMemberNameKey=lmvSnapName);

   %local lmvInFields lmvOutFields;
   %let lmvInFields  = %member_vars (&tpIn, mpDlm=%str( ));
   %let lmvOutFields = %member_vars (&tpIn, mpDlm=%str(, ), mpDrop=ETL_SNAPSHOT_CD);

   /* Проверяем корректность аргументов */
   %local lmvSnapField lmvSnapValue;
   %let lmvSnapField    =  %eval( %index(%upcase(&lmvInFields), ETL_SNAPSHOT_CD) gt 0);
   %let lmvSnapValue    =  %eval( %length(&tpSnapshotCd) gt 0);
   %if &lmvSnapField ne &lmvSnapValue %then %do;
      %job_event_reg (mpEventTypeCode=ILLEGAL_ARGUMENT,
         mpEventValues=%bquote(ETL_SNAPSHOT_CD: Field present=&lmvSnapField, Value requested=&lmvSnapValue) );
      %return;
   %end;

   %etl_transaction_start (mpLoginSet=&lmvLibref);

      /* Удаляем из входной таблицы записи, присутствующие в снэпшоте */
      execute by oracle (
         delete from &lmvInName tIn
         where exists (
            select 1 from &lmvSnapName tSnap
            where
               %member_vars_expand(&tpFieldsPK, tIn.{} = tSnap.{}, %str( and ))
         )
      );
      %error_check (mpStepType=SQL_PASS_THROUGH);
      %etl_rcSet(&STEP_RC);

      /* Отбираем из входной таблицы оставшиеся дамми-записи (возможно, сдублированные) */
      create table &tpOut as
      select * from connection to oracle (
         select &lmvOutFields from &lmvInName
       %if %length(&tpSnapshotCd) ne 0 %then %do;
         where ETL_SNAPSHOT_CD = %oracle_string(&tpSnapshotCd)
       %end;
      );
      %error_check (mpStepType=SQL_PASS_THROUGH);
      %etl_rcSet(&STEP_RC);

   %etl_transaction_finish;

   /* Избавляемся от потенциальных дублей */
   proc sort data=&tpOut nodupkey;
      by &tpFieldsPK;
   run;

%mend transform_get_delta_dummy;

%transform_get_delta_dummy;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Обработка дамми перед дельтой **/

/*==========================================================================* 
 * Step:            Extract                               A5Y50FNE.AQ000B7F * 
 * Transform:       Extract                                                 * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    дамми перед дельтойtpOut -            A5Y50FNE.AO00068W * 
 *                   work.WZKQNX                                            * 
 * Target Table:    Extract - work.WS2VPJ7                A5Y50FNE.AO00068X * 
 *==========================================================================*/ 

%let transformID = %quote(A5Y50FNE.AQ000B7F);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.WZKQNX); 

%let SYS_SQL_IP_SPEEDO = Y;
%let SYS_SQL_MAPPUTTO = sas_put;
%let SYS_SQLREDUCEPUT = DBMS;
%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

/*---- Map the columns  ----*/ 
proc datasets lib = work nolist nowarn memtype = (data view);
   delete WS2VPJ7;
quit;

%put %str(NOTE: Mapping columns ...);
proc sql;
   create view work.WS2VPJ7 as
      select
         COUNTERPARTY_RK   
            format = 11.
            informat = 11.,
         VALID_FROM_DTTM,
         VALID_TO_DTTM,
         CUSTOMER_RK   
            format = 11.
            informat = 11.,
         INTERNAL_ORG_RK   
            format = 11.
            informat = 11.,
         NON_CUSTOMER_EXTERNAL_ORG_RK   
            format = 11.
            informat = 11.,
         NON_CUSTOMER_EXTERNAL_IND_RK   
            format = 11.
            informat = 11.,
         SOURCE_SYSTEM_CD,
         COUNTERPARTY_ID,
         COUNTERPARTY_GROUP_ID,
         COUNTERPARTY_GROUP_PARENT_FLG,
         COUNTERPARTY_TYPE_CD,
         REGLTRY_COUNTERPARTY_TYPE_CD,
         ECONOMIC_SECTOR_CD,
         HIGH_RISK_CATEGORY_FLG,
         COUNTERPARTY_LEGAL_TYPE_CD,
         CORE_MKT_PARTICIPANT_FLG,
         RISK_WEIGHT_PCT   
            format = 11.4
            informat = 11.4,
         COUNTERPARTY_RLN_TYPE_CD,
         EFFECTIVE_FROM_DTTM,
         EFFECTIVE_TO_DTTM,
         DOMESTIC_CURRENCY_CD,
         ELIG_CCR_CENTRAL_CPTY_FLG,
         CPTY_INTERNAL_RPT_CATEGORY_CD,
         PROCESSED_DTTM,
         IRB_DUMMY_TYPE_CD,
         IRB_SRC_ID,
         IRB_TECHNICAL_FLG,
         IRB_COUNTERPARTY_STATUS_CD,
         (&ETL_D0_ID) as ETL_BRANCH_ID length = 3
            format = $3.
            informat = $3.
            label = 'ETL_BRANCH_ID',
         ('CRP') as ETL_CPY_GROUP_CD length = 3
            label = 'Группа клиентов'
   from &SYSLAST
   ;
quit;

%let SYSLAST = work.WS2VPJ7;

%global etls_sql_pushDown;
%let etls_sql_pushDown = &sys_sql_ip_all;

%rcSet(&sqlrc); 



/**  Step end Extract **/

/*==========================================================================* 
 * Step:            Вычисление дельты по SCD              A5Y50FNE.AQ000B7G * 
 * Transform:       Вычисление дельты по SCD                                * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Tables:   Extract - work.WS2VPJ7                A5Y50FNE.AO00068X * 
 *                  COUNTERPARTY_FCC_EXT_SNAP -           A5Y50FNE.AE0000PK * 
 *                   etl_ia.COUNTERPARTY_FCC_EXT_SNAP                       * 
 * Target Tables:   Вычисление дельты_OUTPUT0 -           A5Y50FNE.AO00068Y * 
 *                   work.W8DIJEPR                                          * 
 *                  Вычисление дельты по SCDtpSnup -      A5Y50FNE.AO00068Z * 
 *                   work.W8DIJG8A                                          * 
 *==========================================================================*/ 

%let transformID = %quote(A5Y50FNE.AQ000B7G);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 2; 
%let _INPUT = work.WS2VPJ7;
%let _INPUT_connect = ;
%let _INPUT_engine = ;
%let _INPUT_memtype = VIEW;
%let _INPUT_options = %nrquote();
%let _INPUT_alter = %nrquote();
%let _INPUT_path = %nrquote(/Extract_A5Y50FNE.AO00068X%(WorkTable%));
%let _INPUT_type = 1;
%let _INPUT_label = %nrquote();

%let tpIn = work.WS2VPJ7;
%let tpIn_connect = ;
%let tpIn_engine = ;
%let tpIn_memtype = VIEW;
%let tpIn_options = %nrquote();
%let tpIn_alter = %nrquote();
%let tpIn_path = %nrquote(/Extract_A5Y50FNE.AO00068X%(WorkTable%));
%let tpIn_type = 1;
%let tpIn_label = %nrquote();

%let tpSnap = etl_ia.COUNTERPARTY_FCC_EXT_SNAP;
%let tpSnap_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_IA" 
;
%let tpSnap_engine = ORACLE;
%let tpSnap_memtype = DATA;
%let tpSnap_options = %nrquote();
%let tpSnap_alter = %nrquote();
%let tpSnap_path = %nrquote(/DWH_DWHDDS_IA/Tables/ETL_IA/Counterparty_External/COUNTERPARTY_FCC_EXT_SNAP%(Table%));
%let tpSnap_type = 1;
%let tpSnap_label = %nrquote();

%let _OUTPUT_count = 2; 
%let _OUTPUT = work.W8DIJEPR;
%let _OUTPUT_connect = ;
%let _OUTPUT_engine = ;
%let _OUTPUT_memtype = DATA;
%let _OUTPUT_options = %nrquote();
%let _OUTPUT_alter = %nrquote();
%let _OUTPUT_path = %nrquote(/Вычисление дельты_OUTPUT0_A5Y50FNE.AO00068Y%(WorkTable%));
%let _OUTPUT_type = 1;
%let _OUTPUT_label = %nrquote();
/* List of target columns to keep  */ 
%let _OUTPUT_keep = COUNTERPARTY_RK VALID_FROM_DTTM VALID_TO_DTTM CUSTOMER_RK 
        INTERNAL_ORG_RK NON_CUSTOMER_EXTERNAL_ORG_RK 
        NON_CUSTOMER_EXTERNAL_IND_RK SOURCE_SYSTEM_CD COUNTERPARTY_ID 
        COUNTERPARTY_GROUP_ID COUNTERPARTY_GROUP_PARENT_FLG 
        COUNTERPARTY_TYPE_CD REGLTRY_COUNTERPARTY_TYPE_CD ECONOMIC_SECTOR_CD 
        HIGH_RISK_CATEGORY_FLG COUNTERPARTY_LEGAL_TYPE_CD 
        CORE_MKT_PARTICIPANT_FLG RISK_WEIGHT_PCT COUNTERPARTY_RLN_TYPE_CD 
        EFFECTIVE_FROM_DTTM EFFECTIVE_TO_DTTM DOMESTIC_CURRENCY_CD 
        ELIG_CCR_CENTRAL_CPTY_FLG CPTY_INTERNAL_RPT_CATEGORY_CD PROCESSED_DTTM 
        IRB_DUMMY_TYPE_CD ETL_BRANCH_ID IRB_SRC_ID IRB_TECHNICAL_FLG 
        IRB_COUNTERPARTY_STATUS_CD ETL_DELTA_CD;

%let tpOut = work.W8DIJEPR;
%let tpOut_connect = ;
%let tpOut_engine = ;
%let tpOut_memtype = DATA;
%let tpOut_options = %nrquote();
%let tpOut_alter = %nrquote();
%let tpOut_path = %nrquote(/Вычисление дельты_OUTPUT0_A5Y50FNE.AO00068Y%(WorkTable%));
%let tpOut_type = 1;
%let tpOut_label = %nrquote();
/* List of target columns to keep  */ 
%let tpOut_keep = COUNTERPARTY_RK VALID_FROM_DTTM VALID_TO_DTTM CUSTOMER_RK 
        INTERNAL_ORG_RK NON_CUSTOMER_EXTERNAL_ORG_RK 
        NON_CUSTOMER_EXTERNAL_IND_RK SOURCE_SYSTEM_CD COUNTERPARTY_ID 
        COUNTERPARTY_GROUP_ID COUNTERPARTY_GROUP_PARENT_FLG 
        COUNTERPARTY_TYPE_CD REGLTRY_COUNTERPARTY_TYPE_CD ECONOMIC_SECTOR_CD 
        HIGH_RISK_CATEGORY_FLG COUNTERPARTY_LEGAL_TYPE_CD 
        CORE_MKT_PARTICIPANT_FLG RISK_WEIGHT_PCT COUNTERPARTY_RLN_TYPE_CD 
        EFFECTIVE_FROM_DTTM EFFECTIVE_TO_DTTM DOMESTIC_CURRENCY_CD 
        ELIG_CCR_CENTRAL_CPTY_FLG CPTY_INTERNAL_RPT_CATEGORY_CD PROCESSED_DTTM 
        IRB_DUMMY_TYPE_CD ETL_BRANCH_ID IRB_SRC_ID IRB_TECHNICAL_FLG 
        IRB_COUNTERPARTY_STATUS_CD ETL_DELTA_CD;

%let tpSnup = work.W8DIJG8A;
%let tpSnup_connect = ;
%let tpSnup_engine = ;
%let tpSnup_memtype = DATA;
%let tpSnup_options = %nrquote();
%let tpSnup_alter = %nrquote();
%let tpSnup_path = %nrquote(/Вычисление дельты по SCDtpSnup_A5Y50FNE.AO00068Z%(WorkTable%));
%let tpSnup_type = 1;
%let tpSnup_label = %nrquote();
/* List of target columns to keep  */ 
%let tpSnup_keep = COUNTERPARTY_RK VALID_FROM_DTTM VALID_TO_DTTM COUNTERPARTY_TYPE_CD 
        ETL_BRANCH_ID ETL_DIGEST1_CD ETL_DIGEST2_CD IRB_DUMMY_TYPE_CD 
        ETL_CPY_GROUP_CD ETL_DELTA_CD;


%let tpFieldPK = COUNTERPARTY_RK;
%let tpFieldPK_count = 1;
%let tpFieldPK0 = 1;
%let tpFieldPK1 = COUNTERPARTY_RK;
%let tpFieldStartDttm = VALID_FROM_DTTM;
%let tpFieldStartDttm_count = 1;
%let tpFieldStartDttm0 = 1;
%let tpFieldStartDttm1 = VALID_FROM_DTTM;
%let tpFieldEndDttm = VALID_TO_DTTM;
%let tpFieldEndDttm_count = 1;
%let tpFieldEndDttm0 = 1;
%let tpFieldEndDttm1 = VALID_TO_DTTM;
%let tpFieldProcessedDttm = PROCESSED_DTTM;
%let tpFieldProcessedDttm_count = 1;
%let tpFieldProcessedDttm0 = 1;
%let tpFieldProcessedDttm1 = PROCESSED_DTTM;
%let tpFieldDummyType = IRB_DUMMY_TYPE_CD;
%let tpFieldDummyType_count = 1;
%let tpFieldDummyType0 = 1;
%let tpFieldDummyType1 = IRB_DUMMY_TYPE_CD;
%let tpFieldDigest1 = ;
%let tpFieldDigest1_count = 0;
%let tpFieldDigest10 = 0;
%let tpFieldDigest2 = ;
%let tpFieldDigest2_count = 0;
%let tpFieldDigest20 = 0;
%let tpInSCD1Fields = ;
%let tpInSCD1Fields_count = 0;
%let tpInSCD1Fields0 = 0;
%let tpInSCD1Fields = ;
%let tpInSCD2Fields = ;
%let tpInSCD2Fields_count = 0;
%let tpInSCD2Fields0 = 0;
%let tpInSCD2Fields = ;
%let tpFieldGroup = ETL_CPY_GROUP_CD ETL_BRANCH_ID COUNTERPARTY_RK;
%let tpFieldGroup_count = 3;
%let tpFieldGroup0 = 3;
%let tpFieldGroup1 = ETL_CPY_GROUP_CD;
%let tpFieldGroup2 = ETL_BRANCH_ID;
%let tpFieldGroup3 = COUNTERPARTY_RK;
%let tpFieldTimeFrameDttm = ;
%let tpFieldTimeFrameDttm_count = 0;
%let tpFieldTimeFrameDttm0 = 0;
%let tpTypeV = %nrquote(No);
%let tpCreateNew = %nrquote(Yes);

/* List of target columns to keep  */ 
%let _keep = COUNTERPARTY_RK VALID_FROM_DTTM VALID_TO_DTTM CUSTOMER_RK 
        INTERNAL_ORG_RK NON_CUSTOMER_EXTERNAL_ORG_RK 
        NON_CUSTOMER_EXTERNAL_IND_RK SOURCE_SYSTEM_CD COUNTERPARTY_ID 
        COUNTERPARTY_GROUP_ID COUNTERPARTY_GROUP_PARENT_FLG 
        COUNTERPARTY_TYPE_CD REGLTRY_COUNTERPARTY_TYPE_CD ECONOMIC_SECTOR_CD 
        HIGH_RISK_CATEGORY_FLG COUNTERPARTY_LEGAL_TYPE_CD 
        CORE_MKT_PARTICIPANT_FLG RISK_WEIGHT_PCT COUNTERPARTY_RLN_TYPE_CD 
        EFFECTIVE_FROM_DTTM EFFECTIVE_TO_DTTM DOMESTIC_CURRENCY_CD 
        ELIG_CCR_CENTRAL_CPTY_FLG CPTY_INTERNAL_RPT_CATEGORY_CD PROCESSED_DTTM 
        IRB_DUMMY_TYPE_CD ETL_BRANCH_ID IRB_SRC_ID IRB_TECHNICAL_FLG 
        IRB_COUNTERPARTY_STATUS_CD ETL_DELTA_CD COUNTERPARTY_RK 
        VALID_FROM_DTTM VALID_TO_DTTM COUNTERPARTY_TYPE_CD ETL_BRANCH_ID 
        ETL_DIGEST1_CD ETL_DIGEST2_CD IRB_DUMMY_TYPE_CD ETL_CPY_GROUP_CD 
        ETL_DELTA_CD;
/* List of target columns to keep  */ 
%let keep = COUNTERPARTY_RK VALID_FROM_DTTM VALID_TO_DTTM CUSTOMER_RK 
        INTERNAL_ORG_RK NON_CUSTOMER_EXTERNAL_ORG_RK 
        NON_CUSTOMER_EXTERNAL_IND_RK SOURCE_SYSTEM_CD COUNTERPARTY_ID 
        COUNTERPARTY_GROUP_ID COUNTERPARTY_GROUP_PARENT_FLG 
        COUNTERPARTY_TYPE_CD REGLTRY_COUNTERPARTY_TYPE_CD ECONOMIC_SECTOR_CD 
        HIGH_RISK_CATEGORY_FLG COUNTERPARTY_LEGAL_TYPE_CD 
        CORE_MKT_PARTICIPANT_FLG RISK_WEIGHT_PCT COUNTERPARTY_RLN_TYPE_CD 
        EFFECTIVE_FROM_DTTM EFFECTIVE_TO_DTTM DOMESTIC_CURRENCY_CD 
        ELIG_CCR_CENTRAL_CPTY_FLG CPTY_INTERNAL_RPT_CATEGORY_CD PROCESSED_DTTM 
        IRB_DUMMY_TYPE_CD ETL_BRANCH_ID IRB_SRC_ID IRB_TECHNICAL_FLG 
        IRB_COUNTERPARTY_STATUS_CD ETL_DELTA_CD COUNTERPARTY_RK 
        VALID_FROM_DTTM VALID_TO_DTTM COUNTERPARTY_TYPE_CD ETL_BRANCH_ID 
        ETL_DIGEST1_CD ETL_DIGEST2_CD IRB_DUMMY_TYPE_CD ETL_CPY_GROUP_CD 
        ETL_DELTA_CD;
/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_get_delta_scd.sas 3099 2012-09-21 11:08:02Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Создает дельта-наборы для таблицы и ее прошлого состояния
*   по технике SCD1/SCD2.
*   В дельта-набор снэпшота попадают все поля снэпшота + дельта-код.
*
* ПАРАМЕТРЫ:
*   tpIn                   + имя входного набора, порции новых данных
*   tpInSCD1Fields         - список полей для расчета хэш-суммы по SCD1
*                            по умолчанию все ключевые поля (mpFieldPK)
*   tpInSCD2Fields         - список полей для расчета хэш-суммы по SCD2
*                            по умолчанию все поля, за исключением ключевых (mpFieldPK) и временнЫх (mpField*Dttm)
*   tpSnap                 + имя входного набора, текущего состояния
*   tpFieldPK              + список полей первичного ключа, не включает интервальные (tpField*Dttm)
*   tpFieldStartDttm       + имя поля начала временного интервала действия версии
*   tpFieldEndDttm         + имя поля конца временного интервала действия версии
*   tpFieldProcessedDttm   + имя поля даты обновления версии
*   tpFieldDummyType       - имя поля типа дамми
*   tpFieldGroup           - список полей кусочного обновления, например branch_id в пофилиальной загрузке.
*                            Также может использоваться для обновления неполным набором, в этом случае совпадает с mpFieldPK.
*                            По умолчанию не используется
*   tpFieldTimeFrameDttm   - имя поля даты для окна обновления, например transaction_dttm для транзакций.
*                            Если задано, то непришедшие записи закрываются в пределах окна (иначе закрываются все).
*                            По умолчанию не используется
*   tpTypeV                - создавать V-дельту вместо С+N (No - нет, Yes - да).
*                            Если Yes, требует создания поля etl_start_dttm в дельте основной таблицы.
*                            по умолчанию No.
*   tpCreateNew            - создавать первые версии (Yes - да, No - нет)
*                            по умолчанию Yes.
*   tpOut                  + имя выходного набора, дельты mpIn относительно tpSnap
*   tpSnUp                 + имя выходного набора, дельты tpSnap относительно tpSnap
******************************************************************/

%macro transform_get_delta_scd;
   %etl_get_delta_scd (
      mpIn=&tpIn, mpInSCD1Fields=&tpInSCD1Fields, mpInSCD2Fields=&tpInSCD2Fields,
      mpSnap=&tpSnap,
      mpFieldPK=&tpFieldPK,
      mpFieldDummyType=&tpFieldDummyType, mpFieldGroup=&tpFieldGroup, mpFieldTimeFrameDttm=&tpFieldTimeFrameDttm,
      mpTypeV=&tpTypeV, mpCreateNew=&tpCreateNew,
      mpOut=&tpOut, mpSnUp=&tpSnUp,
      mpFieldStartDttm=&tpFieldStartDttm, mpFieldEndDttm=&tpFieldEndDttm, mpFieldProcessedDttm=&tpFieldProcessedDttm,
      mpFieldDigest1=&tpFieldDigest1, mpFieldDigest2=&tpFieldDigest2
   );
%mend transform_get_delta_scd;

%transform_get_delta_scd;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Вычисление дельты по SCD **/

/*==========================================================================* 
 * Step:            Table Loader                          A5Y50FNE.AQ000B7H * 
 * Transform:       Table Loader (Version 2.1)                              * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    Вычисление дельты_OUTPUT0 -           A5Y50FNE.AO00068Y * 
 *                   work.W8DIJEPR                                          * 
 * Target Table:    COUNTERPARTY_FCC_EXT_DEMMY -          A569C89V.AE0000JQ * 
 *                   etl_dds.COUNTERPARTY_FCC_EXT_DEMMY                     * 
 *==========================================================================*/ 

%let transformID = %quote(A5Y50FNE.AQ000B7H);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.W8DIJEPR); 

%let SYS_SQL_IP_SPEEDO = Y;
%let SYS_SQL_MAPPUTTO = sas_put;
%let SYS_SQLREDUCEPUT = DBMS;
%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

%global etls_tableExist;
%global etls_numIndex;
%global etls_lastTable;
%let etls_tableExist = -1; 
%let etls_numIndex = -1; 
%let etls_lastTable = &SYSLAST; 

/*---- Define load data macro  ----*/ 

/* --------------------------------------------------------------
   Load Technique Selection: Replace - Truncate
   Constraint and index action selections: 'INIT','ASIS','ASIS','ASIS'
   Additional options selections... 
      Set unmapped to missing on updates: false 
   -------------------------------------------------------------- */
%macro etls_loader;

   %let etls_tableOptions = ;
   
   /*---- Map the columns  ----*/ 
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WIPBWDH;
   quit;
   
   %put %str(NOTE: Mapping columns ...);
   proc sql;
      create view work.WIPBWDH as
         select
            COUNTERPARTY_RK   
               format = 12.
               informat = 12.,
            VALID_FROM_DTTM,
            VALID_TO_DTTM,
            CUSTOMER_RK   
               format = 12.
               informat = 12.,
            INTERNAL_ORG_RK   
               format = 12.
               informat = 12.,
            NON_CUSTOMER_EXTERNAL_ORG_RK   
               format = 12.
               informat = 12.,
            NON_CUSTOMER_EXTERNAL_IND_RK   
               format = 12.
               informat = 12.,
            SOURCE_SYSTEM_CD,
            COUNTERPARTY_ID,
            COUNTERPARTY_GROUP_ID,
            COUNTERPARTY_GROUP_PARENT_FLG,
            COUNTERPARTY_TYPE_CD,
            REGLTRY_COUNTERPARTY_TYPE_CD,
            ECONOMIC_SECTOR_CD,
            HIGH_RISK_CATEGORY_FLG,
            COUNTERPARTY_LEGAL_TYPE_CD,
            CORE_MKT_PARTICIPANT_FLG,
            RISK_WEIGHT_PCT   
               format = 12.4
               informat = 12.4,
            COUNTERPARTY_RLN_TYPE_CD,
            EFFECTIVE_FROM_DTTM,
            EFFECTIVE_TO_DTTM,
            DOMESTIC_CURRENCY_CD,
            ELIG_CCR_CENTRAL_CPTY_FLG,
            CPTY_INTERNAL_RPT_CATEGORY_CD,
            PROCESSED_DTTM,
            IRB_SRC_ID,
            IRB_TECHNICAL_FLG,
            IRB_COUNTERPARTY_STATUS_CD,
            IRB_DUMMY_TYPE_CD,
            ETL_DELTA_CD   
               format = $1.
               informat = $1.
      from &etls_lastTable
      ;
   quit;
   
   %let SYSLAST = work.WIPBWDH;
   
   %let etls_lastTable = &SYSLAST; 
   %let etls_tableOptions = ; 
   
   /* Determine if the target table exists  */ 
   %let etls_tableExist = %eval(%sysfunc(exist(etl_dds.COUNTERPARTY_FCC_EXT_DEMMY, DATA)) or 
         %sysfunc(exist(etl_dds.COUNTERPARTY_FCC_EXT_DEMMY, VIEW))); 
   
   /*---- Create a new table  ----*/ 
   %if (&etls_tableExist eq 0) %then 
   %do;  /* if table does not exist  */ 
   
      %put %str(NOTE: Creating table ...);
      
      data etl_dds.COUNTERPARTY_FCC_EXT_DEMMY
              (dbnull = (
                         COUNTERPARTY_RK = NO
                         VALID_FROM_DTTM = NO
                         VALID_TO_DTTM = NO
                         CUSTOMER_RK = YES
                         INTERNAL_ORG_RK = YES
                         NON_CUSTOMER_EXTERNAL_ORG_RK = YES
                         NON_CUSTOMER_EXTERNAL_IND_RK = YES
                         SOURCE_SYSTEM_CD = YES
                         COUNTERPARTY_ID = YES
                         COUNTERPARTY_GROUP_ID = YES
                         COUNTERPARTY_GROUP_PARENT_FLG = YES
                         COUNTERPARTY_TYPE_CD = YES
                         REGLTRY_COUNTERPARTY_TYPE_CD = YES
                         ECONOMIC_SECTOR_CD = YES
                         HIGH_RISK_CATEGORY_FLG = YES
                         COUNTERPARTY_LEGAL_TYPE_CD = YES
                         CORE_MKT_PARTICIPANT_FLG = YES
                         RISK_WEIGHT_PCT = YES
                         COUNTERPARTY_RLN_TYPE_CD = YES
                         EFFECTIVE_FROM_DTTM = YES
                         EFFECTIVE_TO_DTTM = YES
                         DOMESTIC_CURRENCY_CD = YES
                         ELIG_CCR_CENTRAL_CPTY_FLG = YES
                         CPTY_INTERNAL_RPT_CATEGORY_CD = YES
                         PROCESSED_DTTM = NO
                         IRB_SRC_ID = YES
                         IRB_TECHNICAL_FLG = YES
                         IRB_COUNTERPARTY_STATUS_CD = YES
                         IRB_DUMMY_TYPE_CD = YES
                         ETL_DELTA_CD = NO));
         attrib COUNTERPARTY_RK length = 8
            format = 12.
            informat = 12.
            label = 'COUNTERPARTY_RK'; 
         attrib VALID_FROM_DTTM length = 8
            format = DATETIME20.
            informat = DATETIME20.
            label = 'VALID_FROM_DTTM'; 
         attrib VALID_TO_DTTM length = 8
            format = DATETIME20.
            informat = DATETIME20.
            label = 'VALID_TO_DTTM'; 
         attrib CUSTOMER_RK length = 8
            format = 12.
            informat = 12.
            label = 'CUSTOMER_RK'; 
         attrib INTERNAL_ORG_RK length = 8
            format = 12.
            informat = 12.
            label = 'INTERNAL_ORG_RK'; 
         attrib NON_CUSTOMER_EXTERNAL_ORG_RK length = 8
            format = 12.
            informat = 12.
            label = 'NON_CUSTOMER_EXTERNAL_ORG_RK'; 
         attrib NON_CUSTOMER_EXTERNAL_IND_RK length = 8
            format = 12.
            informat = 12.
            label = 'NON_CUSTOMER_EXTERNAL_IND_RK'; 
         attrib SOURCE_SYSTEM_CD length = $3
            format = $3.
            informat = $3.
            label = 'SOURCE_SYSTEM_CD'; 
         attrib COUNTERPARTY_ID length = $32
            format = $32.
            informat = $32.
            label = 'COUNTERPARTY_ID'; 
         attrib COUNTERPARTY_GROUP_ID length = $32
            format = $32.
            informat = $32.
            label = 'COUNTERPARTY_GROUP_ID'; 
         attrib COUNTERPARTY_GROUP_PARENT_FLG length = $1
            format = $1.
            informat = $1.
            label = 'COUNTERPARTY_GROUP_PARENT_FLG'; 
         attrib COUNTERPARTY_TYPE_CD length = $3
            format = $3.
            informat = $3.
            label = 'COUNTERPARTY_TYPE_CD'; 
         attrib REGLTRY_COUNTERPARTY_TYPE_CD length = $3
            format = $3.
            informat = $3.
            label = 'REGLTRY_COUNTERPARTY_TYPE_CD'; 
         attrib ECONOMIC_SECTOR_CD length = $3
            format = $3.
            informat = $3.
            label = 'ECONOMIC_SECTOR_CD'; 
         attrib HIGH_RISK_CATEGORY_FLG length = $1
            format = $1.
            informat = $1.
            label = 'HIGH_RISK_CATEGORY_FLG'; 
         attrib COUNTERPARTY_LEGAL_TYPE_CD length = $3
            format = $3.
            informat = $3.
            label = 'COUNTERPARTY_LEGAL_TYPE_CD'; 
         attrib CORE_MKT_PARTICIPANT_FLG length = $1
            format = $1.
            informat = $1.
            label = 'CORE_MKT_PARTICIPANT_FLG'; 
         attrib RISK_WEIGHT_PCT length = 8
            format = 12.4
            informat = 12.4
            label = 'RISK_WEIGHT_PCT'; 
         attrib COUNTERPARTY_RLN_TYPE_CD length = $3
            format = $3.
            informat = $3.
            label = 'COUNTERPARTY_RLN_TYPE_CD'; 
         attrib EFFECTIVE_FROM_DTTM length = 8
            format = DATETIME20.
            informat = DATETIME20.
            label = 'EFFECTIVE_FROM_DTTM'; 
         attrib EFFECTIVE_TO_DTTM length = 8
            format = DATETIME20.
            informat = DATETIME20.
            label = 'EFFECTIVE_TO_DTTM'; 
         attrib DOMESTIC_CURRENCY_CD length = $3
            format = $3.
            informat = $3.
            label = 'DOMESTIC_CURRENCY_CD'; 
         attrib ELIG_CCR_CENTRAL_CPTY_FLG length = $1
            format = $1.
            informat = $1.
            label = 'ELIG_CCR_CENTRAL_CPTY_FLG'; 
         attrib CPTY_INTERNAL_RPT_CATEGORY_CD length = $3
            format = $3.
            informat = $3.
            label = 'CPTY_INTERNAL_RPT_CATEGORY_CD'; 
         attrib PROCESSED_DTTM length = 8
            format = DATETIME20.
            informat = DATETIME20.
            label = 'PROCESSED_DTTM'; 
         attrib IRB_SRC_ID length = $20
            format = $20.
            informat = $20.
            label = 'IRB_SRC_ID'; 
         attrib IRB_TECHNICAL_FLG length = $1
            format = $1.
            informat = $1.
            label = 'IRB_TECHNICAL_FLG'; 
         attrib IRB_COUNTERPARTY_STATUS_CD length = $3
            format = $3.
            informat = $3.
            label = 'IRB_COUNTERPARTY_STATUS_CD'; 
         attrib IRB_DUMMY_TYPE_CD length = $3
            format = $3.
            informat = $3.
            label = 'IRB_DUMMY_TYPE_CD'; 
         attrib ETL_DELTA_CD length = $1
            format = $1.
            informat = $1.
            label = 'ETL_DELTA_CD'; 
         call missing(of _all_);
         stop;
      run;
      
      %rcSet(&syserr); 
      
      /*---- Create the integrity constraints for a table  ----*/ 
      %put %str(NOTE: Creating integrity constraints ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_DDS" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            alter table ETL_DDS.COUNTERPARTY_FCC_EXT_DEMMY      
               add primary key (COUNTERPARTY_RK, 
                                 VALID_FROM_DTTM, 
                                 ETL_DELTA_CD)
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit;
      
      %rcSet(&sqlrc); 
      
   %end;  /* if table does not exist  */ 
   
   %else 
   %do;  /* table exists */ 
      /*---- Truncate a table  ----*/ 
      %put %str(NOTE: Truncating table ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_DDS" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            truncate table ETL_DDS.COUNTERPARTY_FCC_EXT_DEMMY
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit; 
      
      %rcSet(&sqlrc); 
      
   %end; /* table exists */ 
   
   /*---- Append  ----*/ 
   %put %str(NOTE: Appending data ...);
   
   proc append base = etl_dds.COUNTERPARTY_FCC_EXT_DEMMY 
      data = &etls_lastTable (&etls_tableOptions)  force ; 
    run; 
   
   %rcSet(&syserr); 
   
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WIPBWDH;
   quit;
   
%mend etls_loader;
%etls_loader;



/**  Step end Table Loader **/

/*==========================================================================* 
 * Step:            Table Loader                          A5Y50FNE.AQ000B7I * 
 * Transform:       Table Loader (Version 2.1)                              * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    Вычисление дельты по SCDtpSnup -      A5Y50FNE.AO00068Z * 
 *                   work.W8DIJG8A                                          * 
 * Target Table:    COUNTERPARTY_FCC_EXT_SNUM -           A5Y50FNE.AE0000PL * 
 *                   etl_ia.COUNTERPARTY_FCC_EXT_SNUM                       * 
 *==========================================================================*/ 

%let transformID = %quote(A5Y50FNE.AQ000B7I);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.W8DIJG8A); 

%let SYS_SQL_IP_SPEEDO = Y;
%let SYS_SQL_MAPPUTTO = sas_put;
%let SYS_SQLREDUCEPUT = DBMS;
%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

%global etls_tableExist;
%global etls_numIndex;
%global etls_lastTable;
%let etls_tableExist = -1; 
%let etls_numIndex = -1; 
%let etls_lastTable = &SYSLAST; 

/*---- Define load data macro  ----*/ 

/* --------------------------------------------------------------
   Load Technique Selection: Replace - Truncate
   Constraint and index action selections: 'INIT','ASIS','ASIS','ASIS'
   Additional options selections... 
      Set unmapped to missing on updates: false 
   -------------------------------------------------------------- */
%macro etls_loader;

   %let etls_tableOptions = ;
   
   /*---- Map the columns  ----*/ 
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WIPBWSJ;
   quit;
   
   %put %str(NOTE: Mapping columns ...);
   proc sql;
      create view work.WIPBWSJ as
         select
            COUNTERPARTY_RK,
            VALID_FROM_DTTM,
            VALID_TO_DTTM,
            COUNTERPARTY_TYPE_CD,
            ETL_BRANCH_ID,
            ETL_DIGEST1_CD,
            ETL_DIGEST2_CD,
            IRB_DUMMY_TYPE_CD,
            ETL_CPY_GROUP_CD   
               format = $3.
               informat = $3.,
            ETL_DELTA_CD
      from &etls_lastTable
      ;
   quit;
   
   %let SYSLAST = work.WIPBWSJ;
   
   %let etls_lastTable = &SYSLAST; 
   %let etls_tableOptions = ; 
   
   /* Determine if the target table exists  */ 
   %let etls_tableExist = %eval(%sysfunc(exist(etl_ia.COUNTERPARTY_FCC_EXT_SNUM, DATA)) or 
         %sysfunc(exist(etl_ia.COUNTERPARTY_FCC_EXT_SNUM, VIEW))); 
   
   /*---- Create a new table  ----*/ 
   %if (&etls_tableExist eq 0) %then 
   %do;  /* if table does not exist  */ 
   
      %put %str(NOTE: Creating table ...);
      
      data etl_ia.COUNTERPARTY_FCC_EXT_SNUM
              (dbnull = (
                         COUNTERPARTY_RK = NO
                         VALID_FROM_DTTM = NO
                         VALID_TO_DTTM = YES
                         COUNTERPARTY_TYPE_CD = NO
                         ETL_BRANCH_ID = YES
                         ETL_DIGEST1_CD = YES
                         ETL_DIGEST2_CD = YES
                         IRB_DUMMY_TYPE_CD = YES
                         ETL_CPY_GROUP_CD = NO
                         ETL_DELTA_CD = NO));
         attrib COUNTERPARTY_RK length = 8
            format = 13.
            informat = 13.
            label = 'COUNTERPARTY_RK'; 
         attrib VALID_FROM_DTTM length = 8
            format = DATETIME20.
            informat = DATETIME20.
            label = 'VALID_FROM_DTTM'; 
         attrib VALID_TO_DTTM length = 8
            format = DATETIME20.
            informat = DATETIME20.
            label = 'VALID_TO_DTTM'; 
         attrib COUNTERPARTY_TYPE_CD length = $3
            format = $3.
            informat = $3.
            label = 'COUNTERPARTY_TYPE_CD'; 
         attrib ETL_BRANCH_ID length = $3
            format = $3.
            informat = $3.
            label = 'ETL_BRANCH_ID'; 
         attrib ETL_DIGEST1_CD length = $16
            format = $16.
            informat = $16.
            label = 'ETL_DIGEST1_CD'; 
         attrib ETL_DIGEST2_CD length = $16
            format = $16.
            informat = $16.
            label = 'ETL_DIGEST2_CD'; 
         attrib IRB_DUMMY_TYPE_CD length = $3
            format = $3.
            informat = $3.
            label = 'IRB_DUMMY_TYPE_CD'; 
         attrib ETL_CPY_GROUP_CD length = $3
            format = $3.
            informat = $3.
            label = 'ETL_CPY_GROUP_CD'; 
         attrib ETL_DELTA_CD length = $1
            format = $1.
            informat = $1.
            label = 'ETL_DELTA_CD'; 
         call missing(of _all_);
         stop;
      run;
      
      %rcSet(&syserr); 
      
      /*---- Create the integrity constraints for a table  ----*/ 
      %put %str(NOTE: Creating integrity constraints ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_IA" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            alter table ETL_IA.COUNTERPARTY_FCC_EXT_SNUM      
               add primary key (COUNTERPARTY_RK, 
                                 VALID_FROM_DTTM, 
                                 ETL_DELTA_CD)
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit;
      
      %rcSet(&sqlrc); 
      
   %end;  /* if table does not exist  */ 
   
   %else 
   %do;  /* table exists */ 
      /*---- Truncate a table  ----*/ 
      %put %str(NOTE: Truncating table ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_IA" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            truncate table ETL_IA.COUNTERPARTY_FCC_EXT_SNUM
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit; 
      
      %rcSet(&sqlrc); 
      
   %end; /* table exists */ 
   
   /*---- Append  ----*/ 
   %put %str(NOTE: Appending data ...);
   
   proc append base = etl_ia.COUNTERPARTY_FCC_EXT_SNUM 
      data = &etls_lastTable (&etls_tableOptions)  force ; 
    run; 
   
   %rcSet(&syserr); 
   
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WIPBWSJ;
   quit;
   
%mend etls_loader;
%etls_loader;



/**  Step end Table Loader **/

/*==========================================================================* 
 * Step:            Завершить модуль                      A5Y50FNE.AQ000B7J * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5Y50FNE.AQ000B7J);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 247 2012-04-03 07:31:10Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;

   /* Продолжаем модуль */
   %job_continue_reg(mpJobType=JOB, mpJobName=&ETLS_JobName., mpPostEvent=N);

   /* Завершаем модуль */
   %job_finish_reg(mpJobType=JOB);

%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);



/**  Job end 064_110_Get_Delta_Demmy_COUNTERPARTY_FCC_EXT_DEMMY **/

/* Reset jobid and name */
%let jobID = %quote(A569C89V.AQ0000DX);
%let etls_jobName = %nrquote(090_814_Stream_Ace_DDS);

/**************************************************************************** 
 * Job:             081_911_Commit_Ace_Reference          A569C89V.AQ00009G * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: bravo14                                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DWHDDS_DDS/Jobs/08x_DDS/081_Commit_Changes         * 
 *                                                                          * 
 * Server:          SASApp                                A5C46MZY.AQ000002 * 
 *                                                                          * 
 * Source Tables:   EXTERNAL_ORG_FIN_DATA_DELTA -         A569C89V.AE0000K3 * 
 *                   etl_dds.EXTERNAL_ORG_FIN_DATA_DELTA                    * 
 *                  EXTERNAL_ORG_FIN_DATA_SNUP -          A5Y50FNE.AE0000Q5 * 
 *                   etl_ia.EXTERNAL_ORG_FIN_DATA_SNUP                      * 
 * Target Tables:   EXTERNAL_ORG_FINANCIAL_DATA -         A569C89V.AE0000FI * 
 *                   dwh_dds.EXTERNAL_ORG_FINANCIAL_DATA                    * 
 *                  EXTERNAL_ORG_FIN_DATA_SNAP -          A5Y50FNE.AE0000Q4 * 
 *                   etl_ia.EXTERNAL_ORG_FIN_DATA_SNAP                      * 
 *                                                                          * 
 * Generated on:    16 Июль 2013 г. 17:08:11 MSD                            * 
 * Generated by:    sasdwh                                                  * 
 * Version:         SAS Data Integration Studio 4.5                         * 
 ****************************************************************************/ 

/* General macro variables  */ 
%let jobID = %quote(A569C89V.AQ00009G);
%let etls_jobName = %nrquote(081_911_Commit_Ace_Reference);
%let etls_userID = %nrquote(sasdwh);


/* Create metadata macro variables */
%let IOMServer      = %nrquote(SASApp);
%let metaPort       = %nrquote(8561);
%let metaServer     = %nrquote(bravo14);

/* Set metadata options */
options metaport       = &metaPort 
        metaserver     = "&metaServer"; 

/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A569C89V.AS0005M7 * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A569C89V.AS0005M7);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_start.sas 1747 2012-08-01 11:26:13Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует начало модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_start;

   /* Продолжаем поток (или создаем новый) */
   %local lmvStreamName;
   %if %sysfunc(sysexist(LSB_JOBNAME)) %then
      %let lmvStreamName = %scan(%sysfunc(sysget(LSB_JOBNAME)), 3, :);
   %else
      %let lmvStreamName = ;

   %job_continue_reg(mpJobType=STREAM, mpJobName=&lmvStreamName, mpPostEvent=N, mpForcedStart=Y);

   /* Для DI, начинаем поток заново, если старый был начат не сегодня */
   %if %length(&lmvStreamName) eq 0 and &STREAM_START_DT ne %sysfunc(today()) %then %do;
      %job_start_reg(mpJobType=STREAM, mpParentJobId=, mpJobName=&lmvStreamName.);
   %end;

   /* Начинаем модуль */
   %job_start_reg(mpJobType=JOB, mpParentJobId=&STREAM_ID, mpJobName=&ETLS_JobName.);

%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Начать модуль **/

/*==========================================================================* 
 * Step:            Обновить DDS - начало                 A569C89V.AS0005M8 * 
 * Transform:       Транзакция DDS - начало                                 * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A569C89V.AS0005M8);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_update_dds_start.sas 572 2012-05-15 11:18:25Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Начинает транзакцию по обновлению DDS от имени пользователя ETL_DDS.
*   Последующие шаги должны работать в режиме SQL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%etl_transaction_start (mpLoginSet=ETL_DDS);



%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Обновить DDS - начало **/

/*==========================================================================* 
 * Step:            Обновить DDS                          A569C89V.AS0005M9 * 
 * Transform:       Обновить DDS                                            * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    EXTERNAL_ORG_FIN_DATA_DELTA -         A569C89V.AE0000K3 * 
 *                   etl_dds.EXTERNAL_ORG_FIN_DATA_DELTA                    * 
 * Target Table:    EXTERNAL_ORG_FINANCIAL_DATA -         A569C89V.AE0000FI * 
 *                   dwh_dds.EXTERNAL_ORG_FINANCIAL_DATA                    * 
 *==========================================================================*/ 

%let transformID = %quote(A569C89V.AS0005M9);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(etl_dds.EXTERNAL_ORG_FIN_DATA_DELTA); 

%let _INPUT_count = 1; 
%let _INPUT = etl_dds.EXTERNAL_ORG_FIN_DATA_DELTA;
%let _INPUT_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_DDS" 
;
%let _INPUT_engine = ORACLE;
%let _INPUT_memtype = DATA;
%let _INPUT_options = %nrquote();
%let _INPUT_alter = %nrquote();
%let _INPUT_path = %nrquote(/DWH_DWHDDS_DDS/Tables/ETL_DDS/Counterparty/EXTERNAL_ORG_FIN_DATA_DELTA%(Table%));
%let _INPUT_type = 1;
%let _INPUT_label = %nrquote();

%let tpIn = etl_dds.EXTERNAL_ORG_FIN_DATA_DELTA;
%let tpIn_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_DDS" 
;
%let tpIn_engine = ORACLE;
%let tpIn_memtype = DATA;
%let tpIn_options = %nrquote();
%let tpIn_alter = %nrquote();
%let tpIn_path = %nrquote(/DWH_DWHDDS_DDS/Tables/ETL_DDS/Counterparty/EXTERNAL_ORG_FIN_DATA_DELTA%(Table%));
%let tpIn_type = 1;
%let tpIn_label = %nrquote();

%let _OUTPUT_count = 1; 
%let _OUTPUT = dwh_dds.EXTERNAL_ORG_FINANCIAL_DATA;
%let _OUTPUT_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _OUTPUT_engine = ORACLE;
%let _OUTPUT_memtype = DATA;
%let _OUTPUT_options = %nrquote();
%let _OUTPUT_alter = %nrquote();
%let _OUTPUT_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/EXTERNAL_ORG_FINANCIAL_DATA%(Table%));
%let _OUTPUT_type = 1;
%let _OUTPUT_label = %nrquote();
/* List of target columns to keep  */ 
%let _OUTPUT_keep = EXTERNAL_ORG_RK VALID_FROM_DTTM VALID_TO_DTTM ANNUAL_REVENUE_AMT 
        REVENUE_GROWTH_AMT GROSS_ANNUAL_SALES_AMT NET_SALES_REVENUE_AMT 
        ANNUAL_OPERATING_REVENUE_AMT CAGR_OPERATING_REVENUE_AMT 
        NON_OPERATING_REVENUE_AMT COST_OF_GOODS_SOLD_AMT COST_OF_SALES_AMT 
        OPBDIT_AMT ANNUAL_INTEREST_CHARGES_AMT INTEREST_FINANCE_CHARGES_AMT 
        TOTAL_TERM_DEBT_P_AND_I_AMT LONG_TERM_DEBT_INT_EXPENSE_AMT 
        DEPREC_NON_CASH_CHARGES_AMT OWNER_COMP_DRAWING_AMT 
        GENERAL_OTHER_EXPENSE_AMT EBIT_AMT PRIOR_PERIOD_ADJUSTMENTS_NO 
        EXTRA_ORDINARY_INCOME_AMT EXTRA_ORDINARY_EXPENSES_AMT GROSS_PROFIT_AMT 
        PBT_AMT PAT_AMT ACCRETION_TO_RESERVES_AMT NET_CASH_ACCRUALS_AMT 
        FREE_CASH_FLOW_AMT GROSS_OPERATING_MARGINS_AMT NET_INCOME_AMT 
        GROSS_MARGIN_AMT NET_MARGIN_AMT RETURN_ON_CAPITAL_EMPLOYED_AMT 
        RETURN_ON_EQUITY_AMT DEBT_SERVICE_COVERAGE_RT 
        AVG_DEBT_SERVICE_COVERAGE_RT INTEREST_COVERAGE_RT 
        AVERAGE_INTEREST_COVERAGE_RT RENT_AMT TOTAL_ASSETS_AMT 
        FIXED_ASSETS_AMT CURRENT_ASSETS_AMT NET_TRADE_REC_AMT INVENTORY_AMT 
        OTHER_CURRENT_ASSETS_AMT MARKETABLE_SECURITIES_AMT 
        ASSETS_SECURITIZED_AMT CASH_AND_BANK_BALANCES_AMT 
        INTANGIBLE_ASSETS_AMT REVALUATION_RESERVES_AMT OTHER_ASSETS_AMT 
        TOTAL_LIABILITY_AMT TOTAL_DEBT_AMT LONG_TERM_DEBT_AMT 
        LONG_TERM_DEBT_EXPO_AMT SHORT_TERM_DEBT_AMT SHORT_TERM_DEBT_EXPO_AMT 
        SECURED_DEBT_AMT UNSECURED_DEBT_AMT NOTES_PAYABLE_AMT 
        TRADE_PAYABLE_AMT SHORT_TERM_PAYABLES_AMT CURRENT_LTD_AMT 
        OTHER_CURRENT_LIABILITY_AMT TOTAL_CURRENT_LIABILITY_AMT 
        OTHER_LIABILITY_AMT CONTINGENT_LIABILITIES_AMT TRADE_CREDITORS_AMT 
        FOREIGN_CURR_EXPOS_TRANS_AMT FOREIGN_CURR_TRANS_EXPOS_AMT 
        FOREIGN_OTHER_EXPOS_AMT CHARGED_OFF_AMT CURRENT_VALUE_SECURITY_AMT 
        NET_WORTH_AMT ADJUSTED_NET_WORTH_AMT LIQUIDITY_RT CURRENT_RT 
        TOTAL_EQUITY_NET_WORTH_AMT RETAINED_EARNINGS_AMT ASSET_BETA_NO 
        MARKET_CAPITALIZATION_AMT MARKET_CAPITALIZATION_DT DIVIDEND_PAYOUT_AMT 
        DIVIDEND_PAYOUT_RATIO_PCT EARNINGS_PER_SHARE_AMT 
        PRICE_EARNINGS_RATIO_RT DEBT_EQUITY_RT LT_DEBT_EQUITY_RT 
        ST_DEBT_EQUITY_RT DAYS_PAYABLE_RT DAYS_RECEIVABLE_RT 
        DAYS_FINISHED_GOODS_INV_RT DAYS_WORK_IN_PROG_GOODS_RT 
        KNOWN_BANK_RELATIONS_CNT CURRENCY_CD EQUITY_CAPITAL_AMT 
        CREDIT_BUREAU_SCORE_NO CREDIT_BUREAU_SCORE_DT TAX_BRACKET_CD 
        LIQUID_NET_WORTH_AMT BANKRUPTCY_FILED_DT BANKRUPTCY_STATUS_CD 
        REPORTED_ON_DT EFFECTIVE_FROM_DTTM EFFECTIVE_TO_DTTM 
        WORKING_CAPITAL_AMT CASH_FLOW_AMT INTEREST_INCOME_AMT 
        RETURN_ON_ASSESTS_AMT PROCESSED_DTTM IRB_FIN_REPORT_RK 
        IRB_FIN_REPORT_ID IRB_SOURCE_SYSTEM_CD IRB_FIN_REPORT_MONTH 
        IRB_FIN_REPORT_YEAR IRB_FIN_REPORT_STATUS_CD 
        IRB_FIN_REPORT_AUDIT_STATUS_CD IRB_RECLASSIFICATION_FLG 
        IRB_LONG_TERM_RECEIVABLES_AMT IRB_SHORT_TERM_RECEIVABLES_AMT 
        IRB_PROVISIONS_AMT IRB_LONG_TERM_LOAN_AMT IRB_SHORT_TERM_LOAN_AMT 
        IRB_SUBSCRIBED_CAPITAL_AMT IRB_NFD_EBITDA_RT IRB_TOTAL_LEVERAGE_AMT 
        IRB_TOTAL_GEARING_AMT;

%let tpOut = dwh_dds.EXTERNAL_ORG_FINANCIAL_DATA;
%let tpOut_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let tpOut_engine = ORACLE;
%let tpOut_memtype = DATA;
%let tpOut_options = %nrquote();
%let tpOut_alter = %nrquote();
%let tpOut_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/EXTERNAL_ORG_FINANCIAL_DATA%(Table%));
%let tpOut_type = 1;
%let tpOut_label = %nrquote();
/* List of target columns to keep  */ 
%let tpOut_keep = EXTERNAL_ORG_RK VALID_FROM_DTTM VALID_TO_DTTM ANNUAL_REVENUE_AMT 
        REVENUE_GROWTH_AMT GROSS_ANNUAL_SALES_AMT NET_SALES_REVENUE_AMT 
        ANNUAL_OPERATING_REVENUE_AMT CAGR_OPERATING_REVENUE_AMT 
        NON_OPERATING_REVENUE_AMT COST_OF_GOODS_SOLD_AMT COST_OF_SALES_AMT 
        OPBDIT_AMT ANNUAL_INTEREST_CHARGES_AMT INTEREST_FINANCE_CHARGES_AMT 
        TOTAL_TERM_DEBT_P_AND_I_AMT LONG_TERM_DEBT_INT_EXPENSE_AMT 
        DEPREC_NON_CASH_CHARGES_AMT OWNER_COMP_DRAWING_AMT 
        GENERAL_OTHER_EXPENSE_AMT EBIT_AMT PRIOR_PERIOD_ADJUSTMENTS_NO 
        EXTRA_ORDINARY_INCOME_AMT EXTRA_ORDINARY_EXPENSES_AMT GROSS_PROFIT_AMT 
        PBT_AMT PAT_AMT ACCRETION_TO_RESERVES_AMT NET_CASH_ACCRUALS_AMT 
        FREE_CASH_FLOW_AMT GROSS_OPERATING_MARGINS_AMT NET_INCOME_AMT 
        GROSS_MARGIN_AMT NET_MARGIN_AMT RETURN_ON_CAPITAL_EMPLOYED_AMT 
        RETURN_ON_EQUITY_AMT DEBT_SERVICE_COVERAGE_RT 
        AVG_DEBT_SERVICE_COVERAGE_RT INTEREST_COVERAGE_RT 
        AVERAGE_INTEREST_COVERAGE_RT RENT_AMT TOTAL_ASSETS_AMT 
        FIXED_ASSETS_AMT CURRENT_ASSETS_AMT NET_TRADE_REC_AMT INVENTORY_AMT 
        OTHER_CURRENT_ASSETS_AMT MARKETABLE_SECURITIES_AMT 
        ASSETS_SECURITIZED_AMT CASH_AND_BANK_BALANCES_AMT 
        INTANGIBLE_ASSETS_AMT REVALUATION_RESERVES_AMT OTHER_ASSETS_AMT 
        TOTAL_LIABILITY_AMT TOTAL_DEBT_AMT LONG_TERM_DEBT_AMT 
        LONG_TERM_DEBT_EXPO_AMT SHORT_TERM_DEBT_AMT SHORT_TERM_DEBT_EXPO_AMT 
        SECURED_DEBT_AMT UNSECURED_DEBT_AMT NOTES_PAYABLE_AMT 
        TRADE_PAYABLE_AMT SHORT_TERM_PAYABLES_AMT CURRENT_LTD_AMT 
        OTHER_CURRENT_LIABILITY_AMT TOTAL_CURRENT_LIABILITY_AMT 
        OTHER_LIABILITY_AMT CONTINGENT_LIABILITIES_AMT TRADE_CREDITORS_AMT 
        FOREIGN_CURR_EXPOS_TRANS_AMT FOREIGN_CURR_TRANS_EXPOS_AMT 
        FOREIGN_OTHER_EXPOS_AMT CHARGED_OFF_AMT CURRENT_VALUE_SECURITY_AMT 
        NET_WORTH_AMT ADJUSTED_NET_WORTH_AMT LIQUIDITY_RT CURRENT_RT 
        TOTAL_EQUITY_NET_WORTH_AMT RETAINED_EARNINGS_AMT ASSET_BETA_NO 
        MARKET_CAPITALIZATION_AMT MARKET_CAPITALIZATION_DT DIVIDEND_PAYOUT_AMT 
        DIVIDEND_PAYOUT_RATIO_PCT EARNINGS_PER_SHARE_AMT 
        PRICE_EARNINGS_RATIO_RT DEBT_EQUITY_RT LT_DEBT_EQUITY_RT 
        ST_DEBT_EQUITY_RT DAYS_PAYABLE_RT DAYS_RECEIVABLE_RT 
        DAYS_FINISHED_GOODS_INV_RT DAYS_WORK_IN_PROG_GOODS_RT 
        KNOWN_BANK_RELATIONS_CNT CURRENCY_CD EQUITY_CAPITAL_AMT 
        CREDIT_BUREAU_SCORE_NO CREDIT_BUREAU_SCORE_DT TAX_BRACKET_CD 
        LIQUID_NET_WORTH_AMT BANKRUPTCY_FILED_DT BANKRUPTCY_STATUS_CD 
        REPORTED_ON_DT EFFECTIVE_FROM_DTTM EFFECTIVE_TO_DTTM 
        WORKING_CAPITAL_AMT CASH_FLOW_AMT INTEREST_INCOME_AMT 
        RETURN_ON_ASSESTS_AMT PROCESSED_DTTM IRB_FIN_REPORT_RK 
        IRB_FIN_REPORT_ID IRB_SOURCE_SYSTEM_CD IRB_FIN_REPORT_MONTH 
        IRB_FIN_REPORT_YEAR IRB_FIN_REPORT_STATUS_CD 
        IRB_FIN_REPORT_AUDIT_STATUS_CD IRB_RECLASSIFICATION_FLG 
        IRB_LONG_TERM_RECEIVABLES_AMT IRB_SHORT_TERM_RECEIVABLES_AMT 
        IRB_PROVISIONS_AMT IRB_LONG_TERM_LOAN_AMT IRB_SHORT_TERM_LOAN_AMT 
        IRB_SUBSCRIBED_CAPITAL_AMT IRB_NFD_EBITDA_RT IRB_TOTAL_LEVERAGE_AMT 
        IRB_TOTAL_GEARING_AMT;


%let tpFieldRK = EXTERNAL_ORG_RK IRB_FIN_REPORT_RK IRB_RECLASSIFICATION_FLG;
%let tpFieldRK_count = 3;
%let tpFieldRK0 = 3;
%let tpFieldRK1 = EXTERNAL_ORG_RK;
%let tpFieldRK2 = IRB_FIN_REPORT_RK;
%let tpFieldRK3 = IRB_RECLASSIFICATION_FLG;
%let tpFieldStartDttm = VALID_FROM_DTTM;
%let tpFieldStartDttm_count = 1;
%let tpFieldStartDttm0 = 1;
%let tpFieldStartDttm1 = VALID_FROM_DTTM;
%let tpFieldEndDttm = VALID_TO_DTTM;
%let tpFieldEndDttm_count = 1;
%let tpFieldEndDttm0 = 1;
%let tpFieldEndDttm1 = VALID_TO_DTTM;
%let tpFieldProcessedDttm = PROCESSED_DTTM;
%let tpFieldProcessedDttm_count = 1;
%let tpFieldProcessedDttm0 = 1;
%let tpFieldProcessedDttm1 = PROCESSED_DTTM;

/* List of target columns to keep  */ 
%let _keep = EXTERNAL_ORG_RK VALID_FROM_DTTM VALID_TO_DTTM ANNUAL_REVENUE_AMT 
        REVENUE_GROWTH_AMT GROSS_ANNUAL_SALES_AMT NET_SALES_REVENUE_AMT 
        ANNUAL_OPERATING_REVENUE_AMT CAGR_OPERATING_REVENUE_AMT 
        NON_OPERATING_REVENUE_AMT COST_OF_GOODS_SOLD_AMT COST_OF_SALES_AMT 
        OPBDIT_AMT ANNUAL_INTEREST_CHARGES_AMT INTEREST_FINANCE_CHARGES_AMT 
        TOTAL_TERM_DEBT_P_AND_I_AMT LONG_TERM_DEBT_INT_EXPENSE_AMT 
        DEPREC_NON_CASH_CHARGES_AMT OWNER_COMP_DRAWING_AMT 
        GENERAL_OTHER_EXPENSE_AMT EBIT_AMT PRIOR_PERIOD_ADJUSTMENTS_NO 
        EXTRA_ORDINARY_INCOME_AMT EXTRA_ORDINARY_EXPENSES_AMT GROSS_PROFIT_AMT 
        PBT_AMT PAT_AMT ACCRETION_TO_RESERVES_AMT NET_CASH_ACCRUALS_AMT 
        FREE_CASH_FLOW_AMT GROSS_OPERATING_MARGINS_AMT NET_INCOME_AMT 
        GROSS_MARGIN_AMT NET_MARGIN_AMT RETURN_ON_CAPITAL_EMPLOYED_AMT 
        RETURN_ON_EQUITY_AMT DEBT_SERVICE_COVERAGE_RT 
        AVG_DEBT_SERVICE_COVERAGE_RT INTEREST_COVERAGE_RT 
        AVERAGE_INTEREST_COVERAGE_RT RENT_AMT TOTAL_ASSETS_AMT 
        FIXED_ASSETS_AMT CURRENT_ASSETS_AMT NET_TRADE_REC_AMT INVENTORY_AMT 
        OTHER_CURRENT_ASSETS_AMT MARKETABLE_SECURITIES_AMT 
        ASSETS_SECURITIZED_AMT CASH_AND_BANK_BALANCES_AMT 
        INTANGIBLE_ASSETS_AMT REVALUATION_RESERVES_AMT OTHER_ASSETS_AMT 
        TOTAL_LIABILITY_AMT TOTAL_DEBT_AMT LONG_TERM_DEBT_AMT 
        LONG_TERM_DEBT_EXPO_AMT SHORT_TERM_DEBT_AMT SHORT_TERM_DEBT_EXPO_AMT 
        SECURED_DEBT_AMT UNSECURED_DEBT_AMT NOTES_PAYABLE_AMT 
        TRADE_PAYABLE_AMT SHORT_TERM_PAYABLES_AMT CURRENT_LTD_AMT 
        OTHER_CURRENT_LIABILITY_AMT TOTAL_CURRENT_LIABILITY_AMT 
        OTHER_LIABILITY_AMT CONTINGENT_LIABILITIES_AMT TRADE_CREDITORS_AMT 
        FOREIGN_CURR_EXPOS_TRANS_AMT FOREIGN_CURR_TRANS_EXPOS_AMT 
        FOREIGN_OTHER_EXPOS_AMT CHARGED_OFF_AMT CURRENT_VALUE_SECURITY_AMT 
        NET_WORTH_AMT ADJUSTED_NET_WORTH_AMT LIQUIDITY_RT CURRENT_RT 
        TOTAL_EQUITY_NET_WORTH_AMT RETAINED_EARNINGS_AMT ASSET_BETA_NO 
        MARKET_CAPITALIZATION_AMT MARKET_CAPITALIZATION_DT DIVIDEND_PAYOUT_AMT 
        DIVIDEND_PAYOUT_RATIO_PCT EARNINGS_PER_SHARE_AMT 
        PRICE_EARNINGS_RATIO_RT DEBT_EQUITY_RT LT_DEBT_EQUITY_RT 
        ST_DEBT_EQUITY_RT DAYS_PAYABLE_RT DAYS_RECEIVABLE_RT 
        DAYS_FINISHED_GOODS_INV_RT DAYS_WORK_IN_PROG_GOODS_RT 
        KNOWN_BANK_RELATIONS_CNT CURRENCY_CD EQUITY_CAPITAL_AMT 
        CREDIT_BUREAU_SCORE_NO CREDIT_BUREAU_SCORE_DT TAX_BRACKET_CD 
        LIQUID_NET_WORTH_AMT BANKRUPTCY_FILED_DT BANKRUPTCY_STATUS_CD 
        REPORTED_ON_DT EFFECTIVE_FROM_DTTM EFFECTIVE_TO_DTTM 
        WORKING_CAPITAL_AMT CASH_FLOW_AMT INTEREST_INCOME_AMT 
        RETURN_ON_ASSESTS_AMT PROCESSED_DTTM IRB_FIN_REPORT_RK 
        IRB_FIN_REPORT_ID IRB_SOURCE_SYSTEM_CD IRB_FIN_REPORT_MONTH 
        IRB_FIN_REPORT_YEAR IRB_FIN_REPORT_STATUS_CD 
        IRB_FIN_REPORT_AUDIT_STATUS_CD IRB_RECLASSIFICATION_FLG 
        IRB_LONG_TERM_RECEIVABLES_AMT IRB_SHORT_TERM_RECEIVABLES_AMT 
        IRB_PROVISIONS_AMT IRB_LONG_TERM_LOAN_AMT IRB_SHORT_TERM_LOAN_AMT 
        IRB_SUBSCRIBED_CAPITAL_AMT IRB_NFD_EBITDA_RT IRB_TOTAL_LEVERAGE_AMT 
        IRB_TOTAL_GEARING_AMT;
/* List of target columns to keep  */ 
%let keep = EXTERNAL_ORG_RK VALID_FROM_DTTM VALID_TO_DTTM ANNUAL_REVENUE_AMT 
        REVENUE_GROWTH_AMT GROSS_ANNUAL_SALES_AMT NET_SALES_REVENUE_AMT 
        ANNUAL_OPERATING_REVENUE_AMT CAGR_OPERATING_REVENUE_AMT 
        NON_OPERATING_REVENUE_AMT COST_OF_GOODS_SOLD_AMT COST_OF_SALES_AMT 
        OPBDIT_AMT ANNUAL_INTEREST_CHARGES_AMT INTEREST_FINANCE_CHARGES_AMT 
        TOTAL_TERM_DEBT_P_AND_I_AMT LONG_TERM_DEBT_INT_EXPENSE_AMT 
        DEPREC_NON_CASH_CHARGES_AMT OWNER_COMP_DRAWING_AMT 
        GENERAL_OTHER_EXPENSE_AMT EBIT_AMT PRIOR_PERIOD_ADJUSTMENTS_NO 
        EXTRA_ORDINARY_INCOME_AMT EXTRA_ORDINARY_EXPENSES_AMT GROSS_PROFIT_AMT 
        PBT_AMT PAT_AMT ACCRETION_TO_RESERVES_AMT NET_CASH_ACCRUALS_AMT 
        FREE_CASH_FLOW_AMT GROSS_OPERATING_MARGINS_AMT NET_INCOME_AMT 
        GROSS_MARGIN_AMT NET_MARGIN_AMT RETURN_ON_CAPITAL_EMPLOYED_AMT 
        RETURN_ON_EQUITY_AMT DEBT_SERVICE_COVERAGE_RT 
        AVG_DEBT_SERVICE_COVERAGE_RT INTEREST_COVERAGE_RT 
        AVERAGE_INTEREST_COVERAGE_RT RENT_AMT TOTAL_ASSETS_AMT 
        FIXED_ASSETS_AMT CURRENT_ASSETS_AMT NET_TRADE_REC_AMT INVENTORY_AMT 
        OTHER_CURRENT_ASSETS_AMT MARKETABLE_SECURITIES_AMT 
        ASSETS_SECURITIZED_AMT CASH_AND_BANK_BALANCES_AMT 
        INTANGIBLE_ASSETS_AMT REVALUATION_RESERVES_AMT OTHER_ASSETS_AMT 
        TOTAL_LIABILITY_AMT TOTAL_DEBT_AMT LONG_TERM_DEBT_AMT 
        LONG_TERM_DEBT_EXPO_AMT SHORT_TERM_DEBT_AMT SHORT_TERM_DEBT_EXPO_AMT 
        SECURED_DEBT_AMT UNSECURED_DEBT_AMT NOTES_PAYABLE_AMT 
        TRADE_PAYABLE_AMT SHORT_TERM_PAYABLES_AMT CURRENT_LTD_AMT 
        OTHER_CURRENT_LIABILITY_AMT TOTAL_CURRENT_LIABILITY_AMT 
        OTHER_LIABILITY_AMT CONTINGENT_LIABILITIES_AMT TRADE_CREDITORS_AMT 
        FOREIGN_CURR_EXPOS_TRANS_AMT FOREIGN_CURR_TRANS_EXPOS_AMT 
        FOREIGN_OTHER_EXPOS_AMT CHARGED_OFF_AMT CURRENT_VALUE_SECURITY_AMT 
        NET_WORTH_AMT ADJUSTED_NET_WORTH_AMT LIQUIDITY_RT CURRENT_RT 
        TOTAL_EQUITY_NET_WORTH_AMT RETAINED_EARNINGS_AMT ASSET_BETA_NO 
        MARKET_CAPITALIZATION_AMT MARKET_CAPITALIZATION_DT DIVIDEND_PAYOUT_AMT 
        DIVIDEND_PAYOUT_RATIO_PCT EARNINGS_PER_SHARE_AMT 
        PRICE_EARNINGS_RATIO_RT DEBT_EQUITY_RT LT_DEBT_EQUITY_RT 
        ST_DEBT_EQUITY_RT DAYS_PAYABLE_RT DAYS_RECEIVABLE_RT 
        DAYS_FINISHED_GOODS_INV_RT DAYS_WORK_IN_PROG_GOODS_RT 
        KNOWN_BANK_RELATIONS_CNT CURRENCY_CD EQUITY_CAPITAL_AMT 
        CREDIT_BUREAU_SCORE_NO CREDIT_BUREAU_SCORE_DT TAX_BRACKET_CD 
        LIQUID_NET_WORTH_AMT BANKRUPTCY_FILED_DT BANKRUPTCY_STATUS_CD 
        REPORTED_ON_DT EFFECTIVE_FROM_DTTM EFFECTIVE_TO_DTTM 
        WORKING_CAPITAL_AMT CASH_FLOW_AMT INTEREST_INCOME_AMT 
        RETURN_ON_ASSESTS_AMT PROCESSED_DTTM IRB_FIN_REPORT_RK 
        IRB_FIN_REPORT_ID IRB_SOURCE_SYSTEM_CD IRB_FIN_REPORT_MONTH 
        IRB_FIN_REPORT_YEAR IRB_FIN_REPORT_STATUS_CD 
        IRB_FIN_REPORT_AUDIT_STATUS_CD IRB_RECLASSIFICATION_FLG 
        IRB_LONG_TERM_RECEIVABLES_AMT IRB_SHORT_TERM_RECEIVABLES_AMT 
        IRB_PROVISIONS_AMT IRB_LONG_TERM_LOAN_AMT IRB_SHORT_TERM_LOAN_AMT 
        IRB_SUBSCRIBED_CAPITAL_AMT IRB_NFD_EBITDA_RT IRB_TOTAL_LEVERAGE_AMT 
        IRB_TOTAL_GEARING_AMT;
/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_update_dds.sas 1498 2012-07-18 07:09:13Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Обновляет целевую таблицу DDS при помощи дельта-набора.
*   Подразумевается, что имя библиотеки и соотв. схемы в Oracle совпадают.
*   Работает в режиме SQL.
*
* ПАРАМЕТРЫ:
*   tpIn                   + имя входного дельта-набора
*   tpFieldRK              + поля первичного ключа
*   tpFieldStartDttm       + имя поля начала временного интервала действия версии, обычно VALID_FROM_DTTM
*   tpFieldEndDttm         + имя поля конца временного интервала действия версии, обычно VALID_TO_DTTM
*   tpFieldProcessedDttm   - имя поля даты обновления версии
*   tpOut                  + имя выходного набора, обновляемой таблицы DDS
*   tpJrnl                 - имя выходного набора, журнала DDS
*
******************************************************************/

%macro transform_update_dds;
   %etl_update_dds (
      mpIn=&tpIn,
      mpFieldsPK=&tpFieldRK,
      mpFieldStartDttm=&tpFieldStartDttm, mpFieldEndDttm=&tpFieldEndDttm, mpFieldProcessedDttm=&tpFieldProcessedDttm,
      mpOut=&tpOut,
      mpJrnl=
         %if &_OUTPUT_count gt 1 %then %do;
            &tpJrnl
         %end;
   );
%mend transform_update_dds;

%transform_update_dds;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Обновить DDS **/

/*==========================================================================* 
 * Step:            Обновить IA                           A569C89V.AS0005MA * 
 * Transform:       Обновить DDS                                            * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    EXTERNAL_ORG_FIN_DATA_SNUP -          A5Y50FNE.AE0000Q5 * 
 *                   etl_ia.EXTERNAL_ORG_FIN_DATA_SNUP                      * 
 * Target Table:    EXTERNAL_ORG_FIN_DATA_SNAP -          A5Y50FNE.AE0000Q4 * 
 *                   etl_ia.EXTERNAL_ORG_FIN_DATA_SNAP                      * 
 *==========================================================================*/ 

%let transformID = %quote(A569C89V.AS0005MA);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(etl_ia.EXTERNAL_ORG_FIN_DATA_SNUP); 

%let _INPUT_count = 1; 
%let _INPUT = etl_ia.EXTERNAL_ORG_FIN_DATA_SNUP;
%let _INPUT_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_IA" 
;
%let _INPUT_engine = ORACLE;
%let _INPUT_memtype = DATA;
%let _INPUT_options = %nrquote();
%let _INPUT_alter = %nrquote();
%let _INPUT_path = %nrquote(/DWH_DWHDDS_IA/Tables/ETL_IA/Counterparty_External/EXTERNAL_ORG_FIN_DATA_SNUP%(Table%));
%let _INPUT_type = 1;
%let _INPUT_label = %nrquote();

%let tpIn = etl_ia.EXTERNAL_ORG_FIN_DATA_SNUP;
%let tpIn_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_IA" 
;
%let tpIn_engine = ORACLE;
%let tpIn_memtype = DATA;
%let tpIn_options = %nrquote();
%let tpIn_alter = %nrquote();
%let tpIn_path = %nrquote(/DWH_DWHDDS_IA/Tables/ETL_IA/Counterparty_External/EXTERNAL_ORG_FIN_DATA_SNUP%(Table%));
%let tpIn_type = 1;
%let tpIn_label = %nrquote();

%let _OUTPUT_count = 1; 
%let _OUTPUT = etl_ia.EXTERNAL_ORG_FIN_DATA_SNAP;
%let _OUTPUT_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_IA" 
;
%let _OUTPUT_engine = ORACLE;
%let _OUTPUT_memtype = DATA;
%let _OUTPUT_options = %nrquote();
%let _OUTPUT_alter = %nrquote();
%let _OUTPUT_path = %nrquote(/DWH_DWHDDS_IA/Tables/ETL_IA/Counterparty_External/EXTERNAL_ORG_FIN_DATA_SNAP%(Table%));
%let _OUTPUT_type = 1;
%let _OUTPUT_label = %nrquote();
/* List of target columns to keep  */ 
%let _OUTPUT_keep = EXTERNAL_ORG_RK VALID_FROM_DTTM VALID_TO_DTTM IRB_FIN_REPORT_RK 
        IRB_RECLASSIFICATION_FLG ETL_DIGEST1_CD ETL_DIGEST2_CD;

%let tpOut = etl_ia.EXTERNAL_ORG_FIN_DATA_SNAP;
%let tpOut_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_IA" 
;
%let tpOut_engine = ORACLE;
%let tpOut_memtype = DATA;
%let tpOut_options = %nrquote();
%let tpOut_alter = %nrquote();
%let tpOut_path = %nrquote(/DWH_DWHDDS_IA/Tables/ETL_IA/Counterparty_External/EXTERNAL_ORG_FIN_DATA_SNAP%(Table%));
%let tpOut_type = 1;
%let tpOut_label = %nrquote();
/* List of target columns to keep  */ 
%let tpOut_keep = EXTERNAL_ORG_RK VALID_FROM_DTTM VALID_TO_DTTM IRB_FIN_REPORT_RK 
        IRB_RECLASSIFICATION_FLG ETL_DIGEST1_CD ETL_DIGEST2_CD;


%let tpFieldRK = EXTERNAL_ORG_RK IRB_RECLASSIFICATION_FLG IRB_FIN_REPORT_RK;
%let tpFieldRK_count = 3;
%let tpFieldRK0 = 3;
%let tpFieldRK1 = EXTERNAL_ORG_RK;
%let tpFieldRK2 = IRB_RECLASSIFICATION_FLG;
%let tpFieldRK3 = IRB_FIN_REPORT_RK;
%let tpFieldStartDttm = VALID_FROM_DTTM;
%let tpFieldStartDttm_count = 1;
%let tpFieldStartDttm0 = 1;
%let tpFieldStartDttm1 = VALID_FROM_DTTM;
%let tpFieldEndDttm = VALID_TO_DTTM;
%let tpFieldEndDttm_count = 1;
%let tpFieldEndDttm0 = 1;
%let tpFieldEndDttm1 = VALID_TO_DTTM;
%let tpFieldProcessedDttm = ;
%let tpFieldProcessedDttm_count = 0;
%let tpFieldProcessedDttm0 = 0;

/* List of target columns to keep  */ 
%let _keep = EXTERNAL_ORG_RK VALID_FROM_DTTM VALID_TO_DTTM IRB_FIN_REPORT_RK 
        IRB_RECLASSIFICATION_FLG ETL_DIGEST1_CD ETL_DIGEST2_CD;
/* List of target columns to keep  */ 
%let keep = EXTERNAL_ORG_RK VALID_FROM_DTTM VALID_TO_DTTM IRB_FIN_REPORT_RK 
        IRB_RECLASSIFICATION_FLG ETL_DIGEST1_CD ETL_DIGEST2_CD;
/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_update_dds.sas 1498 2012-07-18 07:09:13Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Обновляет целевую таблицу DDS при помощи дельта-набора.
*   Подразумевается, что имя библиотеки и соотв. схемы в Oracle совпадают.
*   Работает в режиме SQL.
*
* ПАРАМЕТРЫ:
*   tpIn                   + имя входного дельта-набора
*   tpFieldRK              + поля первичного ключа
*   tpFieldStartDttm       + имя поля начала временного интервала действия версии, обычно VALID_FROM_DTTM
*   tpFieldEndDttm         + имя поля конца временного интервала действия версии, обычно VALID_TO_DTTM
*   tpFieldProcessedDttm   - имя поля даты обновления версии
*   tpOut                  + имя выходного набора, обновляемой таблицы DDS
*   tpJrnl                 - имя выходного набора, журнала DDS
*
******************************************************************/

%macro transform_update_dds;
   %etl_update_dds (
      mpIn=&tpIn,
      mpFieldsPK=&tpFieldRK,
      mpFieldStartDttm=&tpFieldStartDttm, mpFieldEndDttm=&tpFieldEndDttm, mpFieldProcessedDttm=&tpFieldProcessedDttm,
      mpOut=&tpOut,
      mpJrnl=
         %if &_OUTPUT_count gt 1 %then %do;
            &tpJrnl
         %end;
   );
%mend transform_update_dds;

%transform_update_dds;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Обновить IA **/

/**************************************************************************** 
 * Job:             085_110_Commit_Demmy_COUNTERPARTY_FC  A569C89V.AQ00008A * 
 *                  C_EXT                                                   * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: bravo14                                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DWHDDS_DDS/Jobs/08x_DDS/085_Commit_Demmy           * 
 *                                                                          * 
 * Server:          SASApp                                A5C46MZY.AQ000002 * 
 *                                                                          * 
 * Source Tables:   COUNTERPARTY_FCC_EXT_DEMMY -          A569C89V.AE0000JQ * 
 *                   etl_dds.COUNTERPARTY_FCC_EXT_DEMMY                     * 
 *                  COUNTERPARTY_FCC_EXT_SNUM -           A5Y50FNE.AE0000PL * 
 *                   etl_ia.COUNTERPARTY_FCC_EXT_SNUM                       * 
 *                  COUNTERPARTY_FCC_EXT_SNUM -           A5Y50FNE.AE0000PL * 
 *                   etl_ia.COUNTERPARTY_FCC_EXT_SNUM                       * 
 * Target Tables:   COUNTERPARTY - dwh_dds.COUNTERPARTY   A569C89V.AE0000EQ * 
 *                  COUNTERPARTY_FCC_EXT_SNAP -           A5Y50FNE.AE0000PK * 
 *                   etl_ia.COUNTERPARTY_FCC_EXT_SNAP                       * 
 *                  COUNTERPARTY_EXT_DUMMY -              A5Y50FNE.AE0000PI * 
 *                   etl_ia.COUNTERPARTY_EXT_DUMMY                          * 
 *                                                                          * 
 * Generated on:    16 Июль 2013 г. 17:08:11 MSD                            * 
 * Generated by:    sasdwh                                                  * 
 * Version:         SAS Data Integration Studio 4.5                         * 
 ****************************************************************************/ 

/* General macro variables  */ 
%let jobID = %quote(A569C89V.AQ00008A);
%let etls_jobName = %nrquote(085_110_Commit_Demmy_COUNTERPARTY_FCC_EXT);
%let etls_userID = %nrquote(sasdwh);


/* Create metadata macro variables */
%let IOMServer      = %nrquote(SASApp);
%let metaPort       = %nrquote(8561);
%let metaServer     = %nrquote(bravo14);

/* Set metadata options */
options metaport       = &metaPort 
        metaserver     = "&metaServer"; 

/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Обновить DDS                          A569C89V.AS0005P5 * 
 * Transform:       Обновить DDS                                            * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    COUNTERPARTY_FCC_EXT_DEMMY -          A569C89V.AE0000JQ * 
 *                   etl_dds.COUNTERPARTY_FCC_EXT_DEMMY                     * 
 * Target Table:    COUNTERPARTY - dwh_dds.COUNTERPARTY   A569C89V.AE0000EQ * 
 *==========================================================================*/ 

%let transformID = %quote(A569C89V.AS0005P5);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(etl_dds.COUNTERPARTY_FCC_EXT_DEMMY); 

%let _INPUT_count = 1; 
%let _INPUT = etl_dds.COUNTERPARTY_FCC_EXT_DEMMY;
%let _INPUT_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_DDS" 
;
%let _INPUT_engine = ORACLE;
%let _INPUT_memtype = DATA;
%let _INPUT_options = %nrquote();
%let _INPUT_alter = %nrquote();
%let _INPUT_path = %nrquote(/DWH_DWHDDS_DDS/Tables/ETL_DDS/Counterparty/COUNTERPARTY_FCC_EXT_DEMMY%(Table%));
%let _INPUT_type = 1;
%let _INPUT_label = %nrquote();

%let tpIn = etl_dds.COUNTERPARTY_FCC_EXT_DEMMY;
%let tpIn_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_DDS" 
;
%let tpIn_engine = ORACLE;
%let tpIn_memtype = DATA;
%let tpIn_options = %nrquote();
%let tpIn_alter = %nrquote();
%let tpIn_path = %nrquote(/DWH_DWHDDS_DDS/Tables/ETL_DDS/Counterparty/COUNTERPARTY_FCC_EXT_DEMMY%(Table%));
%let tpIn_type = 1;
%let tpIn_label = %nrquote();

%let _OUTPUT_count = 1; 
%let _OUTPUT = dwh_dds.COUNTERPARTY;
%let _OUTPUT_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let _OUTPUT_engine = ORACLE;
%let _OUTPUT_memtype = DATA;
%let _OUTPUT_options = %nrquote();
%let _OUTPUT_alter = %nrquote();
%let _OUTPUT_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/COUNTERPARTY%(Table%));
%let _OUTPUT_type = 1;
%let _OUTPUT_label = %nrquote();
/* List of target columns to keep  */ 
%let _OUTPUT_keep = COUNTERPARTY_RK VALID_FROM_DTTM VALID_TO_DTTM CUSTOMER_RK 
        INTERNAL_ORG_RK NON_CUSTOMER_EXTERNAL_ORG_RK 
        NON_CUSTOMER_EXTERNAL_IND_RK SOURCE_SYSTEM_CD COUNTERPARTY_ID 
        COUNTERPARTY_GROUP_ID COUNTERPARTY_GROUP_PARENT_FLG 
        COUNTERPARTY_TYPE_CD REGLTRY_COUNTERPARTY_TYPE_CD ECONOMIC_SECTOR_CD 
        HIGH_RISK_CATEGORY_FLG COUNTERPARTY_LEGAL_TYPE_CD 
        CORE_MKT_PARTICIPANT_FLG RISK_WEIGHT_PCT COUNTERPARTY_RLN_TYPE_CD 
        EFFECTIVE_FROM_DTTM EFFECTIVE_TO_DTTM DOMESTIC_CURRENCY_CD 
        ELIG_CCR_CENTRAL_CPTY_FLG CPTY_INTERNAL_RPT_CATEGORY_CD PROCESSED_DTTM 
        IRB_SRC_ID IRB_TECHNICAL_FLG IRB_COUNTERPARTY_STATUS_CD 
        IRB_DUMMY_TYPE_CD;

%let tpOut = dwh_dds.COUNTERPARTY;
%let tpOut_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_DWH_DDS" 
;
%let tpOut_engine = ORACLE;
%let tpOut_memtype = DATA;
%let tpOut_options = %nrquote();
%let tpOut_alter = %nrquote();
%let tpOut_path = %nrquote(/DWH_DWHDDS_DDS/Tables/DWH_DDS/COUNTERPARTY%(Table%));
%let tpOut_type = 1;
%let tpOut_label = %nrquote();
/* List of target columns to keep  */ 
%let tpOut_keep = COUNTERPARTY_RK VALID_FROM_DTTM VALID_TO_DTTM CUSTOMER_RK 
        INTERNAL_ORG_RK NON_CUSTOMER_EXTERNAL_ORG_RK 
        NON_CUSTOMER_EXTERNAL_IND_RK SOURCE_SYSTEM_CD COUNTERPARTY_ID 
        COUNTERPARTY_GROUP_ID COUNTERPARTY_GROUP_PARENT_FLG 
        COUNTERPARTY_TYPE_CD REGLTRY_COUNTERPARTY_TYPE_CD ECONOMIC_SECTOR_CD 
        HIGH_RISK_CATEGORY_FLG COUNTERPARTY_LEGAL_TYPE_CD 
        CORE_MKT_PARTICIPANT_FLG RISK_WEIGHT_PCT COUNTERPARTY_RLN_TYPE_CD 
        EFFECTIVE_FROM_DTTM EFFECTIVE_TO_DTTM DOMESTIC_CURRENCY_CD 
        ELIG_CCR_CENTRAL_CPTY_FLG CPTY_INTERNAL_RPT_CATEGORY_CD PROCESSED_DTTM 
        IRB_SRC_ID IRB_TECHNICAL_FLG IRB_COUNTERPARTY_STATUS_CD 
        IRB_DUMMY_TYPE_CD;


%let tpFieldRK = COUNTERPARTY_RK;
%let tpFieldRK_count = 1;
%let tpFieldRK0 = 1;
%let tpFieldRK1 = COUNTERPARTY_RK;
%let tpFieldStartDttm = VALID_FROM_DTTM;
%let tpFieldStartDttm_count = 1;
%let tpFieldStartDttm0 = 1;
%let tpFieldStartDttm1 = VALID_FROM_DTTM;
%let tpFieldEndDttm = VALID_TO_DTTM;
%let tpFieldEndDttm_count = 1;
%let tpFieldEndDttm0 = 1;
%let tpFieldEndDttm1 = VALID_TO_DTTM;
%let tpFieldProcessedDttm = PROCESSED_DTTM;
%let tpFieldProcessedDttm_count = 1;
%let tpFieldProcessedDttm0 = 1;
%let tpFieldProcessedDttm1 = PROCESSED_DTTM;

/* List of target columns to keep  */ 
%let _keep = COUNTERPARTY_RK VALID_FROM_DTTM VALID_TO_DTTM CUSTOMER_RK 
        INTERNAL_ORG_RK NON_CUSTOMER_EXTERNAL_ORG_RK 
        NON_CUSTOMER_EXTERNAL_IND_RK SOURCE_SYSTEM_CD COUNTERPARTY_ID 
        COUNTERPARTY_GROUP_ID COUNTERPARTY_GROUP_PARENT_FLG 
        COUNTERPARTY_TYPE_CD REGLTRY_COUNTERPARTY_TYPE_CD ECONOMIC_SECTOR_CD 
        HIGH_RISK_CATEGORY_FLG COUNTERPARTY_LEGAL_TYPE_CD 
        CORE_MKT_PARTICIPANT_FLG RISK_WEIGHT_PCT COUNTERPARTY_RLN_TYPE_CD 
        EFFECTIVE_FROM_DTTM EFFECTIVE_TO_DTTM DOMESTIC_CURRENCY_CD 
        ELIG_CCR_CENTRAL_CPTY_FLG CPTY_INTERNAL_RPT_CATEGORY_CD PROCESSED_DTTM 
        IRB_SRC_ID IRB_TECHNICAL_FLG IRB_COUNTERPARTY_STATUS_CD 
        IRB_DUMMY_TYPE_CD;
/* List of target columns to keep  */ 
%let keep = COUNTERPARTY_RK VALID_FROM_DTTM VALID_TO_DTTM CUSTOMER_RK 
        INTERNAL_ORG_RK NON_CUSTOMER_EXTERNAL_ORG_RK 
        NON_CUSTOMER_EXTERNAL_IND_RK SOURCE_SYSTEM_CD COUNTERPARTY_ID 
        COUNTERPARTY_GROUP_ID COUNTERPARTY_GROUP_PARENT_FLG 
        COUNTERPARTY_TYPE_CD REGLTRY_COUNTERPARTY_TYPE_CD ECONOMIC_SECTOR_CD 
        HIGH_RISK_CATEGORY_FLG COUNTERPARTY_LEGAL_TYPE_CD 
        CORE_MKT_PARTICIPANT_FLG RISK_WEIGHT_PCT COUNTERPARTY_RLN_TYPE_CD 
        EFFECTIVE_FROM_DTTM EFFECTIVE_TO_DTTM DOMESTIC_CURRENCY_CD 
        ELIG_CCR_CENTRAL_CPTY_FLG CPTY_INTERNAL_RPT_CATEGORY_CD PROCESSED_DTTM 
        IRB_SRC_ID IRB_TECHNICAL_FLG IRB_COUNTERPARTY_STATUS_CD 
        IRB_DUMMY_TYPE_CD;
/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_update_dds.sas 1498 2012-07-18 07:09:13Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Обновляет целевую таблицу DDS при помощи дельта-набора.
*   Подразумевается, что имя библиотеки и соотв. схемы в Oracle совпадают.
*   Работает в режиме SQL.
*
* ПАРАМЕТРЫ:
*   tpIn                   + имя входного дельта-набора
*   tpFieldRK              + поля первичного ключа
*   tpFieldStartDttm       + имя поля начала временного интервала действия версии, обычно VALID_FROM_DTTM
*   tpFieldEndDttm         + имя поля конца временного интервала действия версии, обычно VALID_TO_DTTM
*   tpFieldProcessedDttm   - имя поля даты обновления версии
*   tpOut                  + имя выходного набора, обновляемой таблицы DDS
*   tpJrnl                 - имя выходного набора, журнала DDS
*
******************************************************************/

%macro transform_update_dds;
   %etl_update_dds (
      mpIn=&tpIn,
      mpFieldsPK=&tpFieldRK,
      mpFieldStartDttm=&tpFieldStartDttm, mpFieldEndDttm=&tpFieldEndDttm, mpFieldProcessedDttm=&tpFieldProcessedDttm,
      mpOut=&tpOut,
      mpJrnl=
         %if &_OUTPUT_count gt 1 %then %do;
            &tpJrnl
         %end;
   );
%mend transform_update_dds;

%transform_update_dds;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Обновить DDS **/

/*==========================================================================* 
 * Step:            Обновить IA                           A569C89V.AS0005P6 * 
 * Transform:       Обновить DDS                                            * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    COUNTERPARTY_FCC_EXT_SNUM -           A5Y50FNE.AE0000PL * 
 *                   etl_ia.COUNTERPARTY_FCC_EXT_SNUM                       * 
 * Target Table:    COUNTERPARTY_FCC_EXT_SNAP -           A5Y50FNE.AE0000PK * 
 *                   etl_ia.COUNTERPARTY_FCC_EXT_SNAP                       * 
 *==========================================================================*/ 

%let transformID = %quote(A569C89V.AS0005P6);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(etl_ia.COUNTERPARTY_FCC_EXT_SNUM); 

%let _INPUT_count = 1; 
%let _INPUT = etl_ia.COUNTERPARTY_FCC_EXT_SNUM;
%let _INPUT_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_IA" 
;
%let _INPUT_engine = ORACLE;
%let _INPUT_memtype = DATA;
%let _INPUT_options = %nrquote();
%let _INPUT_alter = %nrquote();
%let _INPUT_path = %nrquote(/DWH_DWHDDS_IA/Tables/ETL_IA/Counterparty_External/COUNTERPARTY_FCC_EXT_SNUM%(Table%));
%let _INPUT_type = 1;
%let _INPUT_label = %nrquote();

%let tpIn = etl_ia.COUNTERPARTY_FCC_EXT_SNUM;
%let tpIn_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_IA" 
;
%let tpIn_engine = ORACLE;
%let tpIn_memtype = DATA;
%let tpIn_options = %nrquote();
%let tpIn_alter = %nrquote();
%let tpIn_path = %nrquote(/DWH_DWHDDS_IA/Tables/ETL_IA/Counterparty_External/COUNTERPARTY_FCC_EXT_SNUM%(Table%));
%let tpIn_type = 1;
%let tpIn_label = %nrquote();

%let _OUTPUT_count = 1; 
%let _OUTPUT = etl_ia.COUNTERPARTY_FCC_EXT_SNAP;
%let _OUTPUT_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_IA" 
;
%let _OUTPUT_engine = ORACLE;
%let _OUTPUT_memtype = DATA;
%let _OUTPUT_options = %nrquote();
%let _OUTPUT_alter = %nrquote();
%let _OUTPUT_path = %nrquote(/DWH_DWHDDS_IA/Tables/ETL_IA/Counterparty_External/COUNTERPARTY_FCC_EXT_SNAP%(Table%));
%let _OUTPUT_type = 1;
%let _OUTPUT_label = %nrquote();
/* List of target columns to keep  */ 
%let _OUTPUT_keep = COUNTERPARTY_RK VALID_FROM_DTTM VALID_TO_DTTM COUNTERPARTY_TYPE_CD 
        ETL_DIGEST1_CD ETL_DIGEST2_CD ETL_BRANCH_ID IRB_DUMMY_TYPE_CD 
        ETL_CPY_GROUP_CD;

%let tpOut = etl_ia.COUNTERPARTY_FCC_EXT_SNAP;
%let tpOut_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_IA" 
;
%let tpOut_engine = ORACLE;
%let tpOut_memtype = DATA;
%let tpOut_options = %nrquote();
%let tpOut_alter = %nrquote();
%let tpOut_path = %nrquote(/DWH_DWHDDS_IA/Tables/ETL_IA/Counterparty_External/COUNTERPARTY_FCC_EXT_SNAP%(Table%));
%let tpOut_type = 1;
%let tpOut_label = %nrquote();
/* List of target columns to keep  */ 
%let tpOut_keep = COUNTERPARTY_RK VALID_FROM_DTTM VALID_TO_DTTM COUNTERPARTY_TYPE_CD 
        ETL_DIGEST1_CD ETL_DIGEST2_CD ETL_BRANCH_ID IRB_DUMMY_TYPE_CD 
        ETL_CPY_GROUP_CD;


%let tpFieldRK = COUNTERPARTY_RK;
%let tpFieldRK_count = 1;
%let tpFieldRK0 = 1;
%let tpFieldRK1 = COUNTERPARTY_RK;
%let tpFieldStartDttm = VALID_FROM_DTTM;
%let tpFieldStartDttm_count = 1;
%let tpFieldStartDttm0 = 1;
%let tpFieldStartDttm1 = VALID_FROM_DTTM;
%let tpFieldEndDttm = VALID_TO_DTTM;
%let tpFieldEndDttm_count = 1;
%let tpFieldEndDttm0 = 1;
%let tpFieldEndDttm1 = VALID_TO_DTTM;
%let tpFieldProcessedDttm = ;
%let tpFieldProcessedDttm_count = 0;
%let tpFieldProcessedDttm0 = 0;

/* List of target columns to keep  */ 
%let _keep = COUNTERPARTY_RK VALID_FROM_DTTM VALID_TO_DTTM COUNTERPARTY_TYPE_CD 
        ETL_DIGEST1_CD ETL_DIGEST2_CD ETL_BRANCH_ID IRB_DUMMY_TYPE_CD 
        ETL_CPY_GROUP_CD;
/* List of target columns to keep  */ 
%let keep = COUNTERPARTY_RK VALID_FROM_DTTM VALID_TO_DTTM COUNTERPARTY_TYPE_CD 
        ETL_DIGEST1_CD ETL_DIGEST2_CD ETL_BRANCH_ID IRB_DUMMY_TYPE_CD 
        ETL_CPY_GROUP_CD;
/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_update_dds.sas 1498 2012-07-18 07:09:13Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Обновляет целевую таблицу DDS при помощи дельта-набора.
*   Подразумевается, что имя библиотеки и соотв. схемы в Oracle совпадают.
*   Работает в режиме SQL.
*
* ПАРАМЕТРЫ:
*   tpIn                   + имя входного дельта-набора
*   tpFieldRK              + поля первичного ключа
*   tpFieldStartDttm       + имя поля начала временного интервала действия версии, обычно VALID_FROM_DTTM
*   tpFieldEndDttm         + имя поля конца временного интервала действия версии, обычно VALID_TO_DTTM
*   tpFieldProcessedDttm   - имя поля даты обновления версии
*   tpOut                  + имя выходного набора, обновляемой таблицы DDS
*   tpJrnl                 - имя выходного набора, журнала DDS
*
******************************************************************/

%macro transform_update_dds;
   %etl_update_dds (
      mpIn=&tpIn,
      mpFieldsPK=&tpFieldRK,
      mpFieldStartDttm=&tpFieldStartDttm, mpFieldEndDttm=&tpFieldEndDttm, mpFieldProcessedDttm=&tpFieldProcessedDttm,
      mpOut=&tpOut,
      mpJrnl=
         %if &_OUTPUT_count gt 1 %then %do;
            &tpJrnl
         %end;
   );
%mend transform_update_dds;

%transform_update_dds;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Обновить IA **/

/*==========================================================================* 
 * Step:            Обновить дамми                        A569C89V.AS0005P7 * 
 * Transform:       Обновить дамми                                          * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    COUNTERPARTY_FCC_EXT_SNUM -           A5Y50FNE.AE0000PL * 
 *                   etl_ia.COUNTERPARTY_FCC_EXT_SNUM                       * 
 * Target Table:    COUNTERPARTY_EXT_DUMMY -              A5Y50FNE.AE0000PI * 
 *                   etl_ia.COUNTERPARTY_EXT_DUMMY                          * 
 *==========================================================================*/ 

%let transformID = %quote(A569C89V.AS0005P7);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(etl_ia.COUNTERPARTY_FCC_EXT_SNUM); 

%let _INPUT_count = 1; 
%let _INPUT = etl_ia.COUNTERPARTY_FCC_EXT_SNUM;
%let _INPUT_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_IA" 
;
%let _INPUT_engine = ORACLE;
%let _INPUT_memtype = DATA;
%let _INPUT_options = %nrquote();
%let _INPUT_alter = %nrquote();
%let _INPUT_path = %nrquote(/DWH_DWHDDS_IA/Tables/ETL_IA/Counterparty_External/COUNTERPARTY_FCC_EXT_SNUM%(Table%));
%let _INPUT_type = 1;
%let _INPUT_label = %nrquote();

%let tpInSnum = etl_ia.COUNTERPARTY_FCC_EXT_SNUM;
%let tpInSnum_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_IA" 
;
%let tpInSnum_engine = ORACLE;
%let tpInSnum_memtype = DATA;
%let tpInSnum_options = %nrquote();
%let tpInSnum_alter = %nrquote();
%let tpInSnum_path = %nrquote(/DWH_DWHDDS_IA/Tables/ETL_IA/Counterparty_External/COUNTERPARTY_FCC_EXT_SNUM%(Table%));
%let tpInSnum_type = 1;
%let tpInSnum_label = %nrquote();

%let _OUTPUT_count = 1; 
%let _OUTPUT = etl_ia.COUNTERPARTY_EXT_DUMMY;
%let _OUTPUT_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_IA" 
;
%let _OUTPUT_engine = ORACLE;
%let _OUTPUT_memtype = DATA;
%let _OUTPUT_options = %nrquote();
%let _OUTPUT_alter = %nrquote();
%let _OUTPUT_path = %nrquote(/DWH_DWHDDS_IA/Tables/ETL_IA/Counterparty_External/COUNTERPARTY_EXT_DUMMY%(Table%));
%let _OUTPUT_type = 1;
%let _OUTPUT_label = %nrquote();
/* List of target columns to keep  */ 
%let _OUTPUT_keep = COUNTERPARTY_RK VALID_FROM_DTTM VALID_TO_DTTM CUSTOMER_RK 
        INTERNAL_ORG_RK NON_CUSTOMER_EXTERNAL_ORG_RK 
        NON_CUSTOMER_EXTERNAL_IND_RK SOURCE_SYSTEM_CD COUNTERPARTY_ID 
        COUNTERPARTY_GROUP_ID COUNTERPARTY_GROUP_PARENT_FLG 
        COUNTERPARTY_TYPE_CD REGLTRY_COUNTERPARTY_TYPE_CD ECONOMIC_SECTOR_CD 
        HIGH_RISK_CATEGORY_FLG COUNTERPARTY_LEGAL_TYPE_CD 
        CORE_MKT_PARTICIPANT_FLG RISK_WEIGHT_PCT COUNTERPARTY_RLN_TYPE_CD 
        EFFECTIVE_FROM_DTTM EFFECTIVE_TO_DTTM DOMESTIC_CURRENCY_CD 
        ELIG_CCR_CENTRAL_CPTY_FLG CPTY_INTERNAL_RPT_CATEGORY_CD PROCESSED_DTTM 
        IRB_DUMMY_TYPE_CD IRB_SRC_ID IRB_TECHNICAL_FLG 
        IRB_COUNTERPARTY_STATUS_CD ETL_SNAPSHOT_CD;

%let tpOutDummy = etl_ia.COUNTERPARTY_EXT_DUMMY;
%let tpOutDummy_connect =  DEFER=YES PATH=DWH.IMB.RU AUTHDOMAIN="OraAuth_ETL_IA" 
;
%let tpOutDummy_engine = ORACLE;
%let tpOutDummy_memtype = DATA;
%let tpOutDummy_options = %nrquote();
%let tpOutDummy_alter = %nrquote();
%let tpOutDummy_path = %nrquote(/DWH_DWHDDS_IA/Tables/ETL_IA/Counterparty_External/COUNTERPARTY_EXT_DUMMY%(Table%));
%let tpOutDummy_type = 1;
%let tpOutDummy_label = %nrquote();
/* List of target columns to keep  */ 
%let tpOutDummy_keep = COUNTERPARTY_RK VALID_FROM_DTTM VALID_TO_DTTM CUSTOMER_RK 
        INTERNAL_ORG_RK NON_CUSTOMER_EXTERNAL_ORG_RK 
        NON_CUSTOMER_EXTERNAL_IND_RK SOURCE_SYSTEM_CD COUNTERPARTY_ID 
        COUNTERPARTY_GROUP_ID COUNTERPARTY_GROUP_PARENT_FLG 
        COUNTERPARTY_TYPE_CD REGLTRY_COUNTERPARTY_TYPE_CD ECONOMIC_SECTOR_CD 
        HIGH_RISK_CATEGORY_FLG COUNTERPARTY_LEGAL_TYPE_CD 
        CORE_MKT_PARTICIPANT_FLG RISK_WEIGHT_PCT COUNTERPARTY_RLN_TYPE_CD 
        EFFECTIVE_FROM_DTTM EFFECTIVE_TO_DTTM DOMESTIC_CURRENCY_CD 
        ELIG_CCR_CENTRAL_CPTY_FLG CPTY_INTERNAL_RPT_CATEGORY_CD PROCESSED_DTTM 
        IRB_DUMMY_TYPE_CD IRB_SRC_ID IRB_TECHNICAL_FLG 
        IRB_COUNTERPARTY_STATUS_CD ETL_SNAPSHOT_CD;


%let tpFieldsPK = COUNTERPARTY_RK;
%let tpFieldsPK_count = 1;
%let tpFieldsPK0 = 1;
%let tpFieldsPK1 = COUNTERPARTY_RK;

/* List of target columns to keep  */ 
%let _keep = COUNTERPARTY_RK VALID_FROM_DTTM VALID_TO_DTTM CUSTOMER_RK 
        INTERNAL_ORG_RK NON_CUSTOMER_EXTERNAL_ORG_RK 
        NON_CUSTOMER_EXTERNAL_IND_RK SOURCE_SYSTEM_CD COUNTERPARTY_ID 
        COUNTERPARTY_GROUP_ID COUNTERPARTY_GROUP_PARENT_FLG 
        COUNTERPARTY_TYPE_CD REGLTRY_COUNTERPARTY_TYPE_CD ECONOMIC_SECTOR_CD 
        HIGH_RISK_CATEGORY_FLG COUNTERPARTY_LEGAL_TYPE_CD 
        CORE_MKT_PARTICIPANT_FLG RISK_WEIGHT_PCT COUNTERPARTY_RLN_TYPE_CD 
        EFFECTIVE_FROM_DTTM EFFECTIVE_TO_DTTM DOMESTIC_CURRENCY_CD 
        ELIG_CCR_CENTRAL_CPTY_FLG CPTY_INTERNAL_RPT_CATEGORY_CD PROCESSED_DTTM 
        IRB_DUMMY_TYPE_CD IRB_SRC_ID IRB_TECHNICAL_FLG 
        IRB_COUNTERPARTY_STATUS_CD ETL_SNAPSHOT_CD;
/* List of target columns to keep  */ 
%let keep = COUNTERPARTY_RK VALID_FROM_DTTM VALID_TO_DTTM CUSTOMER_RK 
        INTERNAL_ORG_RK NON_CUSTOMER_EXTERNAL_ORG_RK 
        NON_CUSTOMER_EXTERNAL_IND_RK SOURCE_SYSTEM_CD COUNTERPARTY_ID 
        COUNTERPARTY_GROUP_ID COUNTERPARTY_GROUP_PARENT_FLG 
        COUNTERPARTY_TYPE_CD REGLTRY_COUNTERPARTY_TYPE_CD ECONOMIC_SECTOR_CD 
        HIGH_RISK_CATEGORY_FLG COUNTERPARTY_LEGAL_TYPE_CD 
        CORE_MKT_PARTICIPANT_FLG RISK_WEIGHT_PCT COUNTERPARTY_RLN_TYPE_CD 
        EFFECTIVE_FROM_DTTM EFFECTIVE_TO_DTTM DOMESTIC_CURRENCY_CD 
        ELIG_CCR_CENTRAL_CPTY_FLG CPTY_INTERNAL_RPT_CATEGORY_CD PROCESSED_DTTM 
        IRB_DUMMY_TYPE_CD IRB_SRC_ID IRB_TECHNICAL_FLG 
        IRB_COUNTERPARTY_STATUS_CD ETL_SNAPSHOT_CD;
/*****************************************************************
* ВЕРСИЯ:
*     $Id: transform_update_dummy.sas 5129 2013-05-20 09:42:37Z rusane $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*     Исключает из целевой таблицы DUMMY записи, попавшие в ее дельта-набор (SNUM).
*     Работает в режиме SQL.
*
* ПАРАМЕТРЫ:
*     tpInSnum             +  имя входного дельта-набора
*     tpFieldsPK           +  поля первичного ключа
*     tpOutDummy           +  имя выходного набора, обновляемой таблицы DUMMY
*
******************************************************************/

%macro transform_update_dummy;
   %etl_update_dummy (
      mpIn=&tpInSnum,
      mpFieldsPK=&tpFieldsPK,
      mpOut=&tpOutDummy
   );
%mend transform_update_dummy;

%transform_update_dummy;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Обновить дамми **/

%let etls_endTime = %sysfunc(datetime(),datetime.);



/**  Job end 085_110_Commit_Demmy_COUNTERPARTY_FCC_EXT **/

/* Reset jobid and name */
%let jobID = %quote(A569C89V.AQ00009G);
%let etls_jobName = %nrquote(081_911_Commit_Ace_Reference);

/*==========================================================================* 
 * Step:            Закрыть ACE_V_DWH_TSEFBILANAG         A569C89V.AS0005MC * 
 * Transform:       Закрыть ресурс                                          * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A569C89V.AS0005MC);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let tpResourceLike = %nrquote(ACE_V_DWH_TSEFBILANAG);

/*****************************************************************
* ВЕРСИЯ:
*     $Id: transform_resource_close.sas 3754 2012-10-23 12:05:53Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*     Закрывает записи по указанному ресурсу(-ам), т.е. переводит их из состояния N в L.
*     Если таких записей нет, то в регулярном режиме это вызывает ошибку.
*     Если исполняется в режиме SQL, то считает, что работает с уже установленным
*     соединением oracle (transform_txn_start).
*
* ПАРАМЕТРЫ:
*     tpResourceLike   + условие выбора ресурса(-ов)
*
******************************************************************/

%macro transform_resource_close;
   /* Открываем proc sql, если он еще не открыт */
   %local lmvIsNotSQL;
   %let lmvIsNotSQL = %eval (&SYSPROCNAME ne SQL);
   %if &lmvIsNotSQL %then %do;
      proc sql noprint;
   %end;
   %else %do;
         reset noprint;
   %end;

      /* Устанавливаем соединение, если требуется */
      %local lmvNotConnected lmvConnection;
      %let lmvNotConnected = &lmvIsNotSQL;
      %let lmvConnection = oracle;
      %if &lmvNotConnected %then %do;
         %oracle_connect(mpLoginSet=ETL_SYS, mpAlias=&lmvConnection);
      %end;

      /* Находим набор ресурсов */
      %local lmvResourceList lmvObs;
      %let lmvResourceList = ;
         select resource_id into :lmvResourceList separated by " "
         from connection to &lmvConnection (
            select r.resource_id from
               ETL_SYS.ETL_RESOURCE r
            inner join
               ETL_SYS.ETL_RESOURCE_REGISTRY rr
            on r.resource_id = rr.resource_id
            where
               r.resource_cd like %oracle_string(&tpResourceLike)
               and rr.processed_by_job_id = %oracle_number(&STREAM_ID)
         );
      %let lmvObs = &SQLOBS;
      %error_check (mpStepType=SQL_PASS_THROUGH);

      /* Если таких ресурсов нет, то ошибка для регулярного режима и конец работы для режима инициализации */
      %if &lmvObs eq 0 %then %do;
         %if &ETL_TYPE ne INIT %then %do;
            %job_event_reg (mpEventTypeCode=RESOURCE_NOT_FOUND,
                            mpEventValues= %bquote(location=transform_resource_close tpResourceLike="&tpResourceLike") );
         %end;
         %goto exit;
      %end;

      /* Закрываем все найденные ресурсы */
      %macro _transform_resource_close_loop (resource_id);
         %resource_update (
            mpResourceId=&resource_id, mpVersion=ALL,
            mpDate=NOCHG, mpUpdateDttm=NOCHG, mpProcessedBy=&STREAM_ID, mpStatus=L,
            mpNotFound=ERR, mpWhere= processed_by_job_id=&STREAM_ID,
            mpConnection=&lmvConnection
         );
      %mend _transform_resource_close_loop;
      %util_loop (mpMacroName=_transform_resource_close_loop, mpWith=&lmvResourceList);
      %error_check (mpStepType=SQL_PASS_THROUGH);

   /* Закрываем новое соединение */
   %exit:
      %if &lmvNotConnected %then %do;
         disconnect from &lmvConnection;
      %end;
   %if &lmvIsNotSQL %then %do;
      quit;
   %end;
%mend transform_resource_close;

%transform_resource_close;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Закрыть ACE_V_DWH_TSEFBILANAG **/

/*==========================================================================* 
 * Step:            Закрыть ACE_V_DWH_TSEFBILDATI         A569C89V.AS0005MD * 
 * Transform:       Закрыть ресурс                                          * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A569C89V.AS0005MD);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let tpResourceLike = %nrquote(ACE_V_DWH_TSEFBILDATI);

/*****************************************************************
* ВЕРСИЯ:
*     $Id: transform_resource_close.sas 3754 2012-10-23 12:05:53Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*     Закрывает записи по указанному ресурсу(-ам), т.е. переводит их из состояния N в L.
*     Если таких записей нет, то в регулярном режиме это вызывает ошибку.
*     Если исполняется в режиме SQL, то считает, что работает с уже установленным
*     соединением oracle (transform_txn_start).
*
* ПАРАМЕТРЫ:
*     tpResourceLike   + условие выбора ресурса(-ов)
*
******************************************************************/

%macro transform_resource_close;
   /* Открываем proc sql, если он еще не открыт */
   %local lmvIsNotSQL;
   %let lmvIsNotSQL = %eval (&SYSPROCNAME ne SQL);
   %if &lmvIsNotSQL %then %do;
      proc sql noprint;
   %end;
   %else %do;
         reset noprint;
   %end;

      /* Устанавливаем соединение, если требуется */
      %local lmvNotConnected lmvConnection;
      %let lmvNotConnected = &lmvIsNotSQL;
      %let lmvConnection = oracle;
      %if &lmvNotConnected %then %do;
         %oracle_connect(mpLoginSet=ETL_SYS, mpAlias=&lmvConnection);
      %end;

      /* Находим набор ресурсов */
      %local lmvResourceList lmvObs;
      %let lmvResourceList = ;
         select resource_id into :lmvResourceList separated by " "
         from connection to &lmvConnection (
            select r.resource_id from
               ETL_SYS.ETL_RESOURCE r
            inner join
               ETL_SYS.ETL_RESOURCE_REGISTRY rr
            on r.resource_id = rr.resource_id
            where
               r.resource_cd like %oracle_string(&tpResourceLike)
               and rr.processed_by_job_id = %oracle_number(&STREAM_ID)
         );
      %let lmvObs = &SQLOBS;
      %error_check (mpStepType=SQL_PASS_THROUGH);

      /* Если таких ресурсов нет, то ошибка для регулярного режима и конец работы для режима инициализации */
      %if &lmvObs eq 0 %then %do;
         %if &ETL_TYPE ne INIT %then %do;
            %job_event_reg (mpEventTypeCode=RESOURCE_NOT_FOUND,
                            mpEventValues= %bquote(location=transform_resource_close tpResourceLike="&tpResourceLike") );
         %end;
         %goto exit;
      %end;

      /* Закрываем все найденные ресурсы */
      %macro _transform_resource_close_loop (resource_id);
         %resource_update (
            mpResourceId=&resource_id, mpVersion=ALL,
            mpDate=NOCHG, mpUpdateDttm=NOCHG, mpProcessedBy=&STREAM_ID, mpStatus=L,
            mpNotFound=ERR, mpWhere= processed_by_job_id=&STREAM_ID,
            mpConnection=&lmvConnection
         );
      %mend _transform_resource_close_loop;
      %util_loop (mpMacroName=_transform_resource_close_loop, mpWith=&lmvResourceList);
      %error_check (mpStepType=SQL_PASS_THROUGH);

   /* Закрываем новое соединение */
   %exit:
      %if &lmvNotConnected %then %do;
         disconnect from &lmvConnection;
      %end;
   %if &lmvIsNotSQL %then %do;
      quit;
   %end;
%mend transform_resource_close;

%transform_resource_close;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Закрыть ACE_V_DWH_TSEFBILDATI **/

/*==========================================================================* 
 * Step:            Обновить DDS - конец                  A569C89V.AS0005ME * 
 * Transform:       Транзакция - конец                                      * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A569C89V.AS0005ME);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_txn_finish.sas 3468 2012-10-09 07:48:42Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Завершает транзакцию по обновлению DDS.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%etl_transaction_finish;



%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Обновить DDS - конец **/

/*==========================================================================* 
 * Step:            Завершить модуль                      A569C89V.AS0005MF * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A569C89V.AS0005MF);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 247 2012-04-03 07:31:10Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;

   /* Продолжаем модуль */
   %job_continue_reg(mpJobType=JOB, mpJobName=&ETLS_JobName., mpPostEvent=N);

   /* Завершаем модуль */
   %job_finish_reg(mpJobType=JOB);

%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);



/**  Job end 081_911_Commit_Ace_Reference **/

/* Reset jobid and name */
%let jobID = %quote(A569C89V.AQ0000DX);
%let etls_jobName = %nrquote(090_814_Stream_Ace_DDS);

/*==========================================================================* 
 * Step:            Завершить модуль                      A569C89V.AS0004EP * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A569C89V.AS0004EP);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 


/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 247 2012-04-03 07:31:10Z nesterenok $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;

   /* Продолжаем модуль */
   %job_continue_reg(mpJobType=JOB, mpJobName=&ETLS_JobName., mpPostEvent=N);

   /* Завершаем модуль */
   %job_finish_reg(mpJobType=JOB);

%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/**  Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);

